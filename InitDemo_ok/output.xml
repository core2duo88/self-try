<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170918 12:23:25.518" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/var/opt/OpenECOMP_ETE" id="s1" name="OpenECOMP ETE">
<suite source="/var/opt/OpenECOMP_ETE/robot" id="s1-s1" name="Robot">
<suite source="/var/opt/OpenECOMP_ETE/robot/testsuites" id="s1-s1-s1" name="Testsuites">
<suite source="/var/opt/OpenECOMP_ETE/robot/testsuites/demo.robot" id="s1-s1-s1-s1" name="Demo">
<test id="s1-s1-s1-s1-t1" name="Initialize Customer And Models">
<kw name="Load Customer And Models" library="demo_preload">
<doc>Use openECOMP to Orchestrate a service.</doc>
<arguments>
<arg>Demonstration</arg>
</arguments>
<msg timestamp="20170918 12:23:27.591" level="TRACE">Arguments: [ ${customer_name}='Demonstration' ]</msg>
<kw name="Load Customer" library="demo_preload">
<doc>Use openECOMP to Orchestrate a service.</doc>
<arguments>
<arg>${customer_name}</arg>
</arguments>
<msg timestamp="20170918 12:23:27.592" level="TRACE">Arguments: [ ${customer_name}='Demonstration' ]</msg>
<kw name="Setup Orchestrate VNF" library="vnf_orchestration_test_template">
<doc>Called before each test case to ensure tenant and region data</doc>
<arguments>
<arg>${GLOBAL_AAI_CLOUD_OWNER}</arg>
<arg>SharedNode</arg>
<arg>OwnerType</arg>
<arg>v1</arg>
<arg>CloudZone</arg>
</arguments>
<msg timestamp="20170918 12:23:27.593" level="TRACE">Arguments: [ ${cloud_owner}='Rackspace' | ${cloud_type}='SharedNode' | ${owner_defined_type}='OwnerType' | ${cloud_region_version}='v1' | ${cloud_zone}='CloudZone' ]</msg>
<kw name="Initialize Tenant From Openstack" library="vnf_orchestration_test_template">
<doc>Initialize the tenant test variables</doc>
<msg timestamp="20170918 12:23:27.594" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Openstack Auth Request" library="keystone_interface">
<doc>Runs an Openstack Auth Request and returns the token and service catalog. you need to include the token in future request's x-auth-token headers. Service catalog describes what can be called</doc>
<arguments>
<arg>auth</arg>
</arguments>
<msg timestamp="20170918 12:23:27.594" level="TRACE">Arguments: [ ${alias}='auth' | ${username}='' | ${password}='' ]</msg>
<kw name="Set Openstack Credentials" library="keystone_interface">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${username}</var>
<var>${password}</var>
</assign>
<msg timestamp="20170918 12:23:27.595" level="TRACE">Arguments: [ ${username}='' | ${password}='' ]</msg>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'${username}' != ''</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20170918 12:23:27.596" level="TRACE">Arguments: [ "'' != ''" | '${username}' | '${password}' ]</msg>
<msg timestamp="20170918 12:23:27.596" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:27.597" starttime="20170918 12:23:27.596"></status>
</kw>
<kw name="Get Openstack Credentials" library="keystone_interface">
<assign>
<var>${user}</var>
<var>${pass}</var>
</assign>
<msg timestamp="20170918 12:23:27.597" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:27.597" level="TRACE">Return: [b'admin', b'vmware']</msg>
<msg timestamp="20170918 12:23:27.598" level="INFO">${user} = admin</msg>
<msg timestamp="20170918 12:23:27.598" level="INFO">${pass} = vmware</msg>
<status status="PASS" endtime="20170918 12:23:27.598" starttime="20170918 12:23:27.597"></status>
</kw>
<msg timestamp="20170918 12:23:27.598" level="TRACE">Return: [b'admin', b'vmware']</msg>
<msg timestamp="20170918 12:23:27.598" level="INFO">${username} = admin</msg>
<msg timestamp="20170918 12:23:27.598" level="INFO">${password} = vmware</msg>
<status status="PASS" endtime="20170918 12:23:27.599" starttime="20170918 12:23:27.595"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>keystone</arg>
<arg>${GLOBAL_INJECTED_KEYSTONE}</arg>
<arg>verify=True</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:27.599" level="TRACE">Arguments: [ 'keystone' | b'http://10.154.2.225:5000' | verify='True' ]</msg>
<msg timestamp="20170918 12:23:27.600" level="INFO">Creating Session using : alias=keystone, url=http://10.154.2.225:5000, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<msg timestamp="20170918 12:23:27.600" level="DEBUG">Creating session: keystone</msg>
<msg timestamp="20170918 12:23:27.600" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:27.601" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:27.601" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707c2cc10&gt;</msg>
<msg timestamp="20170918 12:23:27.601" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707c2cc10&gt;</msg>
<status status="PASS" endtime="20170918 12:23:27.601" starttime="20170918 12:23:27.599"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:27.602" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:27.602" level="TRACE">Return: UUID('782e0400-b99d-4127-918a-efd1991f5962')</msg>
<msg timestamp="20170918 12:23:27.602" level="INFO">${uuid} = 782e0400-b99d-4127-918a-efd1991f5962</msg>
<status status="PASS" endtime="20170918 12:23:27.602" starttime="20170918 12:23:27.601"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${OPENSTACK_KEYSTONE_AUTH_BODY_FILE}</arg>
</arguments>
<assign>
<var>${data_template}</var>
</assign>
<msg timestamp="20170918 12:23:27.602" level="TRACE">Arguments: [ 'robot/assets/templates/keystone_get_auth.template' ]</msg>
<msg timestamp="20170918 12:23:27.603" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/keystone_get_auth.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/keystone_get_auth.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:27.604" level="TRACE">Return: '{\n  "auth": {\n    "tenantId" : "${tenantId}",\n    "passwordCredentials": {\n      "username": "${username}",\n      "password": "${password}"\n    }\n  }\n}\n'</msg>
<msg timestamp="20170918 12:23:27.604" level="INFO">${data_template} = {
  "auth": {
    "tenantId" : "${tenantId}",
    "passwordCredentials": {
      "username": "${username}",
      "password": "${password}"
    }
  }
}
</msg>
<status status="PASS" endtime="20170918 12:23:27.604" starttime="20170918 12:23:27.602"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>username=${username}</arg>
<arg>password=${password}</arg>
<arg>tenantId=${GLOBAL_INJECTED_OPENSTACK_TENANT_ID}</arg>
</arguments>
<assign>
<var>${arguments}</var>
</assign>
<msg timestamp="20170918 12:23:27.605" level="TRACE">Arguments: [ 'username=${username}' | 'password=${password}' | 'tenantId=${GLOBAL_INJECTED_OPENSTACK_TENANT_ID}' ]</msg>
<msg timestamp="20170918 12:23:27.606" level="TRACE">Return: {'password': b'vmware', 'tenantId': b'3893355a611d4a1b9b719740b59015b9', 'username': b'admin'}</msg>
<msg timestamp="20170918 12:23:27.606" level="INFO">${arguments} = {u'username': 'admin', u'password': 'vmware', u'tenantId': '3893355a611d4a1b9b719740b59015b9'}</msg>
<status status="PASS" endtime="20170918 12:23:27.606" starttime="20170918 12:23:27.604"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${data_template}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:27.607" level="TRACE">Arguments: [ ${json}='{\n  "auth": {\n    "tenantId" : "${tenantId}",\n    "passwordCredentials": {\n      "username": "${username}",\n      "password": "${password}"\n    }\n  }\n}\n' | ${arguments}={'password': b'vmware', 'tenantId': b'3893355a611d4a1b9b719740b59015b9', 'username': b'admin'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:27.608" level="TRACE">Arguments: [ '{\n  "auth": {\n    "tenantId" : "${tenantId}",\n    "passwordCredentials": {\n      "username": "${username}",\n      "password": "${password}"\n    }\n  }\n}\n' | {'password': b'vmware', 'tenantId': b'3893355a611d4a1b9b719740b59015b9', 'username': b'admin'} ]</msg>
<msg timestamp="20170918 12:23:27.609" level="TRACE">Return: '{\n  "auth": {\n    "tenantId" : "3893355a611d4a1b9b719740b59015b9",\n    "passwordCredentials": {\n      "username": "admin",\n      "password": "vmware"\n    }\n  }\n}\n'</msg>
<msg timestamp="20170918 12:23:27.609" level="INFO">${returned_string} = {
  "auth": {
    "tenantId" : "3893355a611d4a1b9b719740b59015b9",
    "passwordCredentials": {
      "username": "admin",
      "password": "vmware"
    }
  }
}
</msg>
<status status="PASS" endtime="20170918 12:23:27.609" starttime="20170918 12:23:27.608"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:27.609" level="TRACE">Arguments: [ '{\n  "auth": {\n    "tenantId" : "3893355a611d4a1b9b719740b59015b9",\n    "passwordCredentials": {\n      "username": "admin",\n      "password": "vmware"\n    }\n  }\n}\n' ]</msg>
<msg timestamp="20170918 12:23:27.610" level="INFO">To JSON using : content={
  "auth": {
    "tenantId" : "3893355a611d4a1b9b719740b59015b9",
    "passwordCredentials": {
      "username": "admin",
      "password": "vmware"
    }
  }
}
 </msg>
<msg timestamp="20170918 12:23:27.610" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:27.610" level="TRACE">Return: {'auth': {'passwordCredentials': {'password': 'vmware', 'username': 'admin'}, 'tenantId': '3893355a611d4a1b9b719740b59015b9'}}</msg>
<msg timestamp="20170918 12:23:27.610" level="INFO">${returned_json} = {u'auth': {u'passwordCredentials': {u'username': u'admin', u'password': u'vmware'}, u'tenantId': u'3893355a611d4a1b9b719740b59015b9'}}</msg>
<status status="PASS" endtime="20170918 12:23:27.610" starttime="20170918 12:23:27.609"></status>
</kw>
<msg timestamp="20170918 12:23:27.610" level="TRACE">Return: {'auth': {'passwordCredentials': {'password': 'vmware', 'username': 'admin'}, 'tenantId': '3893355a611d4a1b9b719740b59015b9'}}</msg>
<msg timestamp="20170918 12:23:27.611" level="INFO">${data} = {u'auth': {u'passwordCredentials': {u'username': u'admin', u'password': u'vmware'}, u'tenantId': u'3893355a611d4a1b9b719740b59015b9'}}</msg>
<status status="PASS" endtime="20170918 12:23:27.611" starttime="20170918 12:23:27.606"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${OPENSTACK_KEYSTONE_API_VERSION}${OPENSTACK_KEYSTONE_AUTH_PATH}</arg>
</arguments>
<assign>
<var>${data_path}</var>
</assign>
<msg timestamp="20170918 12:23:27.612" level="TRACE">Arguments: [ '/v2.0/tokens' ]</msg>
<msg timestamp="20170918 12:23:27.612" level="TRACE">Return: '/v2.0/tokens'</msg>
<msg timestamp="20170918 12:23:27.612" level="INFO">${data_path} = /v2.0/tokens</msg>
<status status="PASS" endtime="20170918 12:23:27.612" starttime="20170918 12:23:27.611"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:27.613" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:27.613" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-782e0400-b99d-4127-918a-efd1991f5962'}</msg>
<msg timestamp="20170918 12:23:27.613" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-782e0400-b99d-4127-918a-efd1991f5962', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:27.613" starttime="20170918 12:23:27.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Sending authenticate post request ${data_path} with headers ${headers} and data ${data}</arg>
</arguments>
<msg timestamp="20170918 12:23:27.614" level="TRACE">Arguments: [ "Sending authenticate post request /v2.0/tokens with headers {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-782e0400-b99d-4127-918a-efd1991f5962', u'X-FromAppId': u'robot-ete'} and data {u'auth': {u'passwordCredentials': {u'username': u'admin', u'password': u'vmware'}, u'tenantId': u'3893355a611d4a1b9b719740b59015b9'}}" ]</msg>
<msg timestamp="20170918 12:23:27.614" level="INFO">Sending authenticate post request /v2.0/tokens with headers {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-782e0400-b99d-4127-918a-efd1991f5962', u'X-FromAppId': u'robot-ete'} and data {u'auth': {u'passwordCredentials': {u'username': u'admin', u'password': u'vmware'}, u'tenantId': u'3893355a611d4a1b9b719740b59015b9'}}</msg>
<msg timestamp="20170918 12:23:27.614" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:27.614" starttime="20170918 12:23:27.614"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>keystone</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:27.615" level="TRACE">Arguments: [ 'keystone' | '/v2.0/tokens' | data={'auth': {'passwordCredentials': {'password': 'vmware', 'username': 'admin'}, 'tenantId': '3893355a611d4a1b9b719740b59015b9'}} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-782e0400-b99d-4127-918a-efd1991f5962'} ]</msg>
<msg timestamp="20170918 12:23:27.619" level="DEBUG">Starting new HTTP connection (1): 10.154.2.225</msg>
<msg timestamp="20170918 12:23:27.917" level="DEBUG">http://10.154.2.225:5000 "POST /v2.0/tokens HTTP/1.1" 200 4331</msg>
<msg timestamp="20170918 12:23:27.919" level="DEBUG">post response: {"access": {"token": {"issued_at": "2017-09-18T12:26:59.000000Z", "expires": "2017-09-18T14:26:59.000000Z", "id": "gAAAAABZv7uT_PPkckjQJYOeaDDq66YJnMYf9aY6QmLH2H4UpH2u2xNrVEj37beq7qQafz6BB-K_1dGePbvPpy6v2VIpSrV0dv2hbSNXHzqygAnefJfTp5Ul4yOih-9kWraatVyLLhvaWlxknLeyx2WDHhN17UkINSOeN-g2Av4-hqU1FE9uyzw", "tenant": {"description": "Bootstrap project for initializing the cloud.", "enabled": true, "id": "3893355a611d4a1b9b719740b59015b9", "name": "admin"}, "audit_ids": ["QROUWyjkQkGRwN8AWukd0w"]}, "serviceCatalog": [{"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "id": "232a64190c734ad6a4948b4995891f75", "publicURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute", "name": "nova"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9696", "region": "nova", "internalURL": "http://10.154.2.225:9696", "id": "99a4dd8af6654c07a513bae9c9e50a2f", "publicURL": "http://10.154.2.225:9696"}], "endpoints_links": [], "type": "network", "name": "neutron"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "id": "8b10dc3b21cd4526a896a7cee0850f2a", "publicURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev2", "name": "cinderv2"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "id": "03e2c484d8e8492aa19029b993eb197a", "publicURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev3", "name": "cinderv3"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9292", "region": "nova", "internalURL": "http://10.154.2.225:9292", "id": "4a7df5d6f62f4a32b7fb5fff03e8b67f", "publicURL": "http://10.154.2.225:9292"}], "endpoints_links": [], "type": "image", "name": "glance"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "id": "37a297c2bb134a42966e9c100b89be68", "publicURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute_legacy", "name": "nova_legacy"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8000/v1", "region": "nova", "internalURL": "http://10.154.2.225:8000/v1", "id": "10919fad1d7a42be86d5d34ebd46ff59", "publicURL": "http://10.154.2.225:8000/v1"}], "endpoints_links": [], "type": "cloudformation", "name": "heat-cfn"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "id": "18c95102363e40a1b81432f310ad5030", "publicURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volume", "name": "cinder"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "id": "0b5810d9ceb8492a835e3621e7b4616e", "publicURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "orchestration", "name": "heat"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8778", "region": "nova", "internalURL": "http://10.154.2.225:8778", "id": "5b17de4e91924247bec1c25ffced53a4", "publicURL": "http://10.154.2.225:8778"}], "endpoints_links": [], "type": "placement", "name": "placement"}, {"endpoints": [{"adminURL": "http://10.154.2.225:35357/v3", "region": "nova", "internalURL": "http://10.154.2.225:5000/v3", "id": "7091b6f2d66e46f4b24b25d3c4c342bc", "publicURL": "http://10.154.2.225:5000/v3"}], "endpoints_links": [], "type": "identity", "name": "keystone"}], "user": {"username": "admin", "roles_links": [], "id": "a4c4ffe5191c4aa19a8d71fc8e3b3a48", "roles": [{"name": "admin"}], "name": "admin"}, "metadata": {"is_admin": 0, "roles": ["499db76d8f00431685ebd3e6fdd41576"]}}}</msg>
<msg timestamp="20170918 12:23:27.919" level="INFO">Post Request using : alias=keystone, uri=/v2.0/tokens, data={"auth": {"passwordCredentials": {"username": "admin", "password": "vmware"}, "tenantId": "3893355a611d4a1b9b719740b59015b9"}},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-782e0400-b99d-4127-918a-efd1991f5962', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:27.919" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:27.919" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:27.919" starttime="20170918 12:23:27.615"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>200 &lt;= ${resp.status_code} &lt; 300</arg>
</arguments>
<msg timestamp="20170918 12:23:27.920" level="TRACE">Arguments: [ '200 &lt;= 200 &lt; 300' ]</msg>
<msg timestamp="20170918 12:23:27.920" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:27.920" starttime="20170918 12:23:27.920"></status>
</kw>
<kw name="Save Openstack Auth" library="OpenstackLibrary">
<doc>Save Openstack Auth takes in an openstack auth response and saves it to allow easy retrival of token and service catalog</doc>
<arguments>
<arg>${alias}</arg>
<arg>${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:27.921" level="TRACE">Arguments: [ 'auth' | '{"access": {"token": {"issued_at": "2017-09-18T12:26:59.000000Z", "expires": "2017-09-18T14:26:59.000000Z", "id": "gAAAAABZv7uT_PPkckjQJYOeaDDq66YJnMYf9aY6QmLH2H4UpH2u2xNrVEj37beq7qQafz6BB-K_1dGePbvPpy6v2VIpSrV0dv2hbSNXHzqygAnefJfTp5Ul4yOih-9kWraatVyLLhvaWlxknLeyx2WDHhN17UkINSOeN-g2Av4-hqU1FE9uyzw", "tenant": {"description": "Bootstrap project for initializing the cloud.", "enabled": true, "id": "3893355a611d4a1b9b719740b59015b9", "name": "admin"}, "audit_ids": ["QROUWyjkQkGRwN8AWukd0w"]}, "serviceCatalog": [{"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "id": "232a64190c734ad6a4948b4995891f75", "publicURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute", "name": "nova"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9696", "region": "nova", "internalURL": "http://10.154.2.225:9696", "id": "99a4dd8af6654c07a513bae9c9e50a2f", "publicURL": "http://10.154.2.225:9696"}], "endpoints_links": [], "type": "network", "name": "neutron"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "id": "8b10dc3b21cd4526a896a7cee0850f2a", "publicURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev2", "name": "cinderv2"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "id": "03e2c484d8e8492aa19029b993eb197a", "publicURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev3", "name": "cinderv3"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9292", "region": "nova", "internalURL": "http://10.154.2.225:9292", "id": "4a7df5d6f62f4a32b7fb5fff03e8b67f", "publicURL": "http://10.154.2.225:9292"}], "endpoints_links": [], "type": "image", "name": "glance"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "id": "37a297c2bb134a42966e9c100b89be68", "publicURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute_legacy", "name": "nova_legacy"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8000/v1", "region": "nova", "internalURL": "http://10.154.2.225:8000/v1", "id": "10919fad1d7a42be86d5d34ebd46ff59", "publicURL": "http://10.154.2.225:8000/v1"}], "endpoints_links": [], "type": "cloudformation", "name": "heat-cfn"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "id": "18c95102363e40a1b81432f310ad5030", "publicURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volume", "name": "cinder"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "id": "0b5810d9ceb8492a835e3621e7b4616e", "publicURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "orchestration", "name": "heat"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8778", "region": "nova", "internalURL": "http://10.154.2.225:8778", "id": "5b17de4e91924247bec1c25ffced53a4", "publicURL": "http://10.154.2.225:8778"}], "endpoints_links": [], "type": "placement", "name": "placement"}, {"endpoints": [{"adminURL": "http://10.154.2.225:35357/v3", "region": "nova", "internalURL": "http://10.154.2.225:5000/v3", "id": "7091b6f2d66e46f4b24b25d3c4c342bc", "publicURL": "http://10.154.2.225:5000/v3"}], "endpoints_links": [], "type": "identity", "name": "keystone"}], "user": {"username": "admin", "roles_links": [], "id": "a4c4ffe5191c4aa19a8d71fc8e3b3a48", "roles": [{"name": "admin"}], "name": "admin"}, "metadata": {"is_admin": 0, "roles": ["499db76d8f00431685ebd3e6fdd41576"]}}}' ]</msg>
<msg timestamp="20170918 12:23:27.922" level="DEBUG">Creating connection: auth</msg>
<msg timestamp="20170918 12:23:27.922" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:27.922" starttime="20170918 12:23:27.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from keystone ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:27.923" level="TRACE">Arguments: [ 'Received response from keystone {"access": {"token": {"issued_at": "2017-09-18T12:26:59.000000Z", "expires": "2017-09-18T14:26:59.000000Z", "id": "gAAAAABZv7uT_PPkckjQJYOeaDDq66YJnMYf9aY6QmLH2H4UpH2u2xNrVEj37beq7qQafz6BB-K_1dGePbvPpy6v2VIpSrV0dv2hbSNXHzqygAnefJfTp5Ul4yOih-9kWraatVyLLhvaWlxknLeyx2WDHhN17UkINSOeN-g2Av4-hqU1FE9uyzw", "tenant": {"description": "Bootstrap project for initializing the cloud.", "enabled": true, "id": "3893355a611d4a1b9b719740b59015b9", "name": "admin"}, "audit_ids": ["QROUWyjkQkGRwN8AWukd0w"]}, "serviceCatalog": [{"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "id": "232a64190c734ad6a4948b4995891f75", "publicURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute", "name": "nova"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9696", "region": "nova", "internalURL": "http://10.154.2.225:9696", "id": "99a4dd8af6654c07a513bae9c9e50a2f", "publicURL": "http://10.154.2.225:9696"}], "endpoints_links": [], "type": "network", "name": "neutron"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "id": "8b10dc3b21cd4526a896a7cee0850f2a", "publicURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev2", "name": "cinderv2"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "id": "03e2c484d8e8492aa19029b993eb197a", "publicURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev3", "name": "cinderv3"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9292", "region": "nova", "internalURL": "http://10.154.2.225:9292", "id": "4a7df5d6f62f4a32b7fb5fff03e8b67f", "publicURL": "http://10.154.2.225:9292"}], "endpoints_links": [], "type": "image", "name": "glance"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "id": "37a297c2bb134a42966e9c100b89be68", "publicURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute_legacy", "name": "nova_legacy"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8000/v1", "region": "nova", "internalURL": "http://10.154.2.225:8000/v1", "id": "10919fad1d7a42be86d5d34ebd46ff59", "publicURL": "http://10.154.2.225:8000/v1"}], "endpoints_links": [], "type": "cloudformation", "name": "heat-cfn"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "id": "18c95102363e40a1b81432f310ad5030", "publicURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volume", "name": "cinder"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "id": "0b5810d9ceb8492a835e3621e7b4616e", "publicURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "orchestration", "name": "heat"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8778", "region": "nova", "internalURL": "http://10.154.2.225:8778", "id": "5b17de4e91924247bec1c25ffced53a4", "publicURL": "http://10.154.2.225:8778"}], "endpoints_links": [], "type": "placement", "name": "placement"}, {"endpoints": [{"adminURL": "http://10.154.2.225:35357/v3", "region": "nova", "internalURL": "http://10.154.2.225:5000/v3", "id": "7091b6f2d66e46f4b24b25d3c4c342bc", "publicURL": "http://10.154.2.225:5000/v3"}], "endpoints_links": [], "type": "identity", "name": "keystone"}], "user": {"username": "admin", "roles_links": [], "id": "a4c4ffe5191c4aa19a8d71fc8e3b3a48", "roles": [{"name": "admin"}], "name": "admin"}, "metadata": {"is_admin": 0, "roles": ["499db76d8f00431685ebd3e6fdd41576"]}}}' ]</msg>
<msg timestamp="20170918 12:23:27.923" level="INFO">Received response from keystone {"access": {"token": {"issued_at": "2017-09-18T12:26:59.000000Z", "expires": "2017-09-18T14:26:59.000000Z", "id": "gAAAAABZv7uT_PPkckjQJYOeaDDq66YJnMYf9aY6QmLH2H4UpH2u2xNrVEj37beq7qQafz6BB-K_1dGePbvPpy6v2VIpSrV0dv2hbSNXHzqygAnefJfTp5Ul4yOih-9kWraatVyLLhvaWlxknLeyx2WDHhN17UkINSOeN-g2Av4-hqU1FE9uyzw", "tenant": {"description": "Bootstrap project for initializing the cloud.", "enabled": true, "id": "3893355a611d4a1b9b719740b59015b9", "name": "admin"}, "audit_ids": ["QROUWyjkQkGRwN8AWukd0w"]}, "serviceCatalog": [{"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "id": "232a64190c734ad6a4948b4995891f75", "publicURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute", "name": "nova"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9696", "region": "nova", "internalURL": "http://10.154.2.225:9696", "id": "99a4dd8af6654c07a513bae9c9e50a2f", "publicURL": "http://10.154.2.225:9696"}], "endpoints_links": [], "type": "network", "name": "neutron"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "id": "8b10dc3b21cd4526a896a7cee0850f2a", "publicURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev2", "name": "cinderv2"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "id": "03e2c484d8e8492aa19029b993eb197a", "publicURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev3", "name": "cinderv3"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9292", "region": "nova", "internalURL": "http://10.154.2.225:9292", "id": "4a7df5d6f62f4a32b7fb5fff03e8b67f", "publicURL": "http://10.154.2.225:9292"}], "endpoints_links": [], "type": "image", "name": "glance"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "id": "37a297c2bb134a42966e9c100b89be68", "publicURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute_legacy", "name": "nova_legacy"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8000/v1", "region": "nova", "internalURL": "http://10.154.2.225:8000/v1", "id": "10919fad1d7a42be86d5d34ebd46ff59", "publicURL": "http://10.154.2.225:8000/v1"}], "endpoints_links": [], "type": "cloudformation", "name": "heat-cfn"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "id": "18c95102363e40a1b81432f310ad5030", "publicURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volume", "name": "cinder"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "id": "0b5810d9ceb8492a835e3621e7b4616e", "publicURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "orchestration", "name": "heat"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8778", "region": "nova", "internalURL": "http://10.154.2.225:8778", "id": "5b17de4e91924247bec1c25ffced53a4", "publicURL": "http://10.154.2.225:8778"}], "endpoints_links": [], "type": "placement", "name": "placement"}, {"endpoints": [{"adminURL": "http://10.154.2.225:35357/v3", "region": "nova", "internalURL": "http://10.154.2.225:5000/v3", "id": "7091b6f2d66e46f4b24b25d3c4c342bc", "publicURL": "http://10.154.2.225:5000/v3"}], "endpoints_links": [], "type": "identity", "name": "keystone"}], "user": {"username": "admin", "roles_links": [], "id": "a4c4ffe5191c4aa19a8d71fc8e3b3a48", "roles": [{"name": "admin"}], "name": "admin"}, "metadata": {"is_admin": 0, "roles": ["499db76d8f00431685ebd3e6fdd41576"]}}}</msg>
<msg timestamp="20170918 12:23:27.923" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:27.923" starttime="20170918 12:23:27.922"></status>
</kw>
<msg timestamp="20170918 12:23:27.923" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:27.924" starttime="20170918 12:23:27.594"></status>
</kw>
<kw name="Get Current Openstack Tenant" library="OpenstackLibrary">
<doc>Get Openstack tenant from the current alias</doc>
<arguments>
<arg>auth</arg>
</arguments>
<assign>
<var>${tenants}</var>
</assign>
<msg timestamp="20170918 12:23:27.924" level="TRACE">Arguments: [ 'auth' ]</msg>
<msg timestamp="20170918 12:23:27.925" level="TRACE">Return: {'description': 'Bootstrap project for initializing the cloud.', 'enabled': True, 'id': '3893355a611d4a1b9b719740b59015b9', 'name': 'admin'}</msg>
<msg timestamp="20170918 12:23:27.925" level="INFO">${tenants} = {u'enabled': True, u'description': u'Bootstrap project for initializing the cloud.', u'name': u'admin', u'id': u'3893355a611d4a1b9b719740b59015b9'}</msg>
<status status="PASS" endtime="20170918 12:23:27.925" starttime="20170918 12:23:27.924"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$tenants.get("name")</arg>
</arguments>
<assign>
<var>${tenant_name}</var>
</assign>
<msg timestamp="20170918 12:23:27.926" level="TRACE">Arguments: [ '$tenants.get("name")' ]</msg>
<msg timestamp="20170918 12:23:27.932" level="TRACE">Return: 'admin'</msg>
<msg timestamp="20170918 12:23:27.932" level="INFO">${tenant_name} = admin</msg>
<status status="PASS" endtime="20170918 12:23:27.933" starttime="20170918 12:23:27.926"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$tenants.get("id")</arg>
</arguments>
<assign>
<var>${tenant_id}</var>
</assign>
<msg timestamp="20170918 12:23:27.933" level="TRACE">Arguments: [ '$tenants.get("id")' ]</msg>
<msg timestamp="20170918 12:23:27.939" level="TRACE">Return: '3893355a611d4a1b9b719740b59015b9'</msg>
<msg timestamp="20170918 12:23:27.939" level="INFO">${tenant_id} = 3893355a611d4a1b9b719740b59015b9</msg>
<status status="PASS" endtime="20170918 12:23:27.939" starttime="20170918 12:23:27.933"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TENANT_NAME}</arg>
<arg>${tenant_name}</arg>
</arguments>
<msg timestamp="20170918 12:23:27.940" level="TRACE">Arguments: [ '${TENANT_NAME}' | '${tenant_name}' ]</msg>
<msg timestamp="20170918 12:23:27.940" level="INFO">${TENANT_NAME} = admin</msg>
<msg timestamp="20170918 12:23:27.940" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:27.940" starttime="20170918 12:23:27.940"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TENANT_ID}</arg>
<arg>${tenant_id}</arg>
</arguments>
<msg timestamp="20170918 12:23:27.941" level="TRACE">Arguments: [ '${TENANT_ID}' | '${tenant_id}' ]</msg>
<msg timestamp="20170918 12:23:27.941" level="INFO">${TENANT_ID} = 3893355a611d4a1b9b719740b59015b9</msg>
<msg timestamp="20170918 12:23:27.941" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:27.942" starttime="20170918 12:23:27.941"></status>
</kw>
<msg timestamp="20170918 12:23:27.942" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:27.942" starttime="20170918 12:23:27.594"></status>
</kw>
<kw name="Initialize Regions From Openstack" library="vnf_orchestration_test_template">
<doc>Initialize the regions test variable</doc>
<msg timestamp="20170918 12:23:27.942" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Openstack Auth Request" library="keystone_interface">
<doc>Runs an Openstack Auth Request and returns the token and service catalog. you need to include the token in future request's x-auth-token headers. Service catalog describes what can be called</doc>
<arguments>
<arg>auth</arg>
</arguments>
<msg timestamp="20170918 12:23:27.943" level="TRACE">Arguments: [ ${alias}='auth' | ${username}='' | ${password}='' ]</msg>
<kw name="Set Openstack Credentials" library="keystone_interface">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${username}</var>
<var>${password}</var>
</assign>
<msg timestamp="20170918 12:23:27.944" level="TRACE">Arguments: [ ${username}='' | ${password}='' ]</msg>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'${username}' != ''</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20170918 12:23:27.945" level="TRACE">Arguments: [ "'' != ''" | '${username}' | '${password}' ]</msg>
<msg timestamp="20170918 12:23:27.945" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:27.945" starttime="20170918 12:23:27.945"></status>
</kw>
<kw name="Get Openstack Credentials" library="keystone_interface">
<assign>
<var>${user}</var>
<var>${pass}</var>
</assign>
<msg timestamp="20170918 12:23:27.946" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:27.946" level="TRACE">Return: [b'admin', b'vmware']</msg>
<msg timestamp="20170918 12:23:27.946" level="INFO">${user} = admin</msg>
<msg timestamp="20170918 12:23:27.946" level="INFO">${pass} = vmware</msg>
<status status="PASS" endtime="20170918 12:23:27.946" starttime="20170918 12:23:27.945"></status>
</kw>
<msg timestamp="20170918 12:23:27.947" level="TRACE">Return: [b'admin', b'vmware']</msg>
<msg timestamp="20170918 12:23:27.947" level="INFO">${username} = admin</msg>
<msg timestamp="20170918 12:23:27.947" level="INFO">${password} = vmware</msg>
<status status="PASS" endtime="20170918 12:23:27.947" starttime="20170918 12:23:27.944"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>keystone</arg>
<arg>${GLOBAL_INJECTED_KEYSTONE}</arg>
<arg>verify=True</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:27.948" level="TRACE">Arguments: [ 'keystone' | b'http://10.154.2.225:5000' | verify='True' ]</msg>
<msg timestamp="20170918 12:23:27.948" level="INFO">Creating Session using : alias=keystone, url=http://10.154.2.225:5000, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<msg timestamp="20170918 12:23:27.948" level="DEBUG">Creating session: keystone</msg>
<msg timestamp="20170918 12:23:27.948" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:27.948" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:27.948" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707b86a50&gt;</msg>
<msg timestamp="20170918 12:23:27.949" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707b86a50&gt;</msg>
<status status="PASS" endtime="20170918 12:23:27.949" starttime="20170918 12:23:27.947"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:27.949" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:27.949" level="TRACE">Return: UUID('e97be608-ba92-4acd-8c9a-43a5a1cd9c7f')</msg>
<msg timestamp="20170918 12:23:27.950" level="INFO">${uuid} = e97be608-ba92-4acd-8c9a-43a5a1cd9c7f</msg>
<status status="PASS" endtime="20170918 12:23:27.950" starttime="20170918 12:23:27.949"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${OPENSTACK_KEYSTONE_AUTH_BODY_FILE}</arg>
</arguments>
<assign>
<var>${data_template}</var>
</assign>
<msg timestamp="20170918 12:23:27.950" level="TRACE">Arguments: [ 'robot/assets/templates/keystone_get_auth.template' ]</msg>
<msg timestamp="20170918 12:23:27.950" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/keystone_get_auth.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/keystone_get_auth.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:27.951" level="TRACE">Return: '{\n  "auth": {\n    "tenantId" : "${tenantId}",\n    "passwordCredentials": {\n      "username": "${username}",\n      "password": "${password}"\n    }\n  }\n}\n'</msg>
<msg timestamp="20170918 12:23:27.951" level="INFO">${data_template} = {
  "auth": {
    "tenantId" : "${tenantId}",
    "passwordCredentials": {
      "username": "${username}",
      "password": "${password}"
    }
  }
}
</msg>
<status status="PASS" endtime="20170918 12:23:27.951" starttime="20170918 12:23:27.950"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>username=${username}</arg>
<arg>password=${password}</arg>
<arg>tenantId=${GLOBAL_INJECTED_OPENSTACK_TENANT_ID}</arg>
</arguments>
<assign>
<var>${arguments}</var>
</assign>
<msg timestamp="20170918 12:23:27.951" level="TRACE">Arguments: [ 'username=${username}' | 'password=${password}' | 'tenantId=${GLOBAL_INJECTED_OPENSTACK_TENANT_ID}' ]</msg>
<msg timestamp="20170918 12:23:27.952" level="TRACE">Return: {'password': b'vmware', 'tenantId': b'3893355a611d4a1b9b719740b59015b9', 'username': b'admin'}</msg>
<msg timestamp="20170918 12:23:27.952" level="INFO">${arguments} = {u'username': 'admin', u'password': 'vmware', u'tenantId': '3893355a611d4a1b9b719740b59015b9'}</msg>
<status status="PASS" endtime="20170918 12:23:27.952" starttime="20170918 12:23:27.951"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${data_template}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:27.953" level="TRACE">Arguments: [ ${json}='{\n  "auth": {\n    "tenantId" : "${tenantId}",\n    "passwordCredentials": {\n      "username": "${username}",\n      "password": "${password}"\n    }\n  }\n}\n' | ${arguments}={'password': b'vmware', 'tenantId': b'3893355a611d4a1b9b719740b59015b9', 'username': b'admin'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:27.954" level="TRACE">Arguments: [ '{\n  "auth": {\n    "tenantId" : "${tenantId}",\n    "passwordCredentials": {\n      "username": "${username}",\n      "password": "${password}"\n    }\n  }\n}\n' | {'password': b'vmware', 'tenantId': b'3893355a611d4a1b9b719740b59015b9', 'username': b'admin'} ]</msg>
<msg timestamp="20170918 12:23:27.954" level="TRACE">Return: '{\n  "auth": {\n    "tenantId" : "3893355a611d4a1b9b719740b59015b9",\n    "passwordCredentials": {\n      "username": "admin",\n      "password": "vmware"\n    }\n  }\n}\n'</msg>
<msg timestamp="20170918 12:23:27.954" level="INFO">${returned_string} = {
  "auth": {
    "tenantId" : "3893355a611d4a1b9b719740b59015b9",
    "passwordCredentials": {
      "username": "admin",
      "password": "vmware"
    }
  }
}
</msg>
<status status="PASS" endtime="20170918 12:23:27.955" starttime="20170918 12:23:27.954"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:27.955" level="TRACE">Arguments: [ '{\n  "auth": {\n    "tenantId" : "3893355a611d4a1b9b719740b59015b9",\n    "passwordCredentials": {\n      "username": "admin",\n      "password": "vmware"\n    }\n  }\n}\n' ]</msg>
<msg timestamp="20170918 12:23:27.955" level="INFO">To JSON using : content={
  "auth": {
    "tenantId" : "3893355a611d4a1b9b719740b59015b9",
    "passwordCredentials": {
      "username": "admin",
      "password": "vmware"
    }
  }
}
 </msg>
<msg timestamp="20170918 12:23:27.955" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:27.956" level="TRACE">Return: {'auth': {'passwordCredentials': {'password': 'vmware', 'username': 'admin'}, 'tenantId': '3893355a611d4a1b9b719740b59015b9'}}</msg>
<msg timestamp="20170918 12:23:27.956" level="INFO">${returned_json} = {u'auth': {u'passwordCredentials': {u'username': u'admin', u'password': u'vmware'}, u'tenantId': u'3893355a611d4a1b9b719740b59015b9'}}</msg>
<status status="PASS" endtime="20170918 12:23:27.956" starttime="20170918 12:23:27.955"></status>
</kw>
<msg timestamp="20170918 12:23:27.956" level="TRACE">Return: {'auth': {'passwordCredentials': {'password': 'vmware', 'username': 'admin'}, 'tenantId': '3893355a611d4a1b9b719740b59015b9'}}</msg>
<msg timestamp="20170918 12:23:27.956" level="INFO">${data} = {u'auth': {u'passwordCredentials': {u'username': u'admin', u'password': u'vmware'}, u'tenantId': u'3893355a611d4a1b9b719740b59015b9'}}</msg>
<status status="PASS" endtime="20170918 12:23:27.956" starttime="20170918 12:23:27.953"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${OPENSTACK_KEYSTONE_API_VERSION}${OPENSTACK_KEYSTONE_AUTH_PATH}</arg>
</arguments>
<assign>
<var>${data_path}</var>
</assign>
<msg timestamp="20170918 12:23:27.957" level="TRACE">Arguments: [ '/v2.0/tokens' ]</msg>
<msg timestamp="20170918 12:23:27.957" level="TRACE">Return: '/v2.0/tokens'</msg>
<msg timestamp="20170918 12:23:27.957" level="INFO">${data_path} = /v2.0/tokens</msg>
<status status="PASS" endtime="20170918 12:23:27.957" starttime="20170918 12:23:27.957"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:27.958" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:27.959" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-e97be608-ba92-4acd-8c9a-43a5a1cd9c7f'}</msg>
<msg timestamp="20170918 12:23:27.959" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-e97be608-ba92-4acd-8c9a-43a5a1cd9c7f', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:27.959" starttime="20170918 12:23:27.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Sending authenticate post request ${data_path} with headers ${headers} and data ${data}</arg>
</arguments>
<msg timestamp="20170918 12:23:27.960" level="TRACE">Arguments: [ "Sending authenticate post request /v2.0/tokens with headers {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-e97be608-ba92-4acd-8c9a-43a5a1cd9c7f', u'X-FromAppId': u'robot-ete'} and data {u'auth': {u'passwordCredentials': {u'username': u'admin', u'password': u'vmware'}, u'tenantId': u'3893355a611d4a1b9b719740b59015b9'}}" ]</msg>
<msg timestamp="20170918 12:23:27.960" level="INFO">Sending authenticate post request /v2.0/tokens with headers {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-e97be608-ba92-4acd-8c9a-43a5a1cd9c7f', u'X-FromAppId': u'robot-ete'} and data {u'auth': {u'passwordCredentials': {u'username': u'admin', u'password': u'vmware'}, u'tenantId': u'3893355a611d4a1b9b719740b59015b9'}}</msg>
<msg timestamp="20170918 12:23:27.960" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:27.960" starttime="20170918 12:23:27.960"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>keystone</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:27.961" level="TRACE">Arguments: [ 'keystone' | '/v2.0/tokens' | data={'auth': {'passwordCredentials': {'password': 'vmware', 'username': 'admin'}, 'tenantId': '3893355a611d4a1b9b719740b59015b9'}} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-e97be608-ba92-4acd-8c9a-43a5a1cd9c7f'} ]</msg>
<msg timestamp="20170918 12:23:27.963" level="DEBUG">Starting new HTTP connection (1): 10.154.2.225</msg>
<msg timestamp="20170918 12:23:28.220" level="DEBUG">http://10.154.2.225:5000 "POST /v2.0/tokens HTTP/1.1" 200 4331</msg>
<msg timestamp="20170918 12:23:28.221" level="DEBUG">post response: {"access": {"token": {"issued_at": "2017-09-18T12:27:00.000000Z", "expires": "2017-09-18T14:27:00.000000Z", "id": "gAAAAABZv7uUygUnCP_6cMmyi7qHOAN7tAdYTRrmTkD9cLf78N0F-8myETOfPi-pNJhRYsYLe2WNiN-a_IFWLMYnW_AkDaZyBjyODzVJSqVbWzEqxziB2beqS9dSKwahl9ptYWLOUIfaD45h6CVHg3VI4p3LyBwvopJoDPtxdbklsTMea5CAflI", "tenant": {"description": "Bootstrap project for initializing the cloud.", "enabled": true, "id": "3893355a611d4a1b9b719740b59015b9", "name": "admin"}, "audit_ids": ["BeoADYR_R0e1ra4XSTVbkg"]}, "serviceCatalog": [{"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "id": "232a64190c734ad6a4948b4995891f75", "publicURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute", "name": "nova"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9696", "region": "nova", "internalURL": "http://10.154.2.225:9696", "id": "99a4dd8af6654c07a513bae9c9e50a2f", "publicURL": "http://10.154.2.225:9696"}], "endpoints_links": [], "type": "network", "name": "neutron"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "id": "8b10dc3b21cd4526a896a7cee0850f2a", "publicURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev2", "name": "cinderv2"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "id": "03e2c484d8e8492aa19029b993eb197a", "publicURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev3", "name": "cinderv3"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9292", "region": "nova", "internalURL": "http://10.154.2.225:9292", "id": "4a7df5d6f62f4a32b7fb5fff03e8b67f", "publicURL": "http://10.154.2.225:9292"}], "endpoints_links": [], "type": "image", "name": "glance"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "id": "37a297c2bb134a42966e9c100b89be68", "publicURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute_legacy", "name": "nova_legacy"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8000/v1", "region": "nova", "internalURL": "http://10.154.2.225:8000/v1", "id": "10919fad1d7a42be86d5d34ebd46ff59", "publicURL": "http://10.154.2.225:8000/v1"}], "endpoints_links": [], "type": "cloudformation", "name": "heat-cfn"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "id": "18c95102363e40a1b81432f310ad5030", "publicURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volume", "name": "cinder"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "id": "0b5810d9ceb8492a835e3621e7b4616e", "publicURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "orchestration", "name": "heat"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8778", "region": "nova", "internalURL": "http://10.154.2.225:8778", "id": "5b17de4e91924247bec1c25ffced53a4", "publicURL": "http://10.154.2.225:8778"}], "endpoints_links": [], "type": "placement", "name": "placement"}, {"endpoints": [{"adminURL": "http://10.154.2.225:35357/v3", "region": "nova", "internalURL": "http://10.154.2.225:5000/v3", "id": "7091b6f2d66e46f4b24b25d3c4c342bc", "publicURL": "http://10.154.2.225:5000/v3"}], "endpoints_links": [], "type": "identity", "name": "keystone"}], "user": {"username": "admin", "roles_links": [], "id": "a4c4ffe5191c4aa19a8d71fc8e3b3a48", "roles": [{"name": "admin"}], "name": "admin"}, "metadata": {"is_admin": 0, "roles": ["499db76d8f00431685ebd3e6fdd41576"]}}}</msg>
<msg timestamp="20170918 12:23:28.221" level="INFO">Post Request using : alias=keystone, uri=/v2.0/tokens, data={"auth": {"passwordCredentials": {"username": "admin", "password": "vmware"}, "tenantId": "3893355a611d4a1b9b719740b59015b9"}},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-e97be608-ba92-4acd-8c9a-43a5a1cd9c7f', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:28.221" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:28.221" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:28.221" starttime="20170918 12:23:27.961"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>200 &lt;= ${resp.status_code} &lt; 300</arg>
</arguments>
<msg timestamp="20170918 12:23:28.223" level="TRACE">Arguments: [ '200 &lt;= 200 &lt; 300' ]</msg>
<msg timestamp="20170918 12:23:28.223" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.223" starttime="20170918 12:23:28.222"></status>
</kw>
<kw name="Save Openstack Auth" library="OpenstackLibrary">
<doc>Save Openstack Auth takes in an openstack auth response and saves it to allow easy retrival of token and service catalog</doc>
<arguments>
<arg>${alias}</arg>
<arg>${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:28.224" level="TRACE">Arguments: [ 'auth' | '{"access": {"token": {"issued_at": "2017-09-18T12:27:00.000000Z", "expires": "2017-09-18T14:27:00.000000Z", "id": "gAAAAABZv7uUygUnCP_6cMmyi7qHOAN7tAdYTRrmTkD9cLf78N0F-8myETOfPi-pNJhRYsYLe2WNiN-a_IFWLMYnW_AkDaZyBjyODzVJSqVbWzEqxziB2beqS9dSKwahl9ptYWLOUIfaD45h6CVHg3VI4p3LyBwvopJoDPtxdbklsTMea5CAflI", "tenant": {"description": "Bootstrap project for initializing the cloud.", "enabled": true, "id": "3893355a611d4a1b9b719740b59015b9", "name": "admin"}, "audit_ids": ["BeoADYR_R0e1ra4XSTVbkg"]}, "serviceCatalog": [{"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "id": "232a64190c734ad6a4948b4995891f75", "publicURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute", "name": "nova"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9696", "region": "nova", "internalURL": "http://10.154.2.225:9696", "id": "99a4dd8af6654c07a513bae9c9e50a2f", "publicURL": "http://10.154.2.225:9696"}], "endpoints_links": [], "type": "network", "name": "neutron"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "id": "8b10dc3b21cd4526a896a7cee0850f2a", "publicURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev2", "name": "cinderv2"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "id": "03e2c484d8e8492aa19029b993eb197a", "publicURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev3", "name": "cinderv3"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9292", "region": "nova", "internalURL": "http://10.154.2.225:9292", "id": "4a7df5d6f62f4a32b7fb5fff03e8b67f", "publicURL": "http://10.154.2.225:9292"}], "endpoints_links": [], "type": "image", "name": "glance"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "id": "37a297c2bb134a42966e9c100b89be68", "publicURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute_legacy", "name": "nova_legacy"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8000/v1", "region": "nova", "internalURL": "http://10.154.2.225:8000/v1", "id": "10919fad1d7a42be86d5d34ebd46ff59", "publicURL": "http://10.154.2.225:8000/v1"}], "endpoints_links": [], "type": "cloudformation", "name": "heat-cfn"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "id": "18c95102363e40a1b81432f310ad5030", "publicURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volume", "name": "cinder"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "id": "0b5810d9ceb8492a835e3621e7b4616e", "publicURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "orchestration", "name": "heat"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8778", "region": "nova", "internalURL": "http://10.154.2.225:8778", "id": "5b17de4e91924247bec1c25ffced53a4", "publicURL": "http://10.154.2.225:8778"}], "endpoints_links": [], "type": "placement", "name": "placement"}, {"endpoints": [{"adminURL": "http://10.154.2.225:35357/v3", "region": "nova", "internalURL": "http://10.154.2.225:5000/v3", "id": "7091b6f2d66e46f4b24b25d3c4c342bc", "publicURL": "http://10.154.2.225:5000/v3"}], "endpoints_links": [], "type": "identity", "name": "keystone"}], "user": {"username": "admin", "roles_links": [], "id": "a4c4ffe5191c4aa19a8d71fc8e3b3a48", "roles": [{"name": "admin"}], "name": "admin"}, "metadata": {"is_admin": 0, "roles": ["499db76d8f00431685ebd3e6fdd41576"]}}}' ]</msg>
<msg timestamp="20170918 12:23:28.225" level="DEBUG">Creating connection: auth</msg>
<msg timestamp="20170918 12:23:28.225" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.225" starttime="20170918 12:23:28.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from keystone ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:28.226" level="TRACE">Arguments: [ 'Received response from keystone {"access": {"token": {"issued_at": "2017-09-18T12:27:00.000000Z", "expires": "2017-09-18T14:27:00.000000Z", "id": "gAAAAABZv7uUygUnCP_6cMmyi7qHOAN7tAdYTRrmTkD9cLf78N0F-8myETOfPi-pNJhRYsYLe2WNiN-a_IFWLMYnW_AkDaZyBjyODzVJSqVbWzEqxziB2beqS9dSKwahl9ptYWLOUIfaD45h6CVHg3VI4p3LyBwvopJoDPtxdbklsTMea5CAflI", "tenant": {"description": "Bootstrap project for initializing the cloud.", "enabled": true, "id": "3893355a611d4a1b9b719740b59015b9", "name": "admin"}, "audit_ids": ["BeoADYR_R0e1ra4XSTVbkg"]}, "serviceCatalog": [{"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "id": "232a64190c734ad6a4948b4995891f75", "publicURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute", "name": "nova"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9696", "region": "nova", "internalURL": "http://10.154.2.225:9696", "id": "99a4dd8af6654c07a513bae9c9e50a2f", "publicURL": "http://10.154.2.225:9696"}], "endpoints_links": [], "type": "network", "name": "neutron"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "id": "8b10dc3b21cd4526a896a7cee0850f2a", "publicURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev2", "name": "cinderv2"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "id": "03e2c484d8e8492aa19029b993eb197a", "publicURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev3", "name": "cinderv3"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9292", "region": "nova", "internalURL": "http://10.154.2.225:9292", "id": "4a7df5d6f62f4a32b7fb5fff03e8b67f", "publicURL": "http://10.154.2.225:9292"}], "endpoints_links": [], "type": "image", "name": "glance"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "id": "37a297c2bb134a42966e9c100b89be68", "publicURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute_legacy", "name": "nova_legacy"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8000/v1", "region": "nova", "internalURL": "http://10.154.2.225:8000/v1", "id": "10919fad1d7a42be86d5d34ebd46ff59", "publicURL": "http://10.154.2.225:8000/v1"}], "endpoints_links": [], "type": "cloudformation", "name": "heat-cfn"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "id": "18c95102363e40a1b81432f310ad5030", "publicURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volume", "name": "cinder"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "id": "0b5810d9ceb8492a835e3621e7b4616e", "publicURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "orchestration", "name": "heat"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8778", "region": "nova", "internalURL": "http://10.154.2.225:8778", "id": "5b17de4e91924247bec1c25ffced53a4", "publicURL": "http://10.154.2.225:8778"}], "endpoints_links": [], "type": "placement", "name": "placement"}, {"endpoints": [{"adminURL": "http://10.154.2.225:35357/v3", "region": "nova", "internalURL": "http://10.154.2.225:5000/v3", "id": "7091b6f2d66e46f4b24b25d3c4c342bc", "publicURL": "http://10.154.2.225:5000/v3"}], "endpoints_links": [], "type": "identity", "name": "keystone"}], "user": {"username": "admin", "roles_links": [], "id": "a4c4ffe5191c4aa19a8d71fc8e3b3a48", "roles": [{"name": "admin"}], "name": "admin"}, "metadata": {"is_admin": 0, "roles": ["499db76d8f00431685ebd3e6fdd41576"]}}}' ]</msg>
<msg timestamp="20170918 12:23:28.226" level="INFO">Received response from keystone {"access": {"token": {"issued_at": "2017-09-18T12:27:00.000000Z", "expires": "2017-09-18T14:27:00.000000Z", "id": "gAAAAABZv7uUygUnCP_6cMmyi7qHOAN7tAdYTRrmTkD9cLf78N0F-8myETOfPi-pNJhRYsYLe2WNiN-a_IFWLMYnW_AkDaZyBjyODzVJSqVbWzEqxziB2beqS9dSKwahl9ptYWLOUIfaD45h6CVHg3VI4p3LyBwvopJoDPtxdbklsTMea5CAflI", "tenant": {"description": "Bootstrap project for initializing the cloud.", "enabled": true, "id": "3893355a611d4a1b9b719740b59015b9", "name": "admin"}, "audit_ids": ["BeoADYR_R0e1ra4XSTVbkg"]}, "serviceCatalog": [{"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9", "id": "232a64190c734ad6a4948b4995891f75", "publicURL": "http://10.154.2.225:8774/v2.1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute", "name": "nova"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9696", "region": "nova", "internalURL": "http://10.154.2.225:9696", "id": "99a4dd8af6654c07a513bae9c9e50a2f", "publicURL": "http://10.154.2.225:9696"}], "endpoints_links": [], "type": "network", "name": "neutron"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9", "id": "8b10dc3b21cd4526a896a7cee0850f2a", "publicURL": "http://10.154.2.225:8776/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev2", "name": "cinderv2"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9", "id": "03e2c484d8e8492aa19029b993eb197a", "publicURL": "http://10.154.2.225:8776/v3/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volumev3", "name": "cinderv3"}, {"endpoints": [{"adminURL": "http://10.154.2.225:9292", "region": "nova", "internalURL": "http://10.154.2.225:9292", "id": "4a7df5d6f62f4a32b7fb5fff03e8b67f", "publicURL": "http://10.154.2.225:9292"}], "endpoints_links": [], "type": "image", "name": "glance"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9", "id": "37a297c2bb134a42966e9c100b89be68", "publicURL": "http://10.154.2.225:8774/v2/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "compute_legacy", "name": "nova_legacy"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8000/v1", "region": "nova", "internalURL": "http://10.154.2.225:8000/v1", "id": "10919fad1d7a42be86d5d34ebd46ff59", "publicURL": "http://10.154.2.225:8000/v1"}], "endpoints_links": [], "type": "cloudformation", "name": "heat-cfn"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9", "id": "18c95102363e40a1b81432f310ad5030", "publicURL": "http://10.154.2.225:8776/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "volume", "name": "cinder"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "region": "nova", "internalURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9", "id": "0b5810d9ceb8492a835e3621e7b4616e", "publicURL": "http://10.154.2.225:8004/v1/3893355a611d4a1b9b719740b59015b9"}], "endpoints_links": [], "type": "orchestration", "name": "heat"}, {"endpoints": [{"adminURL": "http://10.154.2.225:8778", "region": "nova", "internalURL": "http://10.154.2.225:8778", "id": "5b17de4e91924247bec1c25ffced53a4", "publicURL": "http://10.154.2.225:8778"}], "endpoints_links": [], "type": "placement", "name": "placement"}, {"endpoints": [{"adminURL": "http://10.154.2.225:35357/v3", "region": "nova", "internalURL": "http://10.154.2.225:5000/v3", "id": "7091b6f2d66e46f4b24b25d3c4c342bc", "publicURL": "http://10.154.2.225:5000/v3"}], "endpoints_links": [], "type": "identity", "name": "keystone"}], "user": {"username": "admin", "roles_links": [], "id": "a4c4ffe5191c4aa19a8d71fc8e3b3a48", "roles": [{"name": "admin"}], "name": "admin"}, "metadata": {"is_admin": 0, "roles": ["499db76d8f00431685ebd3e6fdd41576"]}}}</msg>
<msg timestamp="20170918 12:23:28.226" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.226" starttime="20170918 12:23:28.225"></status>
</kw>
<msg timestamp="20170918 12:23:28.226" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.227" starttime="20170918 12:23:27.943"></status>
</kw>
<kw name="Get Openstack Regions" library="OpenstackLibrary">
<doc>Get all Openstack regions from the current alias</doc>
<arguments>
<arg>auth</arg>
</arguments>
<assign>
<var>${regs}</var>
</assign>
<msg timestamp="20170918 12:23:28.227" level="TRACE">Arguments: [ 'auth' ]</msg>
<msg timestamp="20170918 12:23:28.227" level="TRACE">Return: ['nova']</msg>
<msg timestamp="20170918 12:23:28.228" level="INFO">${regs} = [u'nova']</msg>
<status status="PASS" endtime="20170918 12:23:28.228" starttime="20170918 12:23:28.227"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${REGIONS}</arg>
<arg>${regs}</arg>
</arguments>
<msg timestamp="20170918 12:23:28.228" level="TRACE">Arguments: [ '${REGIONS}' | '${regs}' ]</msg>
<msg timestamp="20170918 12:23:28.229" level="INFO">${REGIONS} = [u'nova']</msg>
<msg timestamp="20170918 12:23:28.229" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.229" starttime="20170918 12:23:28.228"></status>
</kw>
<msg timestamp="20170918 12:23:28.229" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.229" starttime="20170918 12:23:27.942"></status>
</kw>
<kw type="for" name="${region} IN [ @{REGIONS} ]">
<kw type="foritem" name="${region} = nova">
<kw name="Inventory Tenant If Not Exists" library="create_tenant">
<doc>Creates a service in A&amp;AI if it doesn't exist</doc>
<arguments>
<arg>${cloud_owner}</arg>
<arg>${region}</arg>
<arg>${cloud_type}</arg>
<arg>${owner_defined_type}</arg>
<arg>${cloud_region_version}</arg>
<arg>${cloud_zone}</arg>
<arg>${TENANT_ID}</arg>
<arg>${TENANT_NAME}</arg>
</arguments>
<msg timestamp="20170918 12:23:28.231" level="TRACE">Arguments: [ ${cloud_owner}='Rackspace' | ${cloud_region_id}='nova' | ${cloud_type}='SharedNode' | ${owner_defined_type}='OwnerType' | ${cloud_region_version}='v1' | ${cloud_zone}='CloudZone' | ${tenant_id}='3893355a611d4a1b9b719740b59015b9' | ${tenant_name}='admin' ]</msg>
<kw name="Get Tenants" library="create_tenant">
<doc>Return list of tenants for this cloud owner/region</doc>
<arguments>
<arg>${cloud_owner}</arg>
<arg>${cloud_region_id}</arg>
</arguments>
<assign>
<var>${dict}</var>
</assign>
<msg timestamp="20170918 12:23:28.232" level="TRACE">Arguments: [ ${cloud_owner}='Rackspace' | ${cloud_region_id}='nova' ]</msg>
<kw name="Run A&amp;AI Get Request" library="aai_interface">
<doc>Runs an A&amp;AI get request</doc>
<arguments>
<arg>${INDEX PATH}${ROOT_TENANT_PATH}${cloud_owner}/${cloud_region_id}/tenants</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:28.233" level="TRACE">Arguments: [ ${data_path}='/aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova/tenants' ]</msg>
<kw name="Disable Warnings" library="HTTPUtils">
<doc>Disable the cert warnings when creating sessions for A&amp;AI API Calls</doc>
<msg timestamp="20170918 12:23:28.234" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:28.234" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.234" starttime="20170918 12:23:28.234"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_AAI_USERNAME}</arg>
<arg>${GLOBAL_AAI_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:28.235" level="TRACE">Arguments: [ b'AAI' | b'AAI' ]</msg>
<msg timestamp="20170918 12:23:28.235" level="TRACE">Return: [b'AAI', b'AAI']</msg>
<msg timestamp="20170918 12:23:28.235" level="INFO">${auth} = ['AAI', 'AAI']</msg>
<status status="PASS" endtime="20170918 12:23:28.235" starttime="20170918 12:23:28.235"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>aai</arg>
<arg>${AAI_FRONTEND_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:28.237" level="TRACE">Arguments: [ 'aai' | 'https://192.168.20.40:8443' | auth=[b'AAI', b'AAI'] ]</msg>
<msg timestamp="20170918 12:23:28.237" level="INFO">Creating Session using : alias=aai, url=https://192.168.20.40:8443, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707bb0410&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:28.237" level="DEBUG">Creating session: aai</msg>
<msg timestamp="20170918 12:23:28.237" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:28.238" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707bb04d0&gt;</msg>
<msg timestamp="20170918 12:23:28.238" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707bb04d0&gt;</msg>
<status status="PASS" endtime="20170918 12:23:28.238" starttime="20170918 12:23:28.236"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:28.238" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:28.238" level="TRACE">Return: UUID('1096eaba-b0cf-4996-bd4b-2449d548600d')</msg>
<msg timestamp="20170918 12:23:28.239" level="INFO">${uuid} = 1096eaba-b0cf-4996-bd4b-2449d548600d</msg>
<status status="PASS" endtime="20170918 12:23:28.239" starttime="20170918 12:23:28.238"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:28.239" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:28.240" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-1096eaba-b0cf-4996-bd4b-2449d548600d'}</msg>
<msg timestamp="20170918 12:23:28.240" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-1096eaba-b0cf-4996-bd4b-2449d548600d', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:28.240" starttime="20170918 12:23:28.239"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>aai</arg>
<arg>${data_path}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:28.241" level="TRACE">Arguments: [ 'aai' | '/aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova/tenants' | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-1096eaba-b0cf-4996-bd4b-2449d548600d'} ]</msg>
<msg timestamp="20170918 12:23:28.242" level="DEBUG">Starting new HTTPS connection (1): 192.168.20.40</msg>
<msg timestamp="20170918 12:23:28.689" level="DEBUG">https://192.168.20.40:8443 "GET /aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova/tenants HTTP/1.1" 404 None</msg>
<msg timestamp="20170918 12:23:28.691" level="INFO">Get Request using : alias=aai, uri=/aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova/tenants, headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-1096eaba-b0cf-4996-bd4b-2449d548600d', u'X-FromAppId': u'robot-ete'} </msg>
<msg timestamp="20170918 12:23:28.691" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20170918 12:23:28.691" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:28.691" starttime="20170918 12:23:28.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from aai ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:28.692" level="TRACE">Arguments: [ 'Received response from aai {"requestError":{"serviceException":{"messageId":"SVC3001","text":"Resource not found for %1 using id %2 (msg=%3) (ec=%4)","variables":["GET","cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova/tenants","Node Not Found:No Node of type tenant found at: cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova/tenants","ERR.5.4.6114"]}}}' ]</msg>
<msg timestamp="20170918 12:23:28.693" level="INFO">Received response from aai {"requestError":{"serviceException":{"messageId":"SVC3001","text":"Resource not found for %1 using id %2 (msg=%3) (ec=%4)","variables":["GET","cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova/tenants","Node Not Found:No Node of type tenant found at: cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova/tenants","ERR.5.4.6114"]}}}</msg>
<msg timestamp="20170918 12:23:28.693" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.693" starttime="20170918 12:23:28.692"></status>
</kw>
<msg timestamp="20170918 12:23:28.693" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20170918 12:23:28.693" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:28.693" starttime="20170918 12:23:28.232"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${dict}</var>
</assign>
<msg timestamp="20170918 12:23:28.694" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:28.694" level="TRACE">Return: {}</msg>
<msg timestamp="20170918 12:23:28.694" level="INFO">${dict} = {}</msg>
<status status="PASS" endtime="20170918 12:23:28.694" starttime="20170918 12:23:28.694"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<msg timestamp="20170918 12:23:28.695" level="TRACE">Arguments: [ 'Should Be Equal As Strings' | '${resp.status_code}' | '200' ]</msg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:28.696" level="TRACE">Arguments: [ 404 | '200' ]</msg>
<msg timestamp="20170918 12:23:28.696" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:28.696" level="FAIL">404 != 200</msg>
<msg timestamp="20170918 12:23:28.696" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20170918 12:23:28.696" starttime="20170918 12:23:28.695"></status>
</kw>
<msg timestamp="20170918 12:23:28.696" level="TRACE">Return: (b'FAIL', '404 != 200')</msg>
<msg timestamp="20170918 12:23:28.697" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170918 12:23:28.697" level="INFO">${value} = 404 != 200</msg>
<status status="PASS" endtime="20170918 12:23:28.697" starttime="20170918 12:23:28.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == 'PASS'</arg>
<arg>Update Tenant Dictionary</arg>
<arg>${dict}</arg>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20170918 12:23:28.698" level="TRACE">Arguments: [ "'FAIL' == 'PASS'" | 'Update Tenant Dictionary' | '${dict}' | '${resp.json()}' ]</msg>
<msg timestamp="20170918 12:23:28.698" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.698" starttime="20170918 12:23:28.697"></status>
</kw>
<msg timestamp="20170918 12:23:28.698" level="TRACE">Return: {}</msg>
<msg timestamp="20170918 12:23:28.698" level="INFO">${dict} = {}</msg>
<status status="PASS" endtime="20170918 12:23:28.698" starttime="20170918 12:23:28.231"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Dictionary Should Contain Key</arg>
<arg>${dict}</arg>
<arg>${tenant_id}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<msg timestamp="20170918 12:23:28.699" level="TRACE">Arguments: [ 'Dictionary Should Contain Key' | '${dict}' | '${tenant_id}' ]</msg>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${tenant_id}</arg>
</arguments>
<msg timestamp="20170918 12:23:28.700" level="TRACE">Arguments: [ {} | '3893355a611d4a1b9b719740b59015b9' ]</msg>
<msg timestamp="20170918 12:23:28.700" level="FAIL">Dictionary does not contain key '3893355a611d4a1b9b719740b59015b9'.</msg>
<msg timestamp="20170918 12:23:28.700" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20170918 12:23:28.700" starttime="20170918 12:23:28.700"></status>
</kw>
<msg timestamp="20170918 12:23:28.700" level="TRACE">Return: (b'FAIL', "Dictionary does not contain key '3893355a611d4a1b9b719740b59015b9'.")</msg>
<msg timestamp="20170918 12:23:28.701" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170918 12:23:28.701" level="INFO">${value} = Dictionary does not contain key '3893355a611d4a1b9b719740b59015b9'.</msg>
<status status="PASS" endtime="20170918 12:23:28.701" starttime="20170918 12:23:28.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == 'FAIL'</arg>
<arg>Inventory Tenant</arg>
<arg>${cloud_owner}</arg>
<arg>${cloud_region_id}</arg>
<arg>${cloud_type}</arg>
<arg>${owner_defined_type}</arg>
<arg>${cloud_region_version}</arg>
<arg>${cloud_zone}</arg>
<arg>${tenant_id}</arg>
<arg>${tenant_name}</arg>
</arguments>
<msg timestamp="20170918 12:23:28.701" level="TRACE">Arguments: [ "'FAIL' == 'FAIL'" | 'Inventory Tenant' | '${cloud_owner}' | '${cloud_region_id}' | '${cloud_type}' | '${owner_defined_type}' | '${cloud_region_version}' | '${cloud_zone}' | '${tenant_id}' | '${tenant_name}' ]</msg>
<kw name="Inventory Tenant" library="create_tenant">
<doc>Inventorys a Tenant in A&amp;AI</doc>
<arguments>
<arg>${cloud_owner}</arg>
<arg>${cloud_region_id}</arg>
<arg>${cloud_type}</arg>
<arg>${owner_defined_type}</arg>
<arg>${cloud_region_version}</arg>
<arg>${cloud_zone}</arg>
<arg>${tenant_id}</arg>
<arg>${tenant_name}</arg>
</arguments>
<msg timestamp="20170918 12:23:28.703" level="TRACE">Arguments: [ ${cloud_owner}='Rackspace' | ${cloud_region_id}='nova' | ${cloud_type}='SharedNode' | ${owner_defined_type}='OwnerType' | ${cloud_region_version}='v1' | ${cloud_zone}='CloudZone' | ${tenant_id}='3893355a611d4a1b9b719740b59015b9' | ${tenant_name}='admin' ]</msg>
<kw name="Get Resource Version If Exists" library="create_tenant">
<doc>Creates a service in A&amp;AI if it doesn't exist</doc>
<arguments>
<arg>${cloud_owner}</arg>
<arg>${cloud_region_id}</arg>
<arg>${cloud_type}</arg>
<arg>${owner_defined_type}</arg>
<arg>${cloud_region_version}</arg>
<arg>${cloud_zone}</arg>
</arguments>
<assign>
<var>${json_resource_version}</var>
</assign>
<msg timestamp="20170918 12:23:28.704" level="TRACE">Arguments: [ ${cloud_owner}='Rackspace' | ${cloud_region_id}='nova' | ${cloud_type}='SharedNode' | ${owner_defined_type}='OwnerType' | ${cloud_region_version}='v1' | ${cloud_zone}='CloudZone' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<assign>
<var>${resource_version}</var>
</assign>
<msg timestamp="20170918 12:23:28.705" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:28.705" level="TRACE">Return: b''</msg>
<msg timestamp="20170918 12:23:28.705" level="INFO">${resource_version} = </msg>
<status status="PASS" endtime="20170918 12:23:28.706" starttime="20170918 12:23:28.705"></status>
</kw>
<kw name="Get Cloud Region" library="create_tenant">
<doc>Returns the Cloud Region if it exists</doc>
<arguments>
<arg>${cloud_owner}</arg>
<arg>${cloud_region_id}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:28.706" level="TRACE">Arguments: [ ${cloud_owner}='Rackspace' | ${cloud_region_id}='nova' ]</msg>
<kw name="Run A&amp;AI Get Request" library="aai_interface">
<doc>Runs an A&amp;AI get request</doc>
<arguments>
<arg>${INDEX PATH}${ROOT_TENANT_PATH}${cloud_owner}/${cloud_region_id}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:28.707" level="TRACE">Arguments: [ ${data_path}='/aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova' ]</msg>
<kw name="Disable Warnings" library="HTTPUtils">
<doc>Disable the cert warnings when creating sessions for A&amp;AI API Calls</doc>
<msg timestamp="20170918 12:23:28.708" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:28.708" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.708" starttime="20170918 12:23:28.708"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_AAI_USERNAME}</arg>
<arg>${GLOBAL_AAI_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:28.709" level="TRACE">Arguments: [ b'AAI' | b'AAI' ]</msg>
<msg timestamp="20170918 12:23:28.709" level="TRACE">Return: [b'AAI', b'AAI']</msg>
<msg timestamp="20170918 12:23:28.709" level="INFO">${auth} = ['AAI', 'AAI']</msg>
<status status="PASS" endtime="20170918 12:23:28.709" starttime="20170918 12:23:28.709"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>aai</arg>
<arg>${AAI_FRONTEND_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:28.710" level="TRACE">Arguments: [ 'aai' | 'https://192.168.20.40:8443' | auth=[b'AAI', b'AAI'] ]</msg>
<msg timestamp="20170918 12:23:28.710" level="INFO">Creating Session using : alias=aai, url=https://192.168.20.40:8443, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707b55dd0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:28.710" level="DEBUG">Creating session: aai</msg>
<msg timestamp="20170918 12:23:28.711" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:28.711" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707b55e90&gt;</msg>
<msg timestamp="20170918 12:23:28.711" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707b55e90&gt;</msg>
<status status="PASS" endtime="20170918 12:23:28.711" starttime="20170918 12:23:28.710"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:28.712" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:28.712" level="TRACE">Return: UUID('3bf56b61-815d-4173-a58b-b48c1be6a8ec')</msg>
<msg timestamp="20170918 12:23:28.712" level="INFO">${uuid} = 3bf56b61-815d-4173-a58b-b48c1be6a8ec</msg>
<status status="PASS" endtime="20170918 12:23:28.712" starttime="20170918 12:23:28.711"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:28.713" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:28.714" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-3bf56b61-815d-4173-a58b-b48c1be6a8ec'}</msg>
<msg timestamp="20170918 12:23:28.714" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-3bf56b61-815d-4173-a58b-b48c1be6a8ec', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:28.714" starttime="20170918 12:23:28.712"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>aai</arg>
<arg>${data_path}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:28.715" level="TRACE">Arguments: [ 'aai' | '/aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova' | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-3bf56b61-815d-4173-a58b-b48c1be6a8ec'} ]</msg>
<msg timestamp="20170918 12:23:28.716" level="DEBUG">Starting new HTTPS connection (1): 192.168.20.40</msg>
<msg timestamp="20170918 12:23:28.789" level="DEBUG">https://192.168.20.40:8443 "GET /aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova HTTP/1.1" 404 None</msg>
<msg timestamp="20170918 12:23:28.791" level="INFO">Get Request using : alias=aai, uri=/aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova, headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-3bf56b61-815d-4173-a58b-b48c1be6a8ec', u'X-FromAppId': u'robot-ete'} </msg>
<msg timestamp="20170918 12:23:28.791" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20170918 12:23:28.791" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:28.792" starttime="20170918 12:23:28.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from aai ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:28.793" level="TRACE">Arguments: [ 'Received response from aai {"requestError":{"serviceException":{"messageId":"SVC3001","text":"Resource not found for %1 using id %2 (msg=%3) (ec=%4)","variables":["GET","cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova","Node Not Found:No Node of type cloud-region found at: cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova","ERR.5.4.6114"]}}}' ]</msg>
<msg timestamp="20170918 12:23:28.794" level="INFO">Received response from aai {"requestError":{"serviceException":{"messageId":"SVC3001","text":"Resource not found for %1 using id %2 (msg=%3) (ec=%4)","variables":["GET","cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova","Node Not Found:No Node of type cloud-region found at: cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova","ERR.5.4.6114"]}}}</msg>
<msg timestamp="20170918 12:23:28.794" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.794" starttime="20170918 12:23:28.792"></status>
</kw>
<msg timestamp="20170918 12:23:28.794" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20170918 12:23:28.795" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:28.795" starttime="20170918 12:23:28.707"></status>
</kw>
<msg timestamp="20170918 12:23:28.795" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20170918 12:23:28.795" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:28.795" starttime="20170918 12:23:28.706"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'${resp.status_code}' != '200'</arg>
<arg>${resource_version}</arg>
</arguments>
<msg timestamp="20170918 12:23:28.797" level="TRACE">Arguments: [ "'404' != '200'" | '${resource_version}' ]</msg>
<msg timestamp="20170918 12:23:28.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20170918 12:23:28.797" starttime="20170918 12:23:28.796"></status>
</kw>
<msg timestamp="20170918 12:23:28.797" level="TRACE">Return: b''</msg>
<msg timestamp="20170918 12:23:28.797" level="INFO">${json_resource_version} = </msg>
<status status="PASS" endtime="20170918 12:23:28.797" starttime="20170918 12:23:28.704"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${AAI_ADD_TENANT_BODY}</arg>
</arguments>
<assign>
<var>${data_template}</var>
</assign>
<msg timestamp="20170918 12:23:28.798" level="TRACE">Arguments: [ 'robot/assets/templates/aai/add_tenant_body.template' ]</msg>
<msg timestamp="20170918 12:23:28.798" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/aai/add_tenant_body.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/aai/add_tenant_body.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:28.811" level="TRACE">Return: '{\n        "cloud-owner": "${cloud_owner}",\n        "cloud-region-id": "${cloud_region_id}",\n        "cloud-type": "${cloud_type}",\n        "owner-defined-type": "${owner_defined_type}",\n        "cloud-region-version": "${cloud_region_version}",\n        "cloud-zone": "${cloud_zone}",\n        ${resource_version}\n        "tenants": {\n                "tenant": [{\n                        "tenant-id": "${tenant_id}",\n                        "tenant-name": "${tenant_name}"\n\n                }]\n        }\n}\n\n\n'</msg>
<msg timestamp="20170918 12:23:28.811" level="INFO">${data_template} = {
        "cloud-owner": "${cloud_owner}",
        "cloud-region-id": "${cloud_region_id}",
        "cloud-type": "${cloud_type}",
        "owner-defined-type": "${owner_defined_type}",
        "cloud...</msg>
<status status="PASS" endtime="20170918 12:23:28.811" starttime="20170918 12:23:28.798"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>cloud_owner=${cloud_owner}</arg>
<arg>cloud_region_id=${cloud_region_id}</arg>
<arg>cloud_type=${cloud_type}</arg>
<arg>owner_defined_type=${owner_defined_type}</arg>
<arg>cloud_region_version=${cloud_region_version}</arg>
<arg>cloud_zone=${cloud_zone}</arg>
<arg>tenant_id=${tenant_id}</arg>
<arg>tenant_name=${tenant_name}</arg>
<arg>resource_version=${json_resource_version}</arg>
</arguments>
<assign>
<var>${arguments}</var>
</assign>
<msg timestamp="20170918 12:23:28.812" level="TRACE">Arguments: [ 'cloud_owner=${cloud_owner}' | 'cloud_region_id=${cloud_region_id}' | 'cloud_type=${cloud_type}' | 'owner_defined_type=${owner_defined_type}' | 'cloud_region_version=${cloud_region_version}' | 'cloud_zone=${cloud_zone}' | 'tenant_id=${tenant_id}' | 'tenant_name=${tenant_name}' | 'resource_version=${json_resource_version}' ]</msg>
<msg timestamp="20170918 12:23:28.813" level="TRACE">Return: {'cloud_owner': 'Rackspace', 'cloud_region_id': 'nova', 'cloud_region_version': 'v1', 'cloud_type': 'SharedNode', 'cloud_zone': 'CloudZone', 'owner_defined_type': 'OwnerType', 'resource_version': b'', 'tenant_id': '3893355a611d4a1b9b719740b59015b9', 'tenant_name': 'admin'}</msg>
<msg timestamp="20170918 12:23:28.814" level="INFO">${arguments} = {u'cloud_owner': u'Rackspace', u'cloud_region_id': u'nova', u'cloud_type': u'SharedNode', u'owner_defined_type': u'OwnerType', u'cloud_region_version': u'v1', u'cloud_zone': u'CloudZone', u'tenant_id'...</msg>
<status status="PASS" endtime="20170918 12:23:28.814" starttime="20170918 12:23:28.812"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${data_template}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:28.815" level="TRACE">Arguments: [ ${json}='{\n        "cloud-owner": "${cloud_owner}",\n        "cloud-region-id": "${cloud_region_id}",\n        "cloud-type": "${cloud_type}",\n        "owner-defined-type": "${owner_defined_type}",\n        "cloud-region-version": "${cloud_region_version}",\n        "cloud-zone": "${cloud_zone}",\n        ${resource_version}\n        "tenants": {\n                "tenant": [{\n                        "tenant-id": "${tenant_id}",\n                        "tenant-name": "${tenant_name}"\n\n                }]\n        }\n}\n\n\n' | ${arguments}={'cloud_owner': 'Rackspace', 'cloud_region_id': 'nova', 'cloud_region_version': 'v1', 'cloud_type': 'SharedNode', 'cloud_zone': 'CloudZone', 'owner_defined_type': 'OwnerType', 'resource_version': b'', 'tenant_id': '3893355a611d4a1b9b719740b59015b9', 'tenant_name': 'admin'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:28.816" level="TRACE">Arguments: [ '{\n        "cloud-owner": "${cloud_owner}",\n        "cloud-region-id": "${cloud_region_id}",\n        "cloud-type": "${cloud_type}",\n        "owner-defined-type": "${owner_defined_type}",\n        "cloud-region-version": "${cloud_region_version}",\n        "cloud-zone": "${cloud_zone}",\n        ${resource_version}\n        "tenants": {\n                "tenant": [{\n                        "tenant-id": "${tenant_id}",\n                        "tenant-name": "${tenant_name}"\n\n                }]\n        }\n}\n\n\n' | {'cloud_owner': 'Rackspace', 'cloud_region_id': 'nova', 'cloud_region_version': 'v1', 'cloud_type': 'SharedNode', 'cloud_zone': 'CloudZone', 'owner_defined_type': 'OwnerType', 'resource_version': b'', 'tenant_id': '3893355a611d4a1b9b719740b59015b9', 'tenant_name': 'admin'} ]</msg>
<msg timestamp="20170918 12:23:28.816" level="TRACE">Return: '{\n        "cloud-owner": "Rackspace",\n        "cloud-region-id": "nova",\n        "cloud-type": "SharedNode",\n        "owner-defined-type": "OwnerType",\n        "cloud-region-version": "v1",\n        "cloud-zone": "CloudZone",\n        \n        "tenants": {\n                "tenant": [{\n                        "tenant-id": "3893355a611d4a1b9b719740b59015b9",\n                        "tenant-name": "admin"\n\n                }]\n        }\n}\n\n\n'</msg>
<msg timestamp="20170918 12:23:28.816" level="INFO">${returned_string} = {
        "cloud-owner": "Rackspace",
        "cloud-region-id": "nova",
        "cloud-type": "SharedNode",
        "owner-defined-type": "OwnerType",
        "cloud-region-version": "v1",
        "c...</msg>
<status status="PASS" endtime="20170918 12:23:28.817" starttime="20170918 12:23:28.816"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:28.817" level="TRACE">Arguments: [ '{\n        "cloud-owner": "Rackspace",\n        "cloud-region-id": "nova",\n        "cloud-type": "SharedNode",\n        "owner-defined-type": "OwnerType",\n        "cloud-region-version": "v1",\n        "cloud-zone": "CloudZone",\n        \n        "tenants": {\n                "tenant": [{\n                        "tenant-id": "3893355a611d4a1b9b719740b59015b9",\n                        "tenant-name": "admin"\n\n                }]\n        }\n}\n\n\n' ]</msg>
<msg timestamp="20170918 12:23:28.817" level="INFO">To JSON using : content={
        "cloud-owner": "Rackspace",
        "cloud-region-id": "nova",
        "cloud-type": "SharedNode",
        "owner-defined-type": "OwnerType",
        "cloud-region-version": "v1",
        "cloud-zone": "CloudZone",
        
        "tenants": {
                "tenant": [{
                        "tenant-id": "3893355a611d4a1b9b719740b59015b9",
                        "tenant-name": "admin"

                }]
        }
}


 </msg>
<msg timestamp="20170918 12:23:28.817" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:28.818" level="TRACE">Return: {'cloud-owner': 'Rackspace', 'cloud-region-id': 'nova', 'cloud-region-version': 'v1', 'cloud-type': 'SharedNode', 'cloud-zone': 'CloudZone', 'owner-defined-type': 'OwnerType', 'tenants': {'tenant': [{'tenant-id': '3893355a611d4a1b9b719740b59015b9', 'tenant-name': 'admin'}]}}</msg>
<msg timestamp="20170918 12:23:28.818" level="INFO">${returned_json} = {u'cloud-region-id': u'nova', u'cloud-owner': u'Rackspace', u'cloud-zone': u'CloudZone', u'owner-defined-type': u'OwnerType', u'tenants': {u'tenant': [{u'tenant-name': u'admin', u'tenant-id': u'389335...</msg>
<status status="PASS" endtime="20170918 12:23:28.818" starttime="20170918 12:23:28.817"></status>
</kw>
<msg timestamp="20170918 12:23:28.818" level="TRACE">Return: {'cloud-owner': 'Rackspace', 'cloud-region-id': 'nova', 'cloud-region-version': 'v1', 'cloud-type': 'SharedNode', 'cloud-zone': 'CloudZone', 'owner-defined-type': 'OwnerType', 'tenants': {'tenant': [{'tenant-id': '3893355a611d4a1b9b719740b59015b9', 'tenant-name': 'admin'}]}}</msg>
<msg timestamp="20170918 12:23:28.819" level="INFO">${data} = {u'cloud-region-id': u'nova', u'cloud-owner': u'Rackspace', u'cloud-zone': u'CloudZone', u'owner-defined-type': u'OwnerType', u'tenants': {u'tenant': [{u'tenant-name': u'admin', u'tenant-id': u'389335...</msg>
<status status="PASS" endtime="20170918 12:23:28.819" starttime="20170918 12:23:28.814"></status>
</kw>
<kw name="Run A&amp;AI Put Request" library="aai_interface">
<doc>Runs an A&amp;AI put request</doc>
<arguments>
<arg>${INDEX PATH}${ROOT_TENANT_PATH}${cloud_owner}/${cloud_region_id}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${put_resp}</var>
</assign>
<msg timestamp="20170918 12:23:28.820" level="TRACE">Arguments: [ ${data_path}='/aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova' | ${data}={'cloud-owner': 'Rackspace', 'cloud-region-id': 'nova', 'cloud-region-version': 'v1', 'cloud-type': 'SharedNode', 'cloud-zone': 'CloudZone', 'owner-defined-type': 'OwnerType', 'tenants': {'tenant': [{'tenant-id': '3893355a611d4a1b9b719740b59015b9', 'tenant-name': 'admin'}]}} ]</msg>
<kw name="Disable Warnings" library="HTTPUtils">
<doc>Disable the cert warnings when creating sessions for A&amp;AI API Calls</doc>
<msg timestamp="20170918 12:23:28.821" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:28.821" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:28.821" starttime="20170918 12:23:28.821"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_AAI_USERNAME}</arg>
<arg>${GLOBAL_AAI_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:28.822" level="TRACE">Arguments: [ b'AAI' | b'AAI' ]</msg>
<msg timestamp="20170918 12:23:28.822" level="TRACE">Return: [b'AAI', b'AAI']</msg>
<msg timestamp="20170918 12:23:28.822" level="INFO">${auth} = ['AAI', 'AAI']</msg>
<status status="PASS" endtime="20170918 12:23:28.822" starttime="20170918 12:23:28.821"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>aai</arg>
<arg>${AAI_FRONTEND_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:28.823" level="TRACE">Arguments: [ 'aai' | 'https://192.168.20.40:8443' | auth=[b'AAI', b'AAI'] ]</msg>
<msg timestamp="20170918 12:23:28.823" level="INFO">Creating Session using : alias=aai, url=https://192.168.20.40:8443, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707b5df50&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:28.823" level="DEBUG">Creating session: aai</msg>
<msg timestamp="20170918 12:23:28.823" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:28.824" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707b67090&gt;</msg>
<msg timestamp="20170918 12:23:28.824" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707b67090&gt;</msg>
<status status="PASS" endtime="20170918 12:23:28.824" starttime="20170918 12:23:28.823"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:28.825" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:28.825" level="TRACE">Return: UUID('c73e6abe-26f2-417a-b3b1-7b9553cf27f1')</msg>
<msg timestamp="20170918 12:23:28.825" level="INFO">${uuid} = c73e6abe-26f2-417a-b3b1-7b9553cf27f1</msg>
<status status="PASS" endtime="20170918 12:23:28.825" starttime="20170918 12:23:28.824"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:28.826" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:28.827" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-c73e6abe-26f2-417a-b3b1-7b9553cf27f1'}</msg>
<msg timestamp="20170918 12:23:28.827" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-c73e6abe-26f2-417a-b3b1-7b9553cf27f1', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:28.827" starttime="20170918 12:23:28.826"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>aai</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:28.828" level="TRACE">Arguments: [ 'aai' | '/aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova' | data={'cloud-owner': 'Rackspace', 'cloud-region-id': 'nova', 'cloud-region-version': 'v1', 'cloud-type': 'SharedNode', 'cloud-zone': 'CloudZone', 'owner-defined-type': 'OwnerType', 'tenants': {'tenant': [{'tenant-id': '3893355a611d4a1b9b719740b59015b9', 'tenant-name': 'admin'}]}} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-c73e6abe-26f2-417a-b3b1-7b9553cf27f1'} ]</msg>
<msg timestamp="20170918 12:23:28.830" level="DEBUG">Starting new HTTPS connection (1): 192.168.20.40</msg>
<msg timestamp="20170918 12:23:33.169" level="DEBUG">https://192.168.20.40:8443 "PUT /aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova HTTP/1.1" 201 None</msg>
<msg timestamp="20170918 12:23:33.171" level="DEBUG">put response: </msg>
<msg timestamp="20170918 12:23:33.171" level="INFO">Put Request using : alias=aai, uri=/aai/v8/cloud-infrastructure/cloud-regions/cloud-region/Rackspace/nova, data={"cloud-region-id": "nova", "cloud-owner": "Rackspace", "cloud-zone": "CloudZone", "owner-defined-type": "OwnerType", "tenants": {"tenant": [{"tenant-name": "admin", "tenant-id": "3893355a611d4a1b9b719740b59015b9"}]}, "cloud-type": "SharedNode", "cloud-region-version": "v1"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-c73e6abe-26f2-417a-b3b1-7b9553cf27f1', u'X-FromAppId': u'robot-ete'}, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:33.171" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:33.171" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:33.171" starttime="20170918 12:23:28.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from aai ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:33.172" level="TRACE">Arguments: [ 'Received response from aai ' ]</msg>
<msg timestamp="20170918 12:23:33.172" level="INFO">Received response from aai </msg>
<msg timestamp="20170918 12:23:33.172" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:33.172" starttime="20170918 12:23:33.172"></status>
</kw>
<msg timestamp="20170918 12:23:33.173" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:33.173" level="INFO">${put_resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:33.173" starttime="20170918 12:23:28.819"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${put_resp.status_code}</arg>
</arguments>
<assign>
<var>${status_string}</var>
</assign>
<msg timestamp="20170918 12:23:33.174" level="TRACE">Arguments: [ 201 ]</msg>
<msg timestamp="20170918 12:23:33.174" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:33.174" level="TRACE">Return: '201'</msg>
<msg timestamp="20170918 12:23:33.174" level="INFO">${status_string} = 201</msg>
<status status="PASS" endtime="20170918 12:23:33.174" starttime="20170918 12:23:33.173"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${status_string}</arg>
<arg>^(201|200)$</arg>
</arguments>
<msg timestamp="20170918 12:23:33.175" level="TRACE">Arguments: [ '201' | '^(201|200)$' ]</msg>
<msg timestamp="20170918 12:23:33.175" level="TRACE">Return: ['201', '201']</msg>
<status status="PASS" endtime="20170918 12:23:33.175" starttime="20170918 12:23:33.175"></status>
</kw>
<msg timestamp="20170918 12:23:33.175" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:33.176" starttime="20170918 12:23:28.702"></status>
</kw>
<msg timestamp="20170918 12:23:33.176" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:33.176" starttime="20170918 12:23:28.701"></status>
</kw>
<msg timestamp="20170918 12:23:33.176" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:33.176" starttime="20170918 12:23:28.230"></status>
</kw>
<status status="PASS" endtime="20170918 12:23:33.176" starttime="20170918 12:23:28.229"></status>
</kw>
<status status="PASS" endtime="20170918 12:23:33.176" starttime="20170918 12:23:28.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Orchestrate VNF setup complete</arg>
</arguments>
<msg timestamp="20170918 12:23:33.177" level="TRACE">Arguments: [ 'Orchestrate VNF setup complete' ]</msg>
<msg timestamp="20170918 12:23:33.177" level="INFO">Orchestrate VNF setup complete</msg>
<msg timestamp="20170918 12:23:33.177" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:33.177" starttime="20170918 12:23:33.176"></status>
</kw>
<msg timestamp="20170918 12:23:33.177" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:33.177" starttime="20170918 12:23:27.593"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${CUSTOMER_NAME}</arg>
<arg>${customer_name}</arg>
</arguments>
<msg timestamp="20170918 12:23:33.178" level="TRACE">Arguments: [ '${CUSTOMER_NAME}' | '${customer_name}' ]</msg>
<msg timestamp="20170918 12:23:33.178" level="INFO">${CUSTOMER_NAME} = Demonstration</msg>
<msg timestamp="20170918 12:23:33.178" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:33.178" starttime="20170918 12:23:33.178"></status>
</kw>
<kw name="Get Openstack Region" library="openstack_common">
<doc>Returns the current openstack region test variable</doc>
<assign>
<var>${region}</var>
</assign>
<msg timestamp="20170918 12:23:33.179" level="TRACE">Arguments: [  ]</msg>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>len('${OPENSTACK_SERVICE_REGION}') &gt; 0</arg>
<arg>${OPENSTACK_SERVICE_REGION}</arg>
</arguments>
<msg timestamp="20170918 12:23:33.180" level="TRACE">Arguments: [ "len('') &gt; 0" | '${OPENSTACK_SERVICE_REGION}' ]</msg>
<msg timestamp="20170918 12:23:33.180" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:33.180" starttime="20170918 12:23:33.179"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${OPENSTACK_SERVICE_REGION}</arg>
<arg>${GLOBAL_INJECTED_REGION}</arg>
</arguments>
<msg timestamp="20170918 12:23:33.181" level="TRACE">Arguments: [ '${OPENSTACK_SERVICE_REGION}' | '${GLOBAL_INJECTED_REGION}' ]</msg>
<msg timestamp="20170918 12:23:33.181" level="INFO">${OPENSTACK_SERVICE_REGION} = nova</msg>
<msg timestamp="20170918 12:23:33.181" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:33.181" starttime="20170918 12:23:33.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Setting OPENSTACK_SERVICE_REGION=${OPENSTACK_SERVICE_REGION}</arg>
</arguments>
<msg timestamp="20170918 12:23:33.182" level="TRACE">Arguments: [ 'Setting OPENSTACK_SERVICE_REGION=nova' ]</msg>
<msg timestamp="20170918 12:23:33.182" level="INFO">Setting OPENSTACK_SERVICE_REGION=nova</msg>
<msg timestamp="20170918 12:23:33.182" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:33.182" starttime="20170918 12:23:33.182"></status>
</kw>
<msg timestamp="20170918 12:23:33.182" level="TRACE">Return: b'nova'</msg>
<msg timestamp="20170918 12:23:33.183" level="INFO">${region} = nova</msg>
<status status="PASS" endtime="20170918 12:23:33.183" starttime="20170918 12:23:33.179"></status>
</kw>
<kw name="Create Customer For VNF Demo" library="demo_preload">
<doc>Create demo customer for the demo</doc>
<arguments>
<arg>${CUSTOMER_NAME}</arg>
<arg>${CUSTOMER_NAME}</arg>
<arg>INFRA</arg>
<arg>${GLOBAL_AAI_CLOUD_OWNER}</arg>
<arg>${region}</arg>
<arg>${TENANT_ID}</arg>
</arguments>
<msg timestamp="20170918 12:23:33.184" level="TRACE">Arguments: [ ${customer_name}='Demonstration' | ${customer_id}='Demonstration' | ${customer_type}='INFRA' | ${clouder_owner}='Rackspace' | ${cloud_region_id}=b'nova' | ${tenant_id}='3893355a611d4a1b9b719740b59015b9' ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${ADD_DEMO_CUSTOMER_BODY}</arg>
</arguments>
<assign>
<var>${data_template}</var>
</assign>
<msg timestamp="20170918 12:23:33.185" level="TRACE">Arguments: [ 'robot/assets/templates/aai/add_demo_customer.template' ]</msg>
<msg timestamp="20170918 12:23:33.185" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/aai/add_demo_customer.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/aai/add_demo_customer.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:33.201" level="TRACE">Return: '{\n\t"global-customer-id" : "${global_customer_id}",\n\t"subscriber-name" : "${subscriber_name}",\n\t"subscriber-type" : "${subscriber_type}",\n\t"service-subscriptions" : {\n\t\t"service-subscription" : [{\n\t\t\t\t"service-type" : "${service1}",\n\t\t\t\t"relationship-list" : {\n\t\t\t\t\t"relationship" : [{\n\t\t\t\t\t\t\t"related-to" : "tenant",\n\t\t\t\t\t\t\t"relationship-data" : [{\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-owner",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_owner}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-region-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_region_id}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "tenant.tenant-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${tenant_id}"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t"service-type" : "${service2}",\n\t\t\t\t"relationship-list" : {\n\t\t\t\t\t"relationship" : [{\n\t\t\t\t\t\t\t"related-to" : "tenant",\n\t\t\t\t\t\t\t"relationship-data" : [{\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-owner",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_owner}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-region-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_region_id}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "tenant.tenant-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${tenant_id}"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n}\n'</msg>
<msg timestamp="20170918 12:23:33.201" level="INFO">${data_template} = {
	"global-customer-id" : "${global_customer_id}",
	"subscriber-name" : "${subscriber_name}",
	"subscriber-type" : "${subscriber_type}",
	"service-subscriptions" : {
		"service-subscription" : [{
				...</msg>
<status status="PASS" endtime="20170918 12:23:33.201" starttime="20170918 12:23:33.184"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>subscriber_name=${customer_name}</arg>
<arg>global_customer_id=${customer_id}</arg>
<arg>subscriber_type=${customer_type}</arg>
<arg>cloud_owner=${clouder_owner}</arg>
<arg>cloud_region_id=${cloud_region_id}</arg>
<arg>tenant_id=${tenant_id}</arg>
</arguments>
<assign>
<var>${arguments}</var>
</assign>
<msg timestamp="20170918 12:23:33.202" level="TRACE">Arguments: [ 'subscriber_name=${customer_name}' | 'global_customer_id=${customer_id}' | 'subscriber_type=${customer_type}' | 'cloud_owner=${clouder_owner}' | 'cloud_region_id=${cloud_region_id}' | 'tenant_id=${tenant_id}' ]</msg>
<msg timestamp="20170918 12:23:33.203" level="TRACE">Return: {'cloud_owner': 'Rackspace', 'cloud_region_id': b'nova', 'global_customer_id': 'Demonstration', 'subscriber_name': 'Demonstration', 'subscriber_type': 'INFRA', 'tenant_id': '3893355a611d4a1b9b719740b59015b9'}</msg>
<msg timestamp="20170918 12:23:33.203" level="INFO">${arguments} = {u'subscriber_name': u'Demonstration', u'global_customer_id': u'Demonstration', u'subscriber_type': u'INFRA', u'cloud_owner': u'Rackspace', u'cloud_region_id': 'nova', u'tenant_id': u'3893355a611d4a1b...</msg>
<status status="PASS" endtime="20170918 12:23:33.203" starttime="20170918 12:23:33.202"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${arguments}</arg>
<arg>service1=vFW</arg>
<arg>service2=vLB</arg>
</arguments>
<msg timestamp="20170918 12:23:33.204" level="TRACE">Arguments: [ {'cloud_owner': 'Rackspace', 'cloud_region_id': b'nova', 'global_customer_id': 'Demonstration', 'subscriber_name': 'Demonstration', 'subscriber_type': 'INFRA', 'tenant_id': '3893355a611d4a1b9b719740b59015b9'} | service1='vFW' | service2='vLB' ]</msg>
<msg timestamp="20170918 12:23:33.205" level="TRACE">Return: {'cloud_owner': 'Rackspace', 'cloud_region_id': b'nova', 'global_customer_id': 'Demonstration', 'service1': 'vFW', 'service2': 'vLB', 'subscriber_name': 'Demonstration', 'subscriber_type': 'INFRA', 'tenant_id': '3893355a611d4a1b9b719740b59015b9'}</msg>
<status status="PASS" endtime="20170918 12:23:33.205" starttime="20170918 12:23:33.204"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${data_template}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:33.206" level="TRACE">Arguments: [ ${json}='{\n\t"global-customer-id" : "${global_customer_id}",\n\t"subscriber-name" : "${subscriber_name}",\n\t"subscriber-type" : "${subscriber_type}",\n\t"service-subscriptions" : {\n\t\t"service-subscription" : [{\n\t\t\t\t"service-type" : "${service1}",\n\t\t\t\t"relationship-list" : {\n\t\t\t\t\t"relationship" : [{\n\t\t\t\t\t\t\t"related-to" : "tenant",\n\t\t\t\t\t\t\t"relationship-data" : [{\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-owner",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_owner}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-region-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_region_id}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "tenant.tenant-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${tenant_id}"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t"service-type" : "${service2}",\n\t\t\t\t"relationship-list" : {\n\t\t\t\t\t"relationship" : [{\n\t\t\t\t\t\t\t"related-to" : "tenant",\n\t\t\t\t\t\t\t"relationship-data" : [{\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-owner",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_owner}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-region-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_region_id}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "tenant.tenant-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${tenant_id}"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n}\n' | ${arguments}={'cloud_owner': 'Rackspace', 'cloud_region_id': b'nova', 'global_customer_id': 'Demonstration', 'service1': 'vFW', 'service2': 'vLB', 'subscriber_name': 'Demonstration', 'subscriber_type': 'INFRA', 'tenant_id': '3893355a611d4a1b9b719740b59015b9'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:33.207" level="TRACE">Arguments: [ '{\n\t"global-customer-id" : "${global_customer_id}",\n\t"subscriber-name" : "${subscriber_name}",\n\t"subscriber-type" : "${subscriber_type}",\n\t"service-subscriptions" : {\n\t\t"service-subscription" : [{\n\t\t\t\t"service-type" : "${service1}",\n\t\t\t\t"relationship-list" : {\n\t\t\t\t\t"relationship" : [{\n\t\t\t\t\t\t\t"related-to" : "tenant",\n\t\t\t\t\t\t\t"relationship-data" : [{\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-owner",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_owner}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-region-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_region_id}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "tenant.tenant-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${tenant_id}"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t"service-type" : "${service2}",\n\t\t\t\t"relationship-list" : {\n\t\t\t\t\t"relationship" : [{\n\t\t\t\t\t\t\t"related-to" : "tenant",\n\t\t\t\t\t\t\t"relationship-data" : [{\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-owner",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_owner}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-region-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${cloud_region_id}"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "tenant.tenant-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "${tenant_id}"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n}\n' | {'cloud_owner': 'Rackspace', 'cloud_region_id': b'nova', 'global_customer_id': 'Demonstration', 'service1': 'vFW', 'service2': 'vLB', 'subscriber_name': 'Demonstration', 'subscriber_type': 'INFRA', 'tenant_id': '3893355a611d4a1b9b719740b59015b9'} ]</msg>
<msg timestamp="20170918 12:23:33.207" level="TRACE">Return: '{\n\t"global-customer-id" : "Demonstration",\n\t"subscriber-name" : "Demonstration",\n\t"subscriber-type" : "INFRA",\n\t"service-subscriptions" : {\n\t\t"service-subscription" : [{\n\t\t\t\t"service-type" : "vFW",\n\t\t\t\t"relationship-list" : {\n\t\t\t\t\t"relationship" : [{\n\t\t\t\t\t\t\t"related-to" : "tenant",\n\t\t\t\t\t\t\t"relationship-data" : [{\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-owner",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "Rackspace"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-region-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "nova"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "tenant.tenant-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "3893355a611d4a1b9b719740b59015b9"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t"service-type" : "vLB",\n\t\t\t\t"relationship-list" : {\n\t\t\t\t\t"relationship" : [{\n\t\t\t\t\t\t\t"related-to" : "tenant",\n\t\t\t\t\t\t\t"relationship-data" : [{\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-owner",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "Rackspace"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-region-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "nova"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "tenant.tenant-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "3893355a611d4a1b9b719740b59015b9"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n}\n'</msg>
<msg timestamp="20170918 12:23:33.208" level="INFO">${returned_string} = {
	"global-customer-id" : "Demonstration",
	"subscriber-name" : "Demonstration",
	"subscriber-type" : "INFRA",
	"service-subscriptions" : {
		"service-subscription" : [{
				"service-type" : "vFW",
		...</msg>
<status status="PASS" endtime="20170918 12:23:33.208" starttime="20170918 12:23:33.207"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:33.208" level="TRACE">Arguments: [ '{\n\t"global-customer-id" : "Demonstration",\n\t"subscriber-name" : "Demonstration",\n\t"subscriber-type" : "INFRA",\n\t"service-subscriptions" : {\n\t\t"service-subscription" : [{\n\t\t\t\t"service-type" : "vFW",\n\t\t\t\t"relationship-list" : {\n\t\t\t\t\t"relationship" : [{\n\t\t\t\t\t\t\t"related-to" : "tenant",\n\t\t\t\t\t\t\t"relationship-data" : [{\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-owner",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "Rackspace"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-region-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "nova"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "tenant.tenant-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "3893355a611d4a1b9b719740b59015b9"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t"service-type" : "vLB",\n\t\t\t\t"relationship-list" : {\n\t\t\t\t\t"relationship" : [{\n\t\t\t\t\t\t\t"related-to" : "tenant",\n\t\t\t\t\t\t\t"relationship-data" : [{\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-owner",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "Rackspace"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "cloud-region.cloud-region-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "nova"\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t"relationship-key" : "tenant.tenant-id",\n\t\t\t\t\t\t\t\t\t"relationship-value" : "3893355a611d4a1b9b719740b59015b9"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n}\n' ]</msg>
<msg timestamp="20170918 12:23:33.209" level="INFO">To JSON using : content={
	"global-customer-id" : "Demonstration",
	"subscriber-name" : "Demonstration",
	"subscriber-type" : "INFRA",
	"service-subscriptions" : {
		"service-subscription" : [{
				"service-type" : "vFW",
				"relationship-list" : {
					"relationship" : [{
							"related-to" : "tenant",
							"relationship-data" : [{
									"relationship-key" : "cloud-region.cloud-owner",
									"relationship-value" : "Rackspace"
								}, {
									"relationship-key" : "cloud-region.cloud-region-id",
									"relationship-value" : "nova"
								}, {
									"relationship-key" : "tenant.tenant-id",
									"relationship-value" : "3893355a611d4a1b9b719740b59015b9"
								}
							]
						}
					]
				}
			}, {
				"service-type" : "vLB",
				"relationship-list" : {
					"relationship" : [{
							"related-to" : "tenant",
							"relationship-data" : [{
									"relationship-key" : "cloud-region.cloud-owner",
									"relationship-value" : "Rackspace"
								}, {
									"relationship-key" : "cloud-region.cloud-region-id",
									"relationship-value" : "nova"
								}, {
									"relationship-key" : "tenant.tenant-id",
									"relationship-value" : "3893355a611d4a1b9b719740b59015b9"
								}
							]
						}
					]
				}
			}
		]
	}
}
 </msg>
<msg timestamp="20170918 12:23:33.209" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:33.209" level="TRACE">Return: {'global-customer-id': 'Demonstration',
 'service-subscriptions': {'service-subscription': [{'relationship-list': {'relationship': [{'related-to': 'tenant',
                                                                                             'relationship-data': [{'relationship-key': 'cloud-region.cloud-owner', 'relationship-value': 'Rackspace'},
                                                                                                                   {'relationship-key': 'cloud-region.cloud-region-id', 'relationship-value': 'nova'},
                                                                                                                   {'relationship-key': 'tenant.tenant-id', 'relationship-value': '3893355a611d4a1b9b719740b59015b9'}]}]},
                                                     'service-type': 'vFW'},
                                                    {'relationship-list': {'relationship': [{'related-to': 'tenant',
                                                                                             'relationship-data': [{'relationship-key': 'cloud-region.cloud-owner', 'relationship-value': 'Rackspace'},
                                                                                                                   {'relationship-key': 'cloud-region.cloud-region-id', 'relationship-value': 'nova'},
                                                                                                                   {'relationship-key': 'tenant.tenant-id', 'relationship-value': '3893355a611d4a1b9b719740b59015b9'}]}]},
                                                     'service-type': 'vLB'}]},
 'subscriber-name': 'Demonstration',
 'subscriber-type': 'INFRA'}</msg>
<msg timestamp="20170918 12:23:33.211" level="INFO">${returned_json} = {u'subscriber-name': u'Demonstration', u'subscriber-type': u'INFRA', u'global-customer-id': u'Demonstration', u'service-subscriptions': {u'service-subscription': [{u'service-type': u'vFW', u'relations...</msg>
<status status="PASS" endtime="20170918 12:23:33.211" starttime="20170918 12:23:33.208"></status>
</kw>
<msg timestamp="20170918 12:23:33.212" level="TRACE">Return: {'global-customer-id': 'Demonstration',
 'service-subscriptions': {'service-subscription': [{'relationship-list': {'relationship': [{'related-to': 'tenant',
                                                                                             'relationship-data': [{'relationship-key': 'cloud-region.cloud-owner', 'relationship-value': 'Rackspace'},
                                                                                                                   {'relationship-key': 'cloud-region.cloud-region-id', 'relationship-value': 'nova'},
                                                                                                                   {'relationship-key': 'tenant.tenant-id', 'relationship-value': '3893355a611d4a1b9b719740b59015b9'}]}]},
                                                     'service-type': 'vFW'},
                                                    {'relationship-list': {'relationship': [{'related-to': 'tenant',
                                                                                             'relationship-data': [{'relationship-key': 'cloud-region.cloud-owner', 'relationship-value': 'Rackspace'},
                                                                                                                   {'relationship-key': 'cloud-region.cloud-region-id', 'relationship-value': 'nova'},
                                                                                                                   {'relationship-key': 'tenant.tenant-id', 'relationship-value': '3893355a611d4a1b9b719740b59015b9'}]}]},
                                                     'service-type': 'vLB'}]},
 'subscriber-name': 'Demonstration',
 'subscriber-type': 'INFRA'}</msg>
<msg timestamp="20170918 12:23:33.214" level="INFO">${data} = {u'subscriber-name': u'Demonstration', u'subscriber-type': u'INFRA', u'global-customer-id': u'Demonstration', u'service-subscriptions': {u'service-subscription': [{u'service-type': u'vFW', u'relations...</msg>
<status status="PASS" endtime="20170918 12:23:33.214" starttime="20170918 12:23:33.205"></status>
</kw>
<kw name="Run A&amp;AI Put Request" library="aai_interface">
<doc>Runs an A&amp;AI put request</doc>
<arguments>
<arg>${INDEX PATH}${ROOT_CUSTOMER_PATH}${customer_id}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${put_resp}</var>
</assign>
<msg timestamp="20170918 12:23:33.215" level="TRACE">Arguments: [ ${data_path}='/aai/v8/business/customers/customer/Demonstration' | ${data}={'global-customer-id': 'Demonstration',
 'service-subscriptions': {'service-subscription': [{'relationship-list': {'relationship': [{'related-to': 'tenant',
                                                                                             'relationship-data': [{'relationship-key': 'cloud-region.cloud-owner', 'relationship-value': 'Rackspace'},
                                                                                                                   {'relationship-key': 'cloud-region.cloud-region-id', 'relationship-value': 'nova'},
                                                                                                                   {'relationship-key': 'tenant.tenant-id', 'relationship-value': '3893355a611d4a1b9b719740b59015b9'}]}]},
                                                     'service-type': 'vFW'},
                                                    {'relationship-list': {'relationship': [{'related-to': 'tenant',
                                                                                             'relationship-data': [{'relationship-key': 'cloud-region.cloud-owner', 'relationship-value': 'Rackspace'},
                                                                                                                   {'relationship-key': 'cloud-region.cloud-region-id', 'relationship-value': 'nova'},
                                                                                                                   {'relationship-key': 'tenant.tenant-id', 'relationship-value': '3893355a611d4a1b9b719740b59015b9'}]}]},
                                                     'service-type': 'vLB'}]},
 'subscriber-name': 'Demonstration',
 'subscriber-type': 'INFRA'} ]</msg>
<kw name="Disable Warnings" library="HTTPUtils">
<doc>Disable the cert warnings when creating sessions for A&amp;AI API Calls</doc>
<msg timestamp="20170918 12:23:33.218" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:33.218" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:33.218" starttime="20170918 12:23:33.218"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_AAI_USERNAME}</arg>
<arg>${GLOBAL_AAI_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:33.219" level="TRACE">Arguments: [ b'AAI' | b'AAI' ]</msg>
<msg timestamp="20170918 12:23:33.219" level="TRACE">Return: [b'AAI', b'AAI']</msg>
<msg timestamp="20170918 12:23:33.219" level="INFO">${auth} = ['AAI', 'AAI']</msg>
<status status="PASS" endtime="20170918 12:23:33.219" starttime="20170918 12:23:33.218"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>aai</arg>
<arg>${AAI_FRONTEND_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:33.220" level="TRACE">Arguments: [ 'aai' | 'https://192.168.20.40:8443' | auth=[b'AAI', b'AAI'] ]</msg>
<msg timestamp="20170918 12:23:33.220" level="INFO">Creating Session using : alias=aai, url=https://192.168.20.40:8443, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707af4d10&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:33.220" level="DEBUG">Creating session: aai</msg>
<msg timestamp="20170918 12:23:33.221" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:33.221" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707af4dd0&gt;</msg>
<msg timestamp="20170918 12:23:33.221" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707af4dd0&gt;</msg>
<status status="PASS" endtime="20170918 12:23:33.221" starttime="20170918 12:23:33.220"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:33.222" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:33.222" level="TRACE">Return: UUID('1cb9ce8f-e956-42cf-a812-725bb67be809')</msg>
<msg timestamp="20170918 12:23:33.222" level="INFO">${uuid} = 1cb9ce8f-e956-42cf-a812-725bb67be809</msg>
<status status="PASS" endtime="20170918 12:23:33.222" starttime="20170918 12:23:33.221"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:33.223" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:33.223" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-1cb9ce8f-e956-42cf-a812-725bb67be809'}</msg>
<msg timestamp="20170918 12:23:33.223" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-1cb9ce8f-e956-42cf-a812-725bb67be809', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:33.223" starttime="20170918 12:23:33.222"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>aai</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:33.224" level="TRACE">Arguments: [ 'aai' | '/aai/v8/business/customers/customer/Demonstration' | data={'global-customer-id': 'Demonstration',
 'service-subscriptions': {'service-subscription': [{'relationship-list': {'relationship': [{'related-to': 'tenant',
                                                                                             'relationship-data': [{'relationship-key': 'cloud-region.cloud-owner', 'relationship-value': 'Rackspace'},
                                                                                                                   {'relationship-key': 'cloud-region.cloud-region-id', 'relationship-value': 'nova'},
                                                                                                                   {'relationship-key': 'tenant.tenant-id', 'relationship-value': '3893355a611d4a1b9b719740b59015b9'}]}]},
                                                     'service-type': 'vFW'},
                                                    {'relationship-list': {'relationship': [{'related-to': 'tenant',
                                                                                             'relationship-data': [{'relationship-key': 'cloud-region.cloud-owner', 'relationship-value': 'Rackspace'},
                                                                                                                   {'relationship-key': 'cloud-region.cloud-region-id', 'relationship-value': 'nova'},
                                                                                                                   {'relationship-key': 'tenant.tenant-id', 'relationship-value': '3893355a611d4a1b9b719740b59015b9'}]}]},
                                                     'service-type': 'vLB'}]},
 'subscriber-name': 'Demonstration',
 'subscriber-type': 'INFRA'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-1cb9ce8f-e956-42cf-a812-725bb67be809'} ]</msg>
<msg timestamp="20170918 12:23:33.228" level="DEBUG">Starting new HTTPS connection (1): 192.168.20.40</msg>
<msg timestamp="20170918 12:23:36.490" level="DEBUG">https://192.168.20.40:8443 "PUT /aai/v8/business/customers/customer/Demonstration HTTP/1.1" 201 None</msg>
<msg timestamp="20170918 12:23:36.492" level="DEBUG">put response: </msg>
<msg timestamp="20170918 12:23:36.492" level="INFO">Put Request using : alias=aai, uri=/aai/v8/business/customers/customer/Demonstration, data={"subscriber-name": "Demonstration", "subscriber-type": "INFRA", "global-customer-id": "Demonstration", "service-subscriptions": {"service-subscription": [{"service-type": "vFW", "relationship-list": {"relationship": [{"relationship-data": [{"relationship-key": "cloud-region.cloud-owner", "relationship-value": "Rackspace"}, {"relationship-key": "cloud-region.cloud-region-id", "relationship-value": "nova"}, {"relationship-key": "tenant.tenant-id", "relationship-value": "3893355a611d4a1b9b719740b59015b9"}], "related-to": "tenant"}]}}, {"service-type": "vLB", "relationship-list": {"relationship": [{"relationship-data": [{"relationship-key": "cloud-region.cloud-owner", "relationship-value": "Rackspace"}, {"relationship-key": "cloud-region.cloud-region-id", "relationship-value": "nova"}, {"relationship-key": "tenant.tenant-id", "relationship-value": "3893355a611d4a1b9b719740b59015b9"}], "related-to": "tenant"}]}}]}},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-1cb9ce8f-e956-42cf-a812-725bb67be809', u'X-FromAppId': u'robot-ete'}, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:36.492" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:36.492" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:36.493" starttime="20170918 12:23:33.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from aai ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:36.494" level="TRACE">Arguments: [ 'Received response from aai ' ]</msg>
<msg timestamp="20170918 12:23:36.494" level="INFO">Received response from aai </msg>
<msg timestamp="20170918 12:23:36.494" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:36.494" starttime="20170918 12:23:36.493"></status>
</kw>
<msg timestamp="20170918 12:23:36.494" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:36.495" level="INFO">${put_resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:36.495" starttime="20170918 12:23:33.214"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${put_resp.status_code}</arg>
</arguments>
<assign>
<var>${status_string}</var>
</assign>
<msg timestamp="20170918 12:23:36.495" level="TRACE">Arguments: [ 201 ]</msg>
<msg timestamp="20170918 12:23:36.496" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:36.496" level="TRACE">Return: '201'</msg>
<msg timestamp="20170918 12:23:36.496" level="INFO">${status_string} = 201</msg>
<status status="PASS" endtime="20170918 12:23:36.496" starttime="20170918 12:23:36.495"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${status_string}</arg>
<arg>^(201|412)$</arg>
</arguments>
<msg timestamp="20170918 12:23:36.497" level="TRACE">Arguments: [ '201' | '^(201|412)$' ]</msg>
<msg timestamp="20170918 12:23:36.497" level="TRACE">Return: ['201', '201']</msg>
<status status="PASS" endtime="20170918 12:23:36.497" starttime="20170918 12:23:36.496"></status>
</kw>
<kw name="Create Service If Not Exists" library="create_service">
<doc>Creates a service in A&amp;AI if it doesn't exist</doc>
<arguments>
<arg>vFW</arg>
</arguments>
<msg timestamp="20170918 12:23:36.498" level="TRACE">Arguments: [ ${service_type}='vFW' ]</msg>
<kw name="Get Services" library="create_service">
<doc>Creates a service in A&amp;AI</doc>
<assign>
<var>${dict}</var>
</assign>
<msg timestamp="20170918 12:23:36.499" level="TRACE">Arguments: [  ]</msg>
<kw name="Run A&amp;AI Get Request" library="aai_interface">
<doc>Runs an A&amp;AI get request</doc>
<arguments>
<arg>${INDEX PATH}${ROOT_SERVICE_PATH}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:36.500" level="TRACE">Arguments: [ ${data_path}='/aai/v8/service-design-and-creation/services' ]</msg>
<kw name="Disable Warnings" library="HTTPUtils">
<doc>Disable the cert warnings when creating sessions for A&amp;AI API Calls</doc>
<msg timestamp="20170918 12:23:36.500" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:36.500" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:36.500" starttime="20170918 12:23:36.500"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_AAI_USERNAME}</arg>
<arg>${GLOBAL_AAI_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:36.501" level="TRACE">Arguments: [ b'AAI' | b'AAI' ]</msg>
<msg timestamp="20170918 12:23:36.501" level="TRACE">Return: [b'AAI', b'AAI']</msg>
<msg timestamp="20170918 12:23:36.502" level="INFO">${auth} = ['AAI', 'AAI']</msg>
<status status="PASS" endtime="20170918 12:23:36.502" starttime="20170918 12:23:36.501"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>aai</arg>
<arg>${AAI_FRONTEND_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:36.502" level="TRACE">Arguments: [ 'aai' | 'https://192.168.20.40:8443' | auth=[b'AAI', b'AAI'] ]</msg>
<msg timestamp="20170918 12:23:36.503" level="INFO">Creating Session using : alias=aai, url=https://192.168.20.40:8443, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707b556d0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:36.503" level="DEBUG">Creating session: aai</msg>
<msg timestamp="20170918 12:23:36.503" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:36.503" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707b55890&gt;</msg>
<msg timestamp="20170918 12:23:36.503" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707b55890&gt;</msg>
<status status="PASS" endtime="20170918 12:23:36.503" starttime="20170918 12:23:36.502"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:36.504" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:36.504" level="TRACE">Return: UUID('5f01532f-3385-4757-804d-310faa3bc0b0')</msg>
<msg timestamp="20170918 12:23:36.504" level="INFO">${uuid} = 5f01532f-3385-4757-804d-310faa3bc0b0</msg>
<status status="PASS" endtime="20170918 12:23:36.504" starttime="20170918 12:23:36.504"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:36.505" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:36.506" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-5f01532f-3385-4757-804d-310faa3bc0b0'}</msg>
<msg timestamp="20170918 12:23:36.506" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-5f01532f-3385-4757-804d-310faa3bc0b0', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:36.506" starttime="20170918 12:23:36.505"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>aai</arg>
<arg>${data_path}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:36.507" level="TRACE">Arguments: [ 'aai' | '/aai/v8/service-design-and-creation/services' | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-5f01532f-3385-4757-804d-310faa3bc0b0'} ]</msg>
<msg timestamp="20170918 12:23:36.508" level="DEBUG">Starting new HTTPS connection (1): 192.168.20.40</msg>
<msg timestamp="20170918 12:23:36.582" level="DEBUG">https://192.168.20.40:8443 "GET /aai/v8/service-design-and-creation/services HTTP/1.1" 404 None</msg>
<msg timestamp="20170918 12:23:36.584" level="INFO">Get Request using : alias=aai, uri=/aai/v8/service-design-and-creation/services, headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-5f01532f-3385-4757-804d-310faa3bc0b0', u'X-FromAppId': u'robot-ete'} </msg>
<msg timestamp="20170918 12:23:36.584" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20170918 12:23:36.584" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:36.584" starttime="20170918 12:23:36.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from aai ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:36.586" level="TRACE">Arguments: [ 'Received response from aai {"requestError":{"serviceException":{"messageId":"SVC3001","text":"Resource not found for %1 using id %2 (msg=%3) (ec=%4)","variables":["GET","service-design-and-creation/services","Node Not Found:No Node of type service found at: service-design-and-creation/services","ERR.5.4.6114"]}}}' ]</msg>
<msg timestamp="20170918 12:23:36.586" level="INFO">Received response from aai {"requestError":{"serviceException":{"messageId":"SVC3001","text":"Resource not found for %1 using id %2 (msg=%3) (ec=%4)","variables":["GET","service-design-and-creation/services","Node Not Found:No Node of type service found at: service-design-and-creation/services","ERR.5.4.6114"]}}}</msg>
<msg timestamp="20170918 12:23:36.586" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:36.586" starttime="20170918 12:23:36.585"></status>
</kw>
<msg timestamp="20170918 12:23:36.587" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20170918 12:23:36.587" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:36.587" starttime="20170918 12:23:36.499"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${dict}</var>
</assign>
<msg timestamp="20170918 12:23:36.587" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:36.587" level="TRACE">Return: {}</msg>
<msg timestamp="20170918 12:23:36.588" level="INFO">${dict} = {}</msg>
<status status="PASS" endtime="20170918 12:23:36.588" starttime="20170918 12:23:36.587"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<msg timestamp="20170918 12:23:36.588" level="TRACE">Arguments: [ 'Should Be Equal As Strings' | '${resp.status_code}' | '200' ]</msg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:36.590" level="TRACE">Arguments: [ 404 | '200' ]</msg>
<msg timestamp="20170918 12:23:36.590" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:36.590" level="FAIL">404 != 200</msg>
<msg timestamp="20170918 12:23:36.590" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20170918 12:23:36.590" starttime="20170918 12:23:36.589"></status>
</kw>
<msg timestamp="20170918 12:23:36.590" level="TRACE">Return: (b'FAIL', '404 != 200')</msg>
<msg timestamp="20170918 12:23:36.590" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170918 12:23:36.591" level="INFO">${value} = 404 != 200</msg>
<status status="PASS" endtime="20170918 12:23:36.591" starttime="20170918 12:23:36.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == 'PASS'</arg>
<arg>Update Service Dictionary</arg>
<arg>${dict}</arg>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20170918 12:23:36.591" level="TRACE">Arguments: [ "'FAIL' == 'PASS'" | 'Update Service Dictionary' | '${dict}' | '${resp.json()}' ]</msg>
<msg timestamp="20170918 12:23:36.592" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:36.592" starttime="20170918 12:23:36.591"></status>
</kw>
<msg timestamp="20170918 12:23:36.592" level="TRACE">Return: {}</msg>
<msg timestamp="20170918 12:23:36.592" level="INFO">${dict} = {}</msg>
<status status="PASS" endtime="20170918 12:23:36.592" starttime="20170918 12:23:36.498"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Dictionary Should Contain Key</arg>
<arg>${dict}</arg>
<arg>${service_type}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<msg timestamp="20170918 12:23:36.593" level="TRACE">Arguments: [ 'Dictionary Should Contain Key' | '${dict}' | '${service_type}' ]</msg>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${service_type}</arg>
</arguments>
<msg timestamp="20170918 12:23:36.594" level="TRACE">Arguments: [ {} | 'vFW' ]</msg>
<msg timestamp="20170918 12:23:36.594" level="FAIL">Dictionary does not contain key 'vFW'.</msg>
<msg timestamp="20170918 12:23:36.594" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20170918 12:23:36.594" starttime="20170918 12:23:36.593"></status>
</kw>
<msg timestamp="20170918 12:23:36.594" level="TRACE">Return: (b'FAIL', "Dictionary does not contain key 'vFW'.")</msg>
<msg timestamp="20170918 12:23:36.594" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170918 12:23:36.594" level="INFO">${value} = Dictionary does not contain key 'vFW'.</msg>
<status status="PASS" endtime="20170918 12:23:36.594" starttime="20170918 12:23:36.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == 'FAIL'</arg>
<arg>Create Service</arg>
<arg>${service_type}</arg>
</arguments>
<msg timestamp="20170918 12:23:36.595" level="TRACE">Arguments: [ "'FAIL' == 'FAIL'" | 'Create Service' | '${service_type}' ]</msg>
<kw name="Create Service" library="create_service">
<doc>Creates a service in A&amp;AI</doc>
<arguments>
<arg>${service_type}</arg>
</arguments>
<msg timestamp="20170918 12:23:36.596" level="TRACE">Arguments: [ ${service_type}='vFW' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:36.597" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:36.597" level="TRACE">Return: UUID('2fd4ac97-1e59-4186-953d-6e22e4893e92')</msg>
<msg timestamp="20170918 12:23:36.597" level="INFO">${uuid} = 2fd4ac97-1e59-4186-953d-6e22e4893e92</msg>
<status status="PASS" endtime="20170918 12:23:36.597" starttime="20170918 12:23:36.596"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${AAI_ADD_SERVICE_BODY}</arg>
</arguments>
<assign>
<var>${data_template}</var>
</assign>
<msg timestamp="20170918 12:23:36.598" level="TRACE">Arguments: [ 'robot/assets/templates/aai/add_service_body.template' ]</msg>
<msg timestamp="20170918 12:23:36.598" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/aai/add_service_body.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/aai/add_service_body.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:36.808" level="TRACE">Return: '{\n   "service-id": "${UUID}",\n   "service-description": "${service_type}"\n}\n\n\n'</msg>
<msg timestamp="20170918 12:23:36.808" level="INFO">${data_template} = {
   "service-id": "${UUID}",
   "service-description": "${service_type}"
}


</msg>
<status status="PASS" endtime="20170918 12:23:36.808" starttime="20170918 12:23:36.597"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>service_type=${service_type}</arg>
<arg>UUID=${uuid}</arg>
</arguments>
<assign>
<var>${arguments}</var>
</assign>
<msg timestamp="20170918 12:23:36.809" level="TRACE">Arguments: [ 'service_type=${service_type}' | 'UUID=${uuid}' ]</msg>
<msg timestamp="20170918 12:23:36.809" level="TRACE">Return: {'UUID': UUID('2fd4ac97-1e59-4186-953d-6e22e4893e92'), 'service_type': 'vFW'}</msg>
<msg timestamp="20170918 12:23:36.809" level="INFO">${arguments} = {u'service_type': u'vFW', u'UUID': UUID('2fd4ac97-1e59-4186-953d-6e22e4893e92')}</msg>
<status status="PASS" endtime="20170918 12:23:36.810" starttime="20170918 12:23:36.808"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${data_template}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:36.810" level="TRACE">Arguments: [ ${json}='{\n   "service-id": "${UUID}",\n   "service-description": "${service_type}"\n}\n\n\n' | ${arguments}={'UUID': UUID('2fd4ac97-1e59-4186-953d-6e22e4893e92'), 'service_type': 'vFW'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:36.811" level="TRACE">Arguments: [ '{\n   "service-id": "${UUID}",\n   "service-description": "${service_type}"\n}\n\n\n' | {'UUID': UUID('2fd4ac97-1e59-4186-953d-6e22e4893e92'), 'service_type': 'vFW'} ]</msg>
<msg timestamp="20170918 12:23:36.812" level="TRACE">Return: '{\n   "service-id": "2fd4ac97-1e59-4186-953d-6e22e4893e92",\n   "service-description": "vFW"\n}\n\n\n'</msg>
<msg timestamp="20170918 12:23:36.812" level="INFO">${returned_string} = {
   "service-id": "2fd4ac97-1e59-4186-953d-6e22e4893e92",
   "service-description": "vFW"
}


</msg>
<status status="PASS" endtime="20170918 12:23:36.812" starttime="20170918 12:23:36.811"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:36.813" level="TRACE">Arguments: [ '{\n   "service-id": "2fd4ac97-1e59-4186-953d-6e22e4893e92",\n   "service-description": "vFW"\n}\n\n\n' ]</msg>
<msg timestamp="20170918 12:23:36.813" level="INFO">To JSON using : content={
   "service-id": "2fd4ac97-1e59-4186-953d-6e22e4893e92",
   "service-description": "vFW"
}


 </msg>
<msg timestamp="20170918 12:23:36.813" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:36.813" level="TRACE">Return: {'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'}</msg>
<msg timestamp="20170918 12:23:36.813" level="INFO">${returned_json} = {u'service-description': u'vFW', u'service-id': u'2fd4ac97-1e59-4186-953d-6e22e4893e92'}</msg>
<status status="PASS" endtime="20170918 12:23:36.813" starttime="20170918 12:23:36.812"></status>
</kw>
<msg timestamp="20170918 12:23:36.813" level="TRACE">Return: {'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'}</msg>
<msg timestamp="20170918 12:23:36.814" level="INFO">${data} = {u'service-description': u'vFW', u'service-id': u'2fd4ac97-1e59-4186-953d-6e22e4893e92'}</msg>
<status status="PASS" endtime="20170918 12:23:36.814" starttime="20170918 12:23:36.810"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${INDEX PATH}${ROOT_SERVICE_PATH}/service/${uuid}</arg>
</arguments>
<assign>
<var>${fullpath}</var>
</assign>
<msg timestamp="20170918 12:23:36.814" level="TRACE">Arguments: [ '/aai/v8/service-design-and-creation/services/service/2fd4ac97-1e59-4186-953d-6e22e4893e92' ]</msg>
<msg timestamp="20170918 12:23:36.815" level="TRACE">Return: '/aai/v8/service-design-and-creation/services/service/2fd4ac97-1e59-4186-953d-6e22e4893e92'</msg>
<msg timestamp="20170918 12:23:36.815" level="INFO">${fullpath} = /aai/v8/service-design-and-creation/services/service/2fd4ac97-1e59-4186-953d-6e22e4893e92</msg>
<status status="PASS" endtime="20170918 12:23:36.815" starttime="20170918 12:23:36.814"></status>
</kw>
<kw name="Run A&amp;AI Put Request" library="aai_interface">
<doc>Runs an A&amp;AI put request</doc>
<arguments>
<arg>${fullpath}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${put_resp}</var>
</assign>
<msg timestamp="20170918 12:23:36.816" level="TRACE">Arguments: [ ${data_path}='/aai/v8/service-design-and-creation/services/service/2fd4ac97-1e59-4186-953d-6e22e4893e92' | ${data}={'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'} ]</msg>
<kw name="Disable Warnings" library="HTTPUtils">
<doc>Disable the cert warnings when creating sessions for A&amp;AI API Calls</doc>
<msg timestamp="20170918 12:23:36.816" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:36.816" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:36.817" starttime="20170918 12:23:36.816"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_AAI_USERNAME}</arg>
<arg>${GLOBAL_AAI_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:36.817" level="TRACE">Arguments: [ b'AAI' | b'AAI' ]</msg>
<msg timestamp="20170918 12:23:36.817" level="TRACE">Return: [b'AAI', b'AAI']</msg>
<msg timestamp="20170918 12:23:36.818" level="INFO">${auth} = ['AAI', 'AAI']</msg>
<status status="PASS" endtime="20170918 12:23:36.818" starttime="20170918 12:23:36.817"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>aai</arg>
<arg>${AAI_FRONTEND_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:36.818" level="TRACE">Arguments: [ 'aai' | 'https://192.168.20.40:8443' | auth=[b'AAI', b'AAI'] ]</msg>
<msg timestamp="20170918 12:23:36.819" level="INFO">Creating Session using : alias=aai, url=https://192.168.20.40:8443, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707b1d290&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:36.819" level="DEBUG">Creating session: aai</msg>
<msg timestamp="20170918 12:23:36.819" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:36.819" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707b1d350&gt;</msg>
<msg timestamp="20170918 12:23:36.820" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707b1d350&gt;</msg>
<status status="PASS" endtime="20170918 12:23:36.820" starttime="20170918 12:23:36.818"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:36.820" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:36.820" level="TRACE">Return: UUID('bd3f9186-0717-4d74-9254-dd6b9d30a263')</msg>
<msg timestamp="20170918 12:23:36.821" level="INFO">${uuid} = bd3f9186-0717-4d74-9254-dd6b9d30a263</msg>
<status status="PASS" endtime="20170918 12:23:36.821" starttime="20170918 12:23:36.820"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:36.821" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:36.822" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-bd3f9186-0717-4d74-9254-dd6b9d30a263'}</msg>
<msg timestamp="20170918 12:23:36.822" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-bd3f9186-0717-4d74-9254-dd6b9d30a263', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:36.822" starttime="20170918 12:23:36.821"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>aai</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:36.823" level="TRACE">Arguments: [ 'aai' | '/aai/v8/service-design-and-creation/services/service/2fd4ac97-1e59-4186-953d-6e22e4893e92' | data={'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-bd3f9186-0717-4d74-9254-dd6b9d30a263'} ]</msg>
<msg timestamp="20170918 12:23:36.824" level="DEBUG">Starting new HTTPS connection (1): 192.168.20.40</msg>
<msg timestamp="20170918 12:23:37.630" level="DEBUG">https://192.168.20.40:8443 "PUT /aai/v8/service-design-and-creation/services/service/2fd4ac97-1e59-4186-953d-6e22e4893e92 HTTP/1.1" 201 None</msg>
<msg timestamp="20170918 12:23:37.632" level="DEBUG">put response: </msg>
<msg timestamp="20170918 12:23:37.632" level="INFO">Put Request using : alias=aai, uri=/aai/v8/service-design-and-creation/services/service/2fd4ac97-1e59-4186-953d-6e22e4893e92, data={"service-description": "vFW", "service-id": "2fd4ac97-1e59-4186-953d-6e22e4893e92"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-bd3f9186-0717-4d74-9254-dd6b9d30a263', u'X-FromAppId': u'robot-ete'}, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:37.632" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:37.632" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:37.632" starttime="20170918 12:23:36.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from aai ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:37.633" level="TRACE">Arguments: [ 'Received response from aai ' ]</msg>
<msg timestamp="20170918 12:23:37.634" level="INFO">Received response from aai </msg>
<msg timestamp="20170918 12:23:37.634" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:37.634" starttime="20170918 12:23:37.633"></status>
</kw>
<msg timestamp="20170918 12:23:37.634" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:37.634" level="INFO">${put_resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:37.634" starttime="20170918 12:23:36.815"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${put_resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20170918 12:23:37.635" level="TRACE">Arguments: [ 201 | '201' ]</msg>
<msg timestamp="20170918 12:23:37.635" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:37.635" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:37.635" starttime="20170918 12:23:37.635"></status>
</kw>
<msg timestamp="20170918 12:23:37.636" level="TRACE">Return: 201</msg>
<status status="PASS" endtime="20170918 12:23:37.636" starttime="20170918 12:23:36.596"></status>
</kw>
<msg timestamp="20170918 12:23:37.636" level="TRACE">Return: 201</msg>
<status status="PASS" endtime="20170918 12:23:37.636" starttime="20170918 12:23:36.595"></status>
</kw>
<msg timestamp="20170918 12:23:37.636" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:37.636" starttime="20170918 12:23:36.497"></status>
</kw>
<kw name="Create Service If Not Exists" library="create_service">
<doc>Creates a service in A&amp;AI if it doesn't exist</doc>
<arguments>
<arg>vLB</arg>
</arguments>
<msg timestamp="20170918 12:23:37.637" level="TRACE">Arguments: [ ${service_type}='vLB' ]</msg>
<kw name="Get Services" library="create_service">
<doc>Creates a service in A&amp;AI</doc>
<assign>
<var>${dict}</var>
</assign>
<msg timestamp="20170918 12:23:37.638" level="TRACE">Arguments: [  ]</msg>
<kw name="Run A&amp;AI Get Request" library="aai_interface">
<doc>Runs an A&amp;AI get request</doc>
<arguments>
<arg>${INDEX PATH}${ROOT_SERVICE_PATH}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:37.639" level="TRACE">Arguments: [ ${data_path}='/aai/v8/service-design-and-creation/services' ]</msg>
<kw name="Disable Warnings" library="HTTPUtils">
<doc>Disable the cert warnings when creating sessions for A&amp;AI API Calls</doc>
<msg timestamp="20170918 12:23:37.639" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:37.639" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:37.640" starttime="20170918 12:23:37.639"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_AAI_USERNAME}</arg>
<arg>${GLOBAL_AAI_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:37.640" level="TRACE">Arguments: [ b'AAI' | b'AAI' ]</msg>
<msg timestamp="20170918 12:23:37.640" level="TRACE">Return: [b'AAI', b'AAI']</msg>
<msg timestamp="20170918 12:23:37.641" level="INFO">${auth} = ['AAI', 'AAI']</msg>
<status status="PASS" endtime="20170918 12:23:37.641" starttime="20170918 12:23:37.640"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>aai</arg>
<arg>${AAI_FRONTEND_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:37.641" level="TRACE">Arguments: [ 'aai' | 'https://192.168.20.40:8443' | auth=[b'AAI', b'AAI'] ]</msg>
<msg timestamp="20170918 12:23:37.642" level="INFO">Creating Session using : alias=aai, url=https://192.168.20.40:8443, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707bb0490&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:37.642" level="DEBUG">Creating session: aai</msg>
<msg timestamp="20170918 12:23:37.642" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:37.642" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa708a26290&gt;</msg>
<msg timestamp="20170918 12:23:37.642" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa708a26290&gt;</msg>
<status status="PASS" endtime="20170918 12:23:37.642" starttime="20170918 12:23:37.641"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:37.643" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:37.643" level="TRACE">Return: UUID('a811a30e-c82e-4db4-9905-17c799425999')</msg>
<msg timestamp="20170918 12:23:37.643" level="INFO">${uuid} = a811a30e-c82e-4db4-9905-17c799425999</msg>
<status status="PASS" endtime="20170918 12:23:37.643" starttime="20170918 12:23:37.643"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:37.644" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:37.645" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-a811a30e-c82e-4db4-9905-17c799425999'}</msg>
<msg timestamp="20170918 12:23:37.645" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-a811a30e-c82e-4db4-9905-17c799425999', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:37.645" starttime="20170918 12:23:37.644"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>aai</arg>
<arg>${data_path}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:37.646" level="TRACE">Arguments: [ 'aai' | '/aai/v8/service-design-and-creation/services' | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-a811a30e-c82e-4db4-9905-17c799425999'} ]</msg>
<msg timestamp="20170918 12:23:37.647" level="DEBUG">Starting new HTTPS connection (1): 192.168.20.40</msg>
<msg timestamp="20170918 12:23:37.733" level="DEBUG">https://192.168.20.40:8443 "GET /aai/v8/service-design-and-creation/services HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:37.735" level="INFO">Get Request using : alias=aai, uri=/aai/v8/service-design-and-creation/services, headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-a811a30e-c82e-4db4-9905-17c799425999', u'X-FromAppId': u'robot-ete'} </msg>
<msg timestamp="20170918 12:23:37.735" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:37.735" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:37.735" starttime="20170918 12:23:37.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from aai ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:37.737" level="TRACE">Arguments: [ 'Received response from aai {"service":[{"service-id":"2fd4ac97-1e59-4186-953d-6e22e4893e92","service-description":"vFW","resource-version":"1505737417522"}]}' ]</msg>
<msg timestamp="20170918 12:23:37.737" level="INFO">Received response from aai {"service":[{"service-id":"2fd4ac97-1e59-4186-953d-6e22e4893e92","service-description":"vFW","resource-version":"1505737417522"}]}</msg>
<msg timestamp="20170918 12:23:37.737" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:37.737" starttime="20170918 12:23:37.737"></status>
</kw>
<msg timestamp="20170918 12:23:37.738" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:37.738" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:37.738" starttime="20170918 12:23:37.638"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>${dict}</var>
</assign>
<msg timestamp="20170918 12:23:37.739" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:37.739" level="TRACE">Return: {}</msg>
<msg timestamp="20170918 12:23:37.739" level="INFO">${dict} = {}</msg>
<status status="PASS" endtime="20170918 12:23:37.739" starttime="20170918 12:23:37.738"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<msg timestamp="20170918 12:23:37.740" level="TRACE">Arguments: [ 'Should Be Equal As Strings' | '${resp.status_code}' | '200' ]</msg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:37.741" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:37.741" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:37.741" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:37.741" starttime="20170918 12:23:37.740"></status>
</kw>
<msg timestamp="20170918 12:23:37.741" level="TRACE">Return: (b'PASS', None)</msg>
<msg timestamp="20170918 12:23:37.741" level="INFO">${status} = PASS</msg>
<msg timestamp="20170918 12:23:37.741" level="INFO">${value} = None</msg>
<status status="PASS" endtime="20170918 12:23:37.741" starttime="20170918 12:23:37.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == 'PASS'</arg>
<arg>Update Service Dictionary</arg>
<arg>${dict}</arg>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20170918 12:23:37.742" level="TRACE">Arguments: [ "'PASS' == 'PASS'" | 'Update Service Dictionary' | '${dict}' | '${resp.json()}' ]</msg>
<kw name="Update Service Dictionary" library="create_service">
<arguments>
<arg>${dict}</arg>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20170918 12:23:37.743" level="TRACE">Arguments: [ ${dict}={} | ${json}={'service': [{'resource-version': '1505737417522', 'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'}]} ]</msg>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${json}['service']</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20170918 12:23:37.744" level="TRACE">Arguments: [ "{u'service': [{u'resource-version': u'1505737417522', u'service-description': u'vFW', u'service-id': u'2fd4ac97-1e59-4186-953d-6e22e4893e92'}]}['service']" ]</msg>
<msg timestamp="20170918 12:23:37.745" level="TRACE">Return: [{'resource-version': '1505737417522', 'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'}]</msg>
<msg timestamp="20170918 12:23:37.745" level="INFO">${list} = [{u'service-description': u'vFW', u'service-id': u'2fd4ac97-1e59-4186-953d-6e22e4893e92', u'resource-version': u'1505737417522'}]</msg>
<status status="PASS" endtime="20170918 12:23:37.745" starttime="20170918 12:23:37.744"></status>
</kw>
<kw type="for" name="${map} IN [ @{list} ]">
<kw type="foritem" name="${map} = {u'service-description': u'vFW', u'service-id': u'2fd4ac97-1e59-4186-953d-6e22e4893e92', u'resource-version': u'1505737417522'}">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Get From Dictionary</arg>
<arg>${map}</arg>
<arg>service-description</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${service_type}</var>
</assign>
<msg timestamp="20170918 12:23:37.748" level="TRACE">Arguments: [ 'Get From Dictionary' | '${map}' | 'service-description' ]</msg>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${map}</arg>
<arg>service-description</arg>
</arguments>
<msg timestamp="20170918 12:23:37.749" level="TRACE">Arguments: [ {'resource-version': '1505737417522', 'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'} | 'service-description' ]</msg>
<msg timestamp="20170918 12:23:37.749" level="TRACE">Return: 'vFW'</msg>
<status status="PASS" endtime="20170918 12:23:37.749" starttime="20170918 12:23:37.748"></status>
</kw>
<msg timestamp="20170918 12:23:37.749" level="TRACE">Return: (b'PASS', 'vFW')</msg>
<msg timestamp="20170918 12:23:37.749" level="INFO">${status} = PASS</msg>
<msg timestamp="20170918 12:23:37.749" level="INFO">${service_type} = vFW</msg>
<status status="PASS" endtime="20170918 12:23:37.749" starttime="20170918 12:23:37.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == 'PASS'</arg>
<arg>Set To Dictionary</arg>
<arg>${dict}</arg>
<arg>${service_type}=${map}</arg>
</arguments>
<msg timestamp="20170918 12:23:37.750" level="TRACE">Arguments: [ "'PASS' == 'PASS'" | 'Set To Dictionary' | '${dict}' | '${service_type}=${map}' ]</msg>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${service_type}=${map}</arg>
</arguments>
<msg timestamp="20170918 12:23:37.751" level="TRACE">Arguments: [ {} | vFW={'resource-version': '1505737417522', 'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'} ]</msg>
<msg timestamp="20170918 12:23:37.752" level="TRACE">Return: {'vFW': {'resource-version': '1505737417522', 'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'}}</msg>
<status status="PASS" endtime="20170918 12:23:37.752" starttime="20170918 12:23:37.751"></status>
</kw>
<msg timestamp="20170918 12:23:37.752" level="TRACE">Return: {'vFW': {'resource-version': '1505737417522', 'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'}}</msg>
<status status="PASS" endtime="20170918 12:23:37.752" starttime="20170918 12:23:37.750"></status>
</kw>
<status status="PASS" endtime="20170918 12:23:37.752" starttime="20170918 12:23:37.745"></status>
</kw>
<status status="PASS" endtime="20170918 12:23:37.752" starttime="20170918 12:23:37.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${dict}</arg>
</arguments>
<msg timestamp="20170918 12:23:37.753" level="TRACE">Arguments: [ {'vFW': {'resource-version': '1505737417522', 'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'}} ]</msg>
<msg timestamp="20170918 12:23:37.753" level="INFO">{u'vFW': {u'service-description': u'vFW', u'service-id': u'2fd4ac97-1e59-4186-953d-6e22e4893e92', u'resource-version': u'1505737417522'}}</msg>
<msg timestamp="20170918 12:23:37.753" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:37.753" starttime="20170918 12:23:37.753"></status>
</kw>
<msg timestamp="20170918 12:23:37.753" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:37.754" starttime="20170918 12:23:37.743"></status>
</kw>
<msg timestamp="20170918 12:23:37.754" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:37.754" starttime="20170918 12:23:37.742"></status>
</kw>
<msg timestamp="20170918 12:23:37.754" level="TRACE">Return: {'vFW': {'resource-version': '1505737417522', 'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'}}</msg>
<msg timestamp="20170918 12:23:37.754" level="INFO">${dict} = {u'vFW': {u'service-description': u'vFW', u'service-id': u'2fd4ac97-1e59-4186-953d-6e22e4893e92', u'resource-version': u'1505737417522'}}</msg>
<status status="PASS" endtime="20170918 12:23:37.754" starttime="20170918 12:23:37.637"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Dictionary Should Contain Key</arg>
<arg>${dict}</arg>
<arg>${service_type}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<msg timestamp="20170918 12:23:37.755" level="TRACE">Arguments: [ 'Dictionary Should Contain Key' | '${dict}' | '${service_type}' ]</msg>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>${service_type}</arg>
</arguments>
<msg timestamp="20170918 12:23:37.756" level="TRACE">Arguments: [ {'vFW': {'resource-version': '1505737417522', 'service-description': 'vFW', 'service-id': '2fd4ac97-1e59-4186-953d-6e22e4893e92'}} | 'vLB' ]</msg>
<msg timestamp="20170918 12:23:37.756" level="FAIL">Dictionary does not contain key 'vLB'.</msg>
<msg timestamp="20170918 12:23:37.756" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20170918 12:23:37.756" starttime="20170918 12:23:37.755"></status>
</kw>
<msg timestamp="20170918 12:23:37.756" level="TRACE">Return: (b'FAIL', "Dictionary does not contain key 'vLB'.")</msg>
<msg timestamp="20170918 12:23:37.756" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170918 12:23:37.757" level="INFO">${value} = Dictionary does not contain key 'vLB'.</msg>
<status status="PASS" endtime="20170918 12:23:37.757" starttime="20170918 12:23:37.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == 'FAIL'</arg>
<arg>Create Service</arg>
<arg>${service_type}</arg>
</arguments>
<msg timestamp="20170918 12:23:37.757" level="TRACE">Arguments: [ "'FAIL' == 'FAIL'" | 'Create Service' | '${service_type}' ]</msg>
<kw name="Create Service" library="create_service">
<doc>Creates a service in A&amp;AI</doc>
<arguments>
<arg>${service_type}</arg>
</arguments>
<msg timestamp="20170918 12:23:37.758" level="TRACE">Arguments: [ ${service_type}='vLB' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:37.759" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:37.759" level="TRACE">Return: UUID('946f7b1a-7899-4be3-9dc8-c86bfa9af224')</msg>
<msg timestamp="20170918 12:23:37.759" level="INFO">${uuid} = 946f7b1a-7899-4be3-9dc8-c86bfa9af224</msg>
<status status="PASS" endtime="20170918 12:23:37.759" starttime="20170918 12:23:37.759"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${AAI_ADD_SERVICE_BODY}</arg>
</arguments>
<assign>
<var>${data_template}</var>
</assign>
<msg timestamp="20170918 12:23:37.760" level="TRACE">Arguments: [ 'robot/assets/templates/aai/add_service_body.template' ]</msg>
<msg timestamp="20170918 12:23:37.760" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/aai/add_service_body.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/aai/add_service_body.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:37.760" level="TRACE">Return: '{\n   "service-id": "${UUID}",\n   "service-description": "${service_type}"\n}\n\n\n'</msg>
<msg timestamp="20170918 12:23:37.761" level="INFO">${data_template} = {
   "service-id": "${UUID}",
   "service-description": "${service_type}"
}


</msg>
<status status="PASS" endtime="20170918 12:23:37.761" starttime="20170918 12:23:37.760"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>service_type=${service_type}</arg>
<arg>UUID=${uuid}</arg>
</arguments>
<assign>
<var>${arguments}</var>
</assign>
<msg timestamp="20170918 12:23:37.761" level="TRACE">Arguments: [ 'service_type=${service_type}' | 'UUID=${uuid}' ]</msg>
<msg timestamp="20170918 12:23:37.762" level="TRACE">Return: {'UUID': UUID('946f7b1a-7899-4be3-9dc8-c86bfa9af224'), 'service_type': 'vLB'}</msg>
<msg timestamp="20170918 12:23:37.762" level="INFO">${arguments} = {u'service_type': u'vLB', u'UUID': UUID('946f7b1a-7899-4be3-9dc8-c86bfa9af224')}</msg>
<status status="PASS" endtime="20170918 12:23:37.762" starttime="20170918 12:23:37.761"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${data_template}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:37.763" level="TRACE">Arguments: [ ${json}='{\n   "service-id": "${UUID}",\n   "service-description": "${service_type}"\n}\n\n\n' | ${arguments}={'UUID': UUID('946f7b1a-7899-4be3-9dc8-c86bfa9af224'), 'service_type': 'vLB'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:37.764" level="TRACE">Arguments: [ '{\n   "service-id": "${UUID}",\n   "service-description": "${service_type}"\n}\n\n\n' | {'UUID': UUID('946f7b1a-7899-4be3-9dc8-c86bfa9af224'), 'service_type': 'vLB'} ]</msg>
<msg timestamp="20170918 12:23:37.764" level="TRACE">Return: '{\n   "service-id": "946f7b1a-7899-4be3-9dc8-c86bfa9af224",\n   "service-description": "vLB"\n}\n\n\n'</msg>
<msg timestamp="20170918 12:23:37.764" level="INFO">${returned_string} = {
   "service-id": "946f7b1a-7899-4be3-9dc8-c86bfa9af224",
   "service-description": "vLB"
}


</msg>
<status status="PASS" endtime="20170918 12:23:37.764" starttime="20170918 12:23:37.763"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:37.765" level="TRACE">Arguments: [ '{\n   "service-id": "946f7b1a-7899-4be3-9dc8-c86bfa9af224",\n   "service-description": "vLB"\n}\n\n\n' ]</msg>
<msg timestamp="20170918 12:23:37.765" level="INFO">To JSON using : content={
   "service-id": "946f7b1a-7899-4be3-9dc8-c86bfa9af224",
   "service-description": "vLB"
}


 </msg>
<msg timestamp="20170918 12:23:37.765" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:37.765" level="TRACE">Return: {'service-description': 'vLB', 'service-id': '946f7b1a-7899-4be3-9dc8-c86bfa9af224'}</msg>
<msg timestamp="20170918 12:23:37.766" level="INFO">${returned_json} = {u'service-description': u'vLB', u'service-id': u'946f7b1a-7899-4be3-9dc8-c86bfa9af224'}</msg>
<status status="PASS" endtime="20170918 12:23:37.766" starttime="20170918 12:23:37.765"></status>
</kw>
<msg timestamp="20170918 12:23:37.766" level="TRACE">Return: {'service-description': 'vLB', 'service-id': '946f7b1a-7899-4be3-9dc8-c86bfa9af224'}</msg>
<msg timestamp="20170918 12:23:37.766" level="INFO">${data} = {u'service-description': u'vLB', u'service-id': u'946f7b1a-7899-4be3-9dc8-c86bfa9af224'}</msg>
<status status="PASS" endtime="20170918 12:23:37.766" starttime="20170918 12:23:37.762"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${INDEX PATH}${ROOT_SERVICE_PATH}/service/${uuid}</arg>
</arguments>
<assign>
<var>${fullpath}</var>
</assign>
<msg timestamp="20170918 12:23:37.767" level="TRACE">Arguments: [ '/aai/v8/service-design-and-creation/services/service/946f7b1a-7899-4be3-9dc8-c86bfa9af224' ]</msg>
<msg timestamp="20170918 12:23:37.767" level="TRACE">Return: '/aai/v8/service-design-and-creation/services/service/946f7b1a-7899-4be3-9dc8-c86bfa9af224'</msg>
<msg timestamp="20170918 12:23:37.767" level="INFO">${fullpath} = /aai/v8/service-design-and-creation/services/service/946f7b1a-7899-4be3-9dc8-c86bfa9af224</msg>
<status status="PASS" endtime="20170918 12:23:37.767" starttime="20170918 12:23:37.766"></status>
</kw>
<kw name="Run A&amp;AI Put Request" library="aai_interface">
<doc>Runs an A&amp;AI put request</doc>
<arguments>
<arg>${fullpath}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${put_resp}</var>
</assign>
<msg timestamp="20170918 12:23:37.768" level="TRACE">Arguments: [ ${data_path}='/aai/v8/service-design-and-creation/services/service/946f7b1a-7899-4be3-9dc8-c86bfa9af224' | ${data}={'service-description': 'vLB', 'service-id': '946f7b1a-7899-4be3-9dc8-c86bfa9af224'} ]</msg>
<kw name="Disable Warnings" library="HTTPUtils">
<doc>Disable the cert warnings when creating sessions for A&amp;AI API Calls</doc>
<msg timestamp="20170918 12:23:37.769" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:37.769" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:37.769" starttime="20170918 12:23:37.769"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_AAI_USERNAME}</arg>
<arg>${GLOBAL_AAI_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:37.770" level="TRACE">Arguments: [ b'AAI' | b'AAI' ]</msg>
<msg timestamp="20170918 12:23:37.770" level="TRACE">Return: [b'AAI', b'AAI']</msg>
<msg timestamp="20170918 12:23:37.770" level="INFO">${auth} = ['AAI', 'AAI']</msg>
<status status="PASS" endtime="20170918 12:23:37.770" starttime="20170918 12:23:37.769"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>aai</arg>
<arg>${AAI_FRONTEND_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:37.771" level="TRACE">Arguments: [ 'aai' | 'https://192.168.20.40:8443' | auth=[b'AAI', b'AAI'] ]</msg>
<msg timestamp="20170918 12:23:37.771" level="INFO">Creating Session using : alias=aai, url=https://192.168.20.40:8443, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707b40f10&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:37.771" level="DEBUG">Creating session: aai</msg>
<msg timestamp="20170918 12:23:37.771" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:37.771" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707b40e10&gt;</msg>
<msg timestamp="20170918 12:23:37.772" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707b40e10&gt;</msg>
<status status="PASS" endtime="20170918 12:23:37.772" starttime="20170918 12:23:37.770"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:37.772" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:37.772" level="TRACE">Return: UUID('f5ea3059-42b7-4653-998e-55f5f46cfc83')</msg>
<msg timestamp="20170918 12:23:37.772" level="INFO">${uuid} = f5ea3059-42b7-4653-998e-55f5f46cfc83</msg>
<status status="PASS" endtime="20170918 12:23:37.773" starttime="20170918 12:23:37.772"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:37.773" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:37.774" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-f5ea3059-42b7-4653-998e-55f5f46cfc83'}</msg>
<msg timestamp="20170918 12:23:37.774" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-f5ea3059-42b7-4653-998e-55f5f46cfc83', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:37.774" starttime="20170918 12:23:37.773"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>aai</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:37.775" level="TRACE">Arguments: [ 'aai' | '/aai/v8/service-design-and-creation/services/service/946f7b1a-7899-4be3-9dc8-c86bfa9af224' | data={'service-description': 'vLB', 'service-id': '946f7b1a-7899-4be3-9dc8-c86bfa9af224'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-f5ea3059-42b7-4653-998e-55f5f46cfc83'} ]</msg>
<msg timestamp="20170918 12:23:37.776" level="DEBUG">Starting new HTTPS connection (1): 192.168.20.40</msg>
<msg timestamp="20170918 12:23:38.571" level="DEBUG">https://192.168.20.40:8443 "PUT /aai/v8/service-design-and-creation/services/service/946f7b1a-7899-4be3-9dc8-c86bfa9af224 HTTP/1.1" 201 None</msg>
<msg timestamp="20170918 12:23:38.573" level="DEBUG">put response: </msg>
<msg timestamp="20170918 12:23:38.573" level="INFO">Put Request using : alias=aai, uri=/aai/v8/service-design-and-creation/services/service/946f7b1a-7899-4be3-9dc8-c86bfa9af224, data={"service-description": "vLB", "service-id": "946f7b1a-7899-4be3-9dc8-c86bfa9af224"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-f5ea3059-42b7-4653-998e-55f5f46cfc83', u'X-FromAppId': u'robot-ete'}, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:38.575" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:38.575" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:38.575" starttime="20170918 12:23:37.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from aai ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:38.576" level="TRACE">Arguments: [ 'Received response from aai ' ]</msg>
<msg timestamp="20170918 12:23:38.576" level="INFO">Received response from aai </msg>
<msg timestamp="20170918 12:23:38.576" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:38.576" starttime="20170918 12:23:38.575"></status>
</kw>
<msg timestamp="20170918 12:23:38.577" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:38.577" level="INFO">${put_resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:38.577" starttime="20170918 12:23:37.767"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${put_resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20170918 12:23:38.578" level="TRACE">Arguments: [ 201 | '201' ]</msg>
<msg timestamp="20170918 12:23:38.578" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:38.578" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:38.578" starttime="20170918 12:23:38.577"></status>
</kw>
<msg timestamp="20170918 12:23:38.578" level="TRACE">Return: 201</msg>
<status status="PASS" endtime="20170918 12:23:38.578" starttime="20170918 12:23:37.758"></status>
</kw>
<msg timestamp="20170918 12:23:38.578" level="TRACE">Return: 201</msg>
<status status="PASS" endtime="20170918 12:23:38.579" starttime="20170918 12:23:37.757"></status>
</kw>
<msg timestamp="20170918 12:23:38.579" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:38.579" starttime="20170918 12:23:37.637"></status>
</kw>
<msg timestamp="20170918 12:23:38.579" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:38.579" starttime="20170918 12:23:33.183"></status>
</kw>
<msg timestamp="20170918 12:23:38.579" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:38.579" starttime="20170918 12:23:27.592"></status>
</kw>
<kw name="Load Models" library="demo_preload">
<doc>Use openECOMP to Orchestrate a service.</doc>
<arguments>
<arg>${customer_name}</arg>
</arguments>
<msg timestamp="20170918 12:23:38.580" level="TRACE">Arguments: [ ${customer_name}='Demonstration' ]</msg>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${CUSTOMER_NAME}</arg>
<arg>${customer_name}</arg>
</arguments>
<msg timestamp="20170918 12:23:38.581" level="TRACE">Arguments: [ '${CUSTOMER_NAME}' | '${customer_name}' ]</msg>
<msg timestamp="20170918 12:23:38.581" level="INFO">${CUSTOMER_NAME} = Demonstration</msg>
<msg timestamp="20170918 12:23:38.581" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:38.581" starttime="20170918 12:23:38.581"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Distribute Model</arg>
<arg>vFW</arg>
<arg>demoVFW</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<msg timestamp="20170918 12:23:38.582" level="TRACE">Arguments: [ 'Distribute Model' | 'vFW' | 'demoVFW' ]</msg>
<kw name="Distribute Model" library="demo_preload">
<arguments>
<arg>vFW</arg>
<arg>demoVFW</arg>
</arguments>
<msg timestamp="20170918 12:23:38.583" level="TRACE">Arguments: [ ${service}='vFW' | ${modelName}='demoVFW' ]</msg>
<kw name="Model Distribution For Directory" library="model_test_template">
<arguments>
<arg>${service}</arg>
<arg>${modelName}</arg>
</arguments>
<assign>
<var>${service_model_type}</var>
<var>${vnf_type}</var>
<var>${vf_modules}</var>
</assign>
<msg timestamp="20170918 12:23:38.584" level="TRACE">Arguments: [ ${service}='vFW' | ${catalog_service_name}='demoVFW' ]</msg>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${GLOBAL_SERVICE_FOLDER_MAPPING}</arg>
<arg>${service}</arg>
</arguments>
<assign>
<var>${directory_list}</var>
</assign>
<msg timestamp="20170918 12:23:38.585" level="TRACE">Arguments: [ {b'vFW': [b'base_vfw'], b'vIMS': [b'base_clearwater'], b'vLB': [b'base_vlb'], b'vVG': [b'base_vvg']} | 'vFW' ]</msg>
<msg timestamp="20170918 12:23:38.586" level="TRACE">Return: [b'base_vfw']</msg>
<msg timestamp="20170918 12:23:38.586" level="INFO">${directory_list} = ['base_vfw']</msg>
<status status="PASS" endtime="20170918 12:23:38.586" starttime="20170918 12:23:38.585"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${ziplist}</var>
</assign>
<msg timestamp="20170918 12:23:38.586" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:38.586" level="TRACE">Return: []</msg>
<msg timestamp="20170918 12:23:38.586" level="INFO">${ziplist} = []</msg>
<status status="PASS" endtime="20170918 12:23:38.587" starttime="20170918 12:23:38.586"></status>
</kw>
<kw type="for" name="${directory} IN [ @{directory_list} ]">
<kw type="foritem" name="${directory} = base_vfw">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${ASDC_ZIP_DIRECTORY}/${directory}.zip</arg>
</arguments>
<assign>
<var>${zip}</var>
</assign>
<msg timestamp="20170918 12:23:38.588" level="TRACE">Arguments: [ 'robot/assets/asdc/temp/base_vfw.zip' ]</msg>
<msg timestamp="20170918 12:23:38.588" level="TRACE">Return: 'robot/assets/asdc/temp/base_vfw.zip'</msg>
<msg timestamp="20170918 12:23:38.588" level="INFO">${zip} = robot/assets/asdc/temp/base_vfw.zip</msg>
<status status="PASS" endtime="20170918 12:23:38.588" starttime="20170918 12:23:38.587"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${ASDC_ASSETS_DIRECTORY}/${directory}</arg>
</arguments>
<assign>
<var>${folder}</var>
</assign>
<msg timestamp="20170918 12:23:38.589" level="TRACE">Arguments: [ 'robot/assets/asdc/base_vfw' ]</msg>
<msg timestamp="20170918 12:23:38.589" level="TRACE">Return: 'robot/assets/asdc/base_vfw'</msg>
<msg timestamp="20170918 12:23:38.589" level="INFO">${folder} = robot/assets/asdc/base_vfw</msg>
<status status="PASS" endtime="20170918 12:23:38.589" starttime="20170918 12:23:38.588"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${ASDC_ASSETS_DIRECTORY}/temp</arg>
</arguments>
<msg timestamp="20170918 12:23:38.589" level="TRACE">Arguments: [ 'robot/assets/asdc/temp' ]</msg>
<msg timestamp="20170918 12:23:38.590" html="yes" level="INFO">Created directory '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/asdc/temp"&gt;/var/opt/OpenECOMP_ETE/robot/assets/asdc/temp&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:38.590" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:38.590" starttime="20170918 12:23:38.589"></status>
</kw>
<kw name="Create Zip From Files In Directory" library="ArchiveLibrary">
<doc>Take all files in a directory and create a zip package from them</doc>
<arguments>
<arg>${folder}</arg>
<arg>${zip}</arg>
</arguments>
<msg timestamp="20170918 12:23:38.591" level="TRACE">Arguments: [ 'robot/assets/asdc/base_vfw' | 'robot/assets/asdc/temp/base_vfw.zip' ]</msg>
<msg timestamp="20170918 12:23:38.615" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:38.615" starttime="20170918 12:23:38.590"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${ziplist}</arg>
<arg>${zip}</arg>
</arguments>
<msg timestamp="20170918 12:23:38.616" level="TRACE">Arguments: [ [] | 'robot/assets/asdc/temp/base_vfw.zip' ]</msg>
<msg timestamp="20170918 12:23:38.616" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:38.616" starttime="20170918 12:23:38.615"></status>
</kw>
<status status="PASS" endtime="20170918 12:23:38.616" starttime="20170918 12:23:38.587"></status>
</kw>
<status status="PASS" endtime="20170918 12:23:38.616" starttime="20170918 12:23:38.587"></status>
</kw>
<kw name="Distribute Model From ASDC" library="asdc_interface">
<doc>goes end to end creating all the asdc objects based ona model and distributing it to the systems. it then returns the service name, vf name and vf module name</doc>
<arguments>
<arg>${ziplist}</arg>
<arg>${catalog_service_name}</arg>
</arguments>
<assign>
<var>${catalog_service_name}</var>
<var>${catalog_resource_name}</var>
<var>${vf_modules}</var>
<var>${catalog_resource_ids}</var>
<var>${catalog_service_id}</var>
</assign>
<msg timestamp="20170918 12:23:38.617" level="TRACE">Arguments: [ ${model_zip_path}=['robot/assets/asdc/temp/base_vfw.zip'] | ${catalog_service_name}='demoVFW' ]</msg>
<kw name="Add ASDC Catalog Service" library="asdc_interface">
<doc>Creates an asdc Catalog Service and returns its id</doc>
<arguments>
<arg>${catalog_service_name}</arg>
</arguments>
<assign>
<var>${catalog_service_id}</var>
</assign>
<msg timestamp="20170918 12:23:38.618" level="TRACE">Arguments: [ ${catalog_service_name}='demoVFW' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:38.619" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:38.619" level="TRACE">Return: UUID('db6fa193-8ea6-496b-9e7f-b3359ce744a6')</msg>
<msg timestamp="20170918 12:23:38.619" level="INFO">${uuid} = db6fa193-8ea6-496b-9e7f-b3359ce744a6</msg>
<status status="PASS" endtime="20170918 12:23:38.619" starttime="20170918 12:23:38.618"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:38.620" level="TRACE">Arguments: [ 'str("db6fa193-8ea6-496b-9e7f-b3359ce744a6")[:23]' ]</msg>
<msg timestamp="20170918 12:23:38.620" level="TRACE">Return: b'db6fa193-8ea6-496b-9e7f'</msg>
<msg timestamp="20170918 12:23:38.620" level="INFO">${shortened_uuid} = db6fa193-8ea6-496b-9e7f</msg>
<status status="PASS" endtime="20170918 12:23:38.620" starttime="20170918 12:23:38.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${catalog_service_name}' ==''</arg>
<arg>${shortened_uuid}</arg>
<arg>${catalog_service_name}</arg>
</arguments>
<assign>
<var>${catalog_service_name}</var>
</assign>
<msg timestamp="20170918 12:23:38.621" level="TRACE">Arguments: [ "'demoVFW' ==''" | '${shortened_uuid}' | '${catalog_service_name}' ]</msg>
<msg timestamp="20170918 12:23:38.621" level="TRACE">Return: 'demoVFW'</msg>
<msg timestamp="20170918 12:23:38.621" level="INFO">${catalog_service_name} = demoVFW</msg>
<status status="PASS" endtime="20170918 12:23:38.621" starttime="20170918 12:23:38.620"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>service_name=${catalog_service_name}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:38.622" level="TRACE">Arguments: [ 'service_name=${catalog_service_name}' ]</msg>
<msg timestamp="20170918 12:23:38.622" level="TRACE">Return: {'service_name': 'demoVFW'}</msg>
<msg timestamp="20170918 12:23:38.622" level="INFO">${map} = {u'service_name': u'demoVFW'}</msg>
<status status="PASS" endtime="20170918 12:23:38.622" starttime="20170918 12:23:38.622"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_CATALOG_SERVICE_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:38.623" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/catalog_service.template' | ${arguments}={'service_name': 'demoVFW'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:38.624" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/catalog_service.template' ]</msg>
<msg timestamp="20170918 12:23:38.624" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/catalog_service.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/catalog_service.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:38.625" level="TRACE">Return: '{\n  "artifacts": {},\n  "toscaArtifacts": {},\n  "contactId": "cs0008",\n  "categories": [\n    {\n      "name": "Network L1-3",\n      "normalizedName": "network l1-3",\n      "uniqueId": "serviceNewCategory.network l1-3",\n      "icons": [\n        "network_l_1-3"\n      ]\n    }\n  ],\n  "description": "catalog service description",\n  "icon": "network_l_1-3",\n  "componentInstancesProperties": {},\n  "componentInstancesAttributes": {},\n  "name": "${service_name}",\n  "tags": [\n    "robot-ete",\n    "${service_name}"\n  ],\n  "capabilities": {},\n  "requirements": {},\n  "deploymentArtifacts": {},\n  "componentType": "SERVICE",\n  "projectCode": "123456",\n  "componentInstances": [],\n  "properties": [],\n  "attributes": [],\n  "groups": [],\n  "serviceApiArtifacts": {}\n}'</msg>
<msg timestamp="20170918 12:23:38.626" level="INFO">${json} = {
  "artifacts": {},
  "toscaArtifacts": {},
  "contactId": "cs0008",
  "categories": [
    {
      "name": "Network L1-3",
      "normalizedName": "network l1-3",
      "uniqueId": "serviceNewCategor...</msg>
<status status="PASS" endtime="20170918 12:23:38.626" starttime="20170918 12:23:38.624"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:38.626" level="TRACE">Arguments: [ ${json}='{\n  "artifacts": {},\n  "toscaArtifacts": {},\n  "contactId": "cs0008",\n  "categories": [\n    {\n      "name": "Network L1-3",\n      "normalizedName": "network l1-3",\n      "uniqueId": "serviceNewCategory.network l1-3",\n      "icons": [\n        "network_l_1-3"\n      ]\n    }\n  ],\n  "description": "catalog service description",\n  "icon": "network_l_1-3",\n  "componentInstancesProperties": {},\n  "componentInstancesAttributes": {},\n  "name": "${service_name}",\n  "tags": [\n    "robot-ete",\n    "${service_name}"\n  ],\n  "capabilities": {},\n  "requirements": {},\n  "deploymentArtifacts": {},\n  "componentType": "SERVICE",\n  "projectCode": "123456",\n  "componentInstances": [],\n  "properties": [],\n  "attributes": [],\n  "groups": [],\n  "serviceApiArtifacts": {}\n}' | ${arguments}={'service_name': 'demoVFW'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:38.628" level="TRACE">Arguments: [ '{\n  "artifacts": {},\n  "toscaArtifacts": {},\n  "contactId": "cs0008",\n  "categories": [\n    {\n      "name": "Network L1-3",\n      "normalizedName": "network l1-3",\n      "uniqueId": "serviceNewCategory.network l1-3",\n      "icons": [\n        "network_l_1-3"\n      ]\n    }\n  ],\n  "description": "catalog service description",\n  "icon": "network_l_1-3",\n  "componentInstancesProperties": {},\n  "componentInstancesAttributes": {},\n  "name": "${service_name}",\n  "tags": [\n    "robot-ete",\n    "${service_name}"\n  ],\n  "capabilities": {},\n  "requirements": {},\n  "deploymentArtifacts": {},\n  "componentType": "SERVICE",\n  "projectCode": "123456",\n  "componentInstances": [],\n  "properties": [],\n  "attributes": [],\n  "groups": [],\n  "serviceApiArtifacts": {}\n}' | {'service_name': 'demoVFW'} ]</msg>
<msg timestamp="20170918 12:23:38.628" level="TRACE">Return: '{\n  "artifacts": {},\n  "toscaArtifacts": {},\n  "contactId": "cs0008",\n  "categories": [\n    {\n      "name": "Network L1-3",\n      "normalizedName": "network l1-3",\n      "uniqueId": "serviceNewCategory.network l1-3",\n      "icons": [\n        "network_l_1-3"\n      ]\n    }\n  ],\n  "description": "catalog service description",\n  "icon": "network_l_1-3",\n  "componentInstancesProperties": {},\n  "componentInstancesAttributes": {},\n  "name": "demoVFW",\n  "tags": [\n    "robot-ete",\n    "demoVFW"\n  ],\n  "capabilities": {},\n  "requirements": {},\n  "deploymentArtifacts": {},\n  "componentType": "SERVICE",\n  "projectCode": "123456",\n  "componentInstances": [],\n  "properties": [],\n  "attributes": [],\n  "groups": [],\n  "serviceApiArtifacts": {}\n}'</msg>
<msg timestamp="20170918 12:23:38.628" level="INFO">${returned_string} = {
  "artifacts": {},
  "toscaArtifacts": {},
  "contactId": "cs0008",
  "categories": [
    {
      "name": "Network L1-3",
      "normalizedName": "network l1-3",
      "uniqueId": "serviceNewCategor...</msg>
<status status="PASS" endtime="20170918 12:23:38.628" starttime="20170918 12:23:38.627"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:38.629" level="TRACE">Arguments: [ '{\n  "artifacts": {},\n  "toscaArtifacts": {},\n  "contactId": "cs0008",\n  "categories": [\n    {\n      "name": "Network L1-3",\n      "normalizedName": "network l1-3",\n      "uniqueId": "serviceNewCategory.network l1-3",\n      "icons": [\n        "network_l_1-3"\n      ]\n    }\n  ],\n  "description": "catalog service description",\n  "icon": "network_l_1-3",\n  "componentInstancesProperties": {},\n  "componentInstancesAttributes": {},\n  "name": "demoVFW",\n  "tags": [\n    "robot-ete",\n    "demoVFW"\n  ],\n  "capabilities": {},\n  "requirements": {},\n  "deploymentArtifacts": {},\n  "componentType": "SERVICE",\n  "projectCode": "123456",\n  "componentInstances": [],\n  "properties": [],\n  "attributes": [],\n  "groups": [],\n  "serviceApiArtifacts": {}\n}' ]</msg>
<msg timestamp="20170918 12:23:38.629" level="INFO">To JSON using : content={
  "artifacts": {},
  "toscaArtifacts": {},
  "contactId": "cs0008",
  "categories": [
    {
      "name": "Network L1-3",
      "normalizedName": "network l1-3",
      "uniqueId": "serviceNewCategory.network l1-3",
      "icons": [
        "network_l_1-3"
      ]
    }
  ],
  "description": "catalog service description",
  "icon": "network_l_1-3",
  "componentInstancesProperties": {},
  "componentInstancesAttributes": {},
  "name": "demoVFW",
  "tags": [
    "robot-ete",
    "demoVFW"
  ],
  "capabilities": {},
  "requirements": {},
  "deploymentArtifacts": {},
  "componentType": "SERVICE",
  "projectCode": "123456",
  "componentInstances": [],
  "properties": [],
  "attributes": [],
  "groups": [],
  "serviceApiArtifacts": {}
} </msg>
<msg timestamp="20170918 12:23:38.629" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:38.629" level="TRACE">Return: {'artifacts': {},
 'attributes': [],
 'capabilities': {},
 'categories': [{'icons': ['network_l_1-3'], 'name': 'Network L1-3', 'normalizedName': 'network l1-3', 'uniqueId': 'serviceNewCategory.network l1-3'}],
 'componentInstances': [],
 'componentInstancesAttributes': {},
 'componentInstancesProperties': {},
 'componentType': 'SERVICE',
 'contactId': 'cs0008',
 'deploymentArtifacts': {},
 'description': 'catalog service description',
 'groups': [],
 'icon': 'network_l_1-3',
 'name': 'demoVFW',
 'projectCode': '123456',
 'properties': [],
 'requirements': {},
 'serviceApiArtifacts': {},
 'tags': ['robot-ete', 'demoVFW'],
 'toscaArtifacts': {}}</msg>
<msg timestamp="20170918 12:23:38.630" level="INFO">${returned_json} = {u'componentType': u'SERVICE', u'properties': [], u'requirements': {}, u'toscaArtifacts': {}, u'tags': [u'robot-ete', u'demoVFW'], u'artifacts': {}, u'description': u'catalog service description', u's...</msg>
<status status="PASS" endtime="20170918 12:23:38.630" starttime="20170918 12:23:38.629"></status>
</kw>
<msg timestamp="20170918 12:23:38.630" level="TRACE">Return: {'artifacts': {},
 'attributes': [],
 'capabilities': {},
 'categories': [{'icons': ['network_l_1-3'], 'name': 'Network L1-3', 'normalizedName': 'network l1-3', 'uniqueId': 'serviceNewCategory.network l1-3'}],
 'componentInstances': [],
 'componentInstancesAttributes': {},
 'componentInstancesProperties': {},
 'componentType': 'SERVICE',
 'contactId': 'cs0008',
 'deploymentArtifacts': {},
 'description': 'catalog service description',
 'groups': [],
 'icon': 'network_l_1-3',
 'name': 'demoVFW',
 'projectCode': '123456',
 'properties': [],
 'requirements': {},
 'serviceApiArtifacts': {},
 'tags': ['robot-ete', 'demoVFW'],
 'toscaArtifacts': {}}</msg>
<msg timestamp="20170918 12:23:38.631" level="INFO">${returned_json} = {u'componentType': u'SERVICE', u'properties': [], u'requirements': {}, u'toscaArtifacts': {}, u'tags': [u'robot-ete', u'demoVFW'], u'artifacts': {}, u'description': u'catalog service description', u's...</msg>
<status status="PASS" endtime="20170918 12:23:38.631" starttime="20170918 12:23:38.626"></status>
</kw>
<msg timestamp="20170918 12:23:38.631" level="TRACE">Return: {'artifacts': {},
 'attributes': [],
 'capabilities': {},
 'categories': [{'icons': ['network_l_1-3'], 'name': 'Network L1-3', 'normalizedName': 'network l1-3', 'uniqueId': 'serviceNewCategory.network l1-3'}],
 'componentInstances': [],
 'componentInstancesAttributes': {},
 'componentInstancesProperties': {},
 'componentType': 'SERVICE',
 'contactId': 'cs0008',
 'deploymentArtifacts': {},
 'description': 'catalog service description',
 'groups': [],
 'icon': 'network_l_1-3',
 'name': 'demoVFW',
 'projectCode': '123456',
 'properties': [],
 'requirements': {},
 'serviceApiArtifacts': {},
 'tags': ['robot-ete', 'demoVFW'],
 'toscaArtifacts': {}}</msg>
<msg timestamp="20170918 12:23:38.632" level="INFO">${data} = {u'componentType': u'SERVICE', u'properties': [], u'requirements': {}, u'toscaArtifacts': {}, u'tags': [u'robot-ete', u'demoVFW'], u'artifacts': {}, u'description': u'catalog service description', u's...</msg>
<status status="PASS" endtime="20170918 12:23:38.632" starttime="20170918 12:23:38.623"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_CATALOG_SERVICES_PATH}</arg>
<arg>${data}</arg>
<arg>${ASDC_DESIGNER_USER_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:38.633" level="TRACE">Arguments: [ ${data_path}='/sdc2/rest/v1/catalog/services' | ${data}={'artifacts': {},
 'attributes': [],
 'capabilities': {},
 'categories': [{'icons': ['network_l_1-3'], 'name': 'Network L1-3', 'normalizedName': 'network l1-3', 'uniqueId': 'serviceNewCategory.network l1-3'}],
 'componentInstances': [],
 'componentInstancesAttributes': {},
 'componentInstancesProperties': {},
 'componentType': 'SERVICE',
 'contactId': 'cs0008',
 'deploymentArtifacts': {},
 'description': 'catalog service description',
 'groups': [],
 'icon': 'network_l_1-3',
 'name': 'demoVFW',
 'projectCode': '123456',
 'properties': [],
 'requirements': {},
 'serviceApiArtifacts': {},
 'tags': ['robot-ete', 'demoVFW'],
 'toscaArtifacts': {}} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:38.634" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:38.634" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:38.634" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:38.635" starttime="20170918 12:23:38.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:38.635" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:38.635" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:38.635" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:38.635" starttime="20170918 12:23:38.635"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:38.636" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:38.636" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707b67890&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:38.636" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:38.637" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:38.637" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707b404d0&gt;</msg>
<msg timestamp="20170918 12:23:38.637" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707b404d0&gt;</msg>
<status status="PASS" endtime="20170918 12:23:38.637" starttime="20170918 12:23:38.636"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:38.638" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:38.638" level="TRACE">Return: UUID('613e5f7a-1ff7-4a9a-ac9a-54073f0739f8')</msg>
<msg timestamp="20170918 12:23:38.638" level="INFO">${uuid} = 613e5f7a-1ff7-4a9a-ac9a-54073f0739f8</msg>
<status status="PASS" endtime="20170918 12:23:38.638" starttime="20170918 12:23:38.637"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:38.639" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:38.639" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-613e5f7a-1ff7-4a9a-ac9a-54073f0739f8'}</msg>
<msg timestamp="20170918 12:23:38.639" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-613e5f7a-1ff7-4a9a-ac9a-54073f0739f8', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:38.640" starttime="20170918 12:23:38.638"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:38.640" level="TRACE">Arguments: [ 'asdc' | '/sdc2/rest/v1/catalog/services' | data={'artifacts': {},
 'attributes': [],
 'capabilities': {},
 'categories': [{'icons': ['network_l_1-3'], 'name': 'Network L1-3', 'normalizedName': 'network l1-3', 'uniqueId': 'serviceNewCategory.network l1-3'}],
 'componentInstances': [],
 'componentInstancesAttributes': {},
 'componentInstancesProperties': {},
 'componentType': 'SERVICE',
 'contactId': 'cs0008',
 'deploymentArtifacts': {},
 'description': 'catalog service description',
 'groups': [],
 'icon': 'network_l_1-3',
 'name': 'demoVFW',
 'projectCode': '123456',
 'properties': [],
 'requirements': {},
 'serviceApiArtifacts': {},
 'tags': ['robot-ete', 'demoVFW'],
 'toscaArtifacts': {}} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-613e5f7a-1ff7-4a9a-ac9a-54073f0739f8'} ]</msg>
<msg timestamp="20170918 12:23:38.642" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:40.400" level="DEBUG">http://192.168.20.35:8080 "POST /sdc2/rest/v1/catalog/services HTTP/1.1" 201 None</msg>
<msg timestamp="20170918 12:23:40.402" level="DEBUG">post response: {"artifacts":{"servicequestionnaire":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"controlloopfunctions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"deploymentArtifacts":{},"toscaArtifacts":{"assettoscacsar":{"timeout":0,"creationDate":1505737364667,"description":"TOSCA definition package of the asset","artifactName":"service-Demovfw-csar.csar","uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.assettoscacsar","artifactLabel":"assettoscacsar","artifactVersion":"0","artifactType":"TOSCA_CSAR","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Tosca Model","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"assettoscatemplate":{"timeout":0,"creationDate":1505737364667,"description":"TOSCA representation of the asset","artifactName":"service-Demovfw-template.yml","uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.assettoscatemplate","artifactLabel":"assettoscatemplate","artifactVersion":"0","artifactType":"TOSCA_TEMPLATE","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Tosca Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"categories":[{"name":"Network L1-3","normalizedName":"network l1-3","uniqueId":"serviceNewCategory.network l1-3","icons":["network_l_1-3"]}],"componentInstancesRelations":[],"derivedFromGenericType":"org.openecomp.resource.abstract.nodes.service","derivedFromGenericVersion":"1.0","toscaType":"topology_template","serviceApiArtifacts":{"configuration":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.configuration","artifactLabel":"configuration","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Configuration","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"testing":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.testing","artifactLabel":"testing","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Testing","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"logging":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.logging","artifactLabel":"logging","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Logging","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"monitoring":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.monitoring","artifactLabel":"monitoring","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Monitoring","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"reporting":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.reporting","artifactLabel":"reporting","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Reporting","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"instantiation":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.instantiation","artifactLabel":"instantiation","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Instantiation","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"distributionStatus":"DISTRIBUTION_NOT_APPROVED","projectCode":"123456","ecompGeneratedNaming":true,"namingPolicy":"","serviceType":"","serviceRole":"","icon":"network_l_1-3","version":"0.1","creationDate":1505737364704,"description":"catalog service description","tags":["robot-ete","demoVFW"],"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627","lastUpdateDate":1505737364704,"normalizedName":"demovfw","invariantUUID":"1faab5cc-00fc-4dd7-86ef-0fcae840d68d","componentType":"SERVICE","lifecycleState":"NOT_CERTIFIED_CHECKOUT","uuid":"837d1727-c8d1-4aa3-9644-b97ed21b67f1","systemName":"Demovfw","lastUpdaterUserId":"cs0008","highestVersion":true,"creatorFullName":"Carlos Santana","allArtifacts":{"controlloopfunctions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicequestionnaire":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"creatorUserId":"cs0008","contactId":"cs0008","conformanceLevel":"4.0","lastUpdaterFullName":"Carlos Santana","name":"demoVFW"}</msg>
<msg timestamp="20170918 12:23:40.402" level="INFO">Post Request using : alias=asdc, uri=/sdc2/rest/v1/catalog/services, data={"componentType": "SERVICE", "properties": [], "requirements": {}, "toscaArtifacts": {}, "tags": ["robot-ete", "demoVFW"], "artifacts": {}, "description": "catalog service description", "serviceApiArtifacts": {}, "capabilities": {}, "name": "demoVFW", "componentInstancesProperties": {}, "componentInstancesAttributes": {}, "contactId": "cs0008", "groups": [], "projectCode": "123456", "deploymentArtifacts": {}, "attributes": [], "componentInstances": [], "categories": [{"normalizedName": "network l1-3", "name": "Network L1-3", "uniqueId": "serviceNewCategory.network l1-3", "icons": ["network_l_1-3"]}], "icon": "network_l_1-3"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-613e5f7a-1ff7-4a9a-ac9a-54073f0739f8', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:40.403" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:40.403" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:40.403" starttime="20170918 12:23:38.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:40.404" level="TRACE">Arguments: [ 'Received response from asdc {"artifacts":{"servicequestionnaire":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"controlloopfunctions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"deploymentArtifacts":{},"toscaArtifacts":{"assettoscacsar":{"timeout":0,"creationDate":1505737364667,"description":"TOSCA definition package of the asset","artifactName":"service-Demovfw-csar.csar","uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.assettoscacsar","artifactLabel":"assettoscacsar","artifactVersion":"0","artifactType":"TOSCA_CSAR","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Tosca Model","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"assettoscatemplate":{"timeout":0,"creationDate":1505737364667,"description":"TOSCA representation of the asset","artifactName":"service-Demovfw-template.yml","uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.assettoscatemplate","artifactLabel":"assettoscatemplate","artifactVersion":"0","artifactType":"TOSCA_TEMPLATE","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Tosca Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"categories":[{"name":"Network L1-3","normalizedName":"network l1-3","uniqueId":"serviceNewCategory.network l1-3","icons":["network_l_1-3"]}],"componentInstancesRelations":[],"derivedFromGenericType":"org.openecomp.resource.abstract.nodes.service","derivedFromGenericVersion":"1.0","toscaType":"topology_template","serviceApiArtifacts":{"configuration":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.configuration","artifactLabel":"configuration","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Configuration","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"testing":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.testing","artifactLabel":"testing","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Testing","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"logging":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.logging","artifactLabel":"logging","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Logging","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"monitoring":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.monitoring","artifactLabel":"monitoring","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Monitoring","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"reporting":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.reporting","artifactLabel":"reporting","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Reporting","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"instantiation":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.instantiation","artifactLabel":"instantiation","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Instantiation","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"distributionStatus":"DISTRIBUTION_NOT_APPROVED","projectCode":"123456","ecompGeneratedNaming":true,"namingPolicy":"","serviceType":"","serviceRole":"","icon":"network_l_1-3","version":"0.1","creationDate":1505737364704,"description":"catalog service description","tags":["robot-ete","demoVFW"],"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627","lastUpdateDate":1505737364704,"normalizedName":"demovfw","invariantUUID":"1faab5cc-00fc-4dd7-86ef-0fcae840d68d","componentType":"SERVICE","lifecycleState":"NOT_CERTIFIED_CHECKOUT","uuid":"837d1727-c8d1-4aa3-9644-b97ed21b67f1","systemName":"Demovfw","lastUpdaterUserId":"cs0008","highestVersion":true,"creatorFullName":"Carlos Santana","allArtifacts":{"controlloopfunctions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicequestionnaire":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"creatorUserId":"cs0008","contactId":"cs0008","conformanceLevel":"4.0","lastUpdaterFullName":"Carlos Santana","name":"demoVFW"}' ]</msg>
<msg timestamp="20170918 12:23:40.405" level="INFO">Received response from asdc {"artifacts":{"servicequestionnaire":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"controlloopfunctions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"deploymentArtifacts":{},"toscaArtifacts":{"assettoscacsar":{"timeout":0,"creationDate":1505737364667,"description":"TOSCA definition package of the asset","artifactName":"service-Demovfw-csar.csar","uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.assettoscacsar","artifactLabel":"assettoscacsar","artifactVersion":"0","artifactType":"TOSCA_CSAR","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Tosca Model","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"assettoscatemplate":{"timeout":0,"creationDate":1505737364667,"description":"TOSCA representation of the asset","artifactName":"service-Demovfw-template.yml","uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.assettoscatemplate","artifactLabel":"assettoscatemplate","artifactVersion":"0","artifactType":"TOSCA_TEMPLATE","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Tosca Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"categories":[{"name":"Network L1-3","normalizedName":"network l1-3","uniqueId":"serviceNewCategory.network l1-3","icons":["network_l_1-3"]}],"componentInstancesRelations":[],"derivedFromGenericType":"org.openecomp.resource.abstract.nodes.service","derivedFromGenericVersion":"1.0","toscaType":"topology_template","serviceApiArtifacts":{"configuration":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.configuration","artifactLabel":"configuration","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Configuration","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"testing":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.testing","artifactLabel":"testing","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Testing","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"logging":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.logging","artifactLabel":"logging","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Logging","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"monitoring":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.monitoring","artifactLabel":"monitoring","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Monitoring","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"reporting":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.reporting","artifactLabel":"reporting","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Reporting","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"instantiation":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.instantiation","artifactLabel":"instantiation","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737364667,"artifactDisplayName":"Instantiation","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"distributionStatus":"DISTRIBUTION_NOT_APPROVED","projectCode":"123456","ecompGeneratedNaming":true,"namingPolicy":"","serviceType":"","serviceRole":"","icon":"network_l_1-3","version":"0.1","creationDate":1505737364704,"description":"catalog service description","tags":["robot-ete","demoVFW"],"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627","lastUpdateDate":1505737364704,"normalizedName":"demovfw","invariantUUID":"1faab5cc-00fc-4dd7-86ef-0fcae840d68d","componentType":"SERVICE","lifecycleState":"NOT_CERTIFIED_CHECKOUT","uuid":"837d1727-c8d1-4aa3-9644-b97ed21b67f1","systemName":"Demovfw","lastUpdaterUserId":"cs0008","highestVersion":true,"creatorFullName":"Carlos Santana","allArtifacts":{"controlloopfunctions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicequestionnaire":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737364667,"uniqueId":"5786ab5d-1855-4901-ac0f-0221cb5a3627.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737364667,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"creatorUserId":"cs0008","contactId":"cs0008","conformanceLevel":"4.0","lastUpdaterFullName":"Carlos Santana","name":"demoVFW"}</msg>
<msg timestamp="20170918 12:23:40.405" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:40.405" starttime="20170918 12:23:40.403"></status>
</kw>
<msg timestamp="20170918 12:23:40.406" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:40.406" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:40.406" starttime="20170918 12:23:38.632"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20170918 12:23:40.407" level="TRACE">Arguments: [ 201 | '201' ]</msg>
<msg timestamp="20170918 12:23:40.407" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:40.407" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:40.407" starttime="20170918 12:23:40.406"></status>
</kw>
<msg timestamp="20170918 12:23:40.408" level="TRACE">Return: '5786ab5d-1855-4901-ac0f-0221cb5a3627'</msg>
<msg timestamp="20170918 12:23:40.408" level="INFO">${catalog_service_id} = 5786ab5d-1855-4901-ac0f-0221cb5a3627</msg>
<status status="PASS" endtime="20170918 12:23:40.408" starttime="20170918 12:23:38.617"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${catalog_resource_ids}</var>
</assign>
<msg timestamp="20170918 12:23:40.409" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:40.409" level="TRACE">Return: []</msg>
<msg timestamp="20170918 12:23:40.409" level="INFO">${catalog_resource_ids} = []</msg>
<status status="PASS" endtime="20170918 12:23:40.409" starttime="20170918 12:23:40.409"></status>
</kw>
<kw type="for" name="${zip} IN [ @{model_zip_path} ]">
<kw type="foritem" name="${zip} = robot/assets/asdc/temp/base_vfw.zip">
<kw name="Setup ASDC Catalog Resource" library="asdc_interface">
<doc>Creates all the steps a vf needs for an asdc catalog resource and returns the id</doc>
<arguments>
<arg>${zip}</arg>
</arguments>
<assign>
<var>${loop_catalog_resource_id}</var>
</assign>
<msg timestamp="20170918 12:23:40.411" level="TRACE">Arguments: [ ${model_zip_path}='robot/assets/asdc/temp/base_vfw.zip' ]</msg>
<kw name="Add ASDC License Model" library="asdc_interface">
<doc>Creates an asdc license model and returns its id</doc>
<assign>
<var>${license_model_id}</var>
</assign>
<msg timestamp="20170918 12:23:40.412" level="TRACE">Arguments: [  ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:40.412" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:40.412" level="TRACE">Return: UUID('2fd7999c-f632-4ce7-b924-19f1fa18d9c4')</msg>
<msg timestamp="20170918 12:23:40.413" level="INFO">${uuid} = 2fd7999c-f632-4ce7-b924-19f1fa18d9c4</msg>
<status status="PASS" endtime="20170918 12:23:40.413" starttime="20170918 12:23:40.412"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:40.413" level="TRACE">Arguments: [ 'str("2fd7999c-f632-4ce7-b924-19f1fa18d9c4")[:23]' ]</msg>
<msg timestamp="20170918 12:23:40.414" level="TRACE">Return: b'2fd7999c-f632-4ce7-b924'</msg>
<msg timestamp="20170918 12:23:40.414" level="INFO">${shortened_uuid} = 2fd7999c-f632-4ce7-b924</msg>
<status status="PASS" endtime="20170918 12:23:40.414" starttime="20170918 12:23:40.413"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>vendor_name=${shortened_uuid}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:40.414" level="TRACE">Arguments: [ 'vendor_name=${shortened_uuid}' ]</msg>
<msg timestamp="20170918 12:23:40.415" level="TRACE">Return: {'vendor_name': b'2fd7999c-f632-4ce7-b924'}</msg>
<msg timestamp="20170918 12:23:40.415" level="INFO">${map} = {u'vendor_name': '2fd7999c-f632-4ce7-b924'}</msg>
<status status="PASS" endtime="20170918 12:23:40.415" starttime="20170918 12:23:40.414"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_LICENSE_MODEL_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:40.416" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/license_model.template' | ${arguments}={'vendor_name': b'2fd7999c-f632-4ce7-b924'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:40.417" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/license_model.template' ]</msg>
<msg timestamp="20170918 12:23:40.417" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/license_model.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/license_model.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:40.433" level="TRACE">Return: '{\n  "vendorName": "${vendor_name}",\n  "description": "vendor license model",\n  "iconRef": "icon"\n}'</msg>
<msg timestamp="20170918 12:23:40.434" level="INFO">${json} = {
  "vendorName": "${vendor_name}",
  "description": "vendor license model",
  "iconRef": "icon"
}</msg>
<status status="PASS" endtime="20170918 12:23:40.434" starttime="20170918 12:23:40.416"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:40.435" level="TRACE">Arguments: [ ${json}='{\n  "vendorName": "${vendor_name}",\n  "description": "vendor license model",\n  "iconRef": "icon"\n}' | ${arguments}={'vendor_name': b'2fd7999c-f632-4ce7-b924'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:40.436" level="TRACE">Arguments: [ '{\n  "vendorName": "${vendor_name}",\n  "description": "vendor license model",\n  "iconRef": "icon"\n}' | {'vendor_name': b'2fd7999c-f632-4ce7-b924'} ]</msg>
<msg timestamp="20170918 12:23:40.436" level="TRACE">Return: '{\n  "vendorName": "2fd7999c-f632-4ce7-b924",\n  "description": "vendor license model",\n  "iconRef": "icon"\n}'</msg>
<msg timestamp="20170918 12:23:40.436" level="INFO">${returned_string} = {
  "vendorName": "2fd7999c-f632-4ce7-b924",
  "description": "vendor license model",
  "iconRef": "icon"
}</msg>
<status status="PASS" endtime="20170918 12:23:40.437" starttime="20170918 12:23:40.435"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:40.437" level="TRACE">Arguments: [ '{\n  "vendorName": "2fd7999c-f632-4ce7-b924",\n  "description": "vendor license model",\n  "iconRef": "icon"\n}' ]</msg>
<msg timestamp="20170918 12:23:40.437" level="INFO">To JSON using : content={
  "vendorName": "2fd7999c-f632-4ce7-b924",
  "description": "vendor license model",
  "iconRef": "icon"
} </msg>
<msg timestamp="20170918 12:23:40.437" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:40.438" level="TRACE">Return: {'description': 'vendor license model', 'iconRef': 'icon', 'vendorName': '2fd7999c-f632-4ce7-b924'}</msg>
<msg timestamp="20170918 12:23:40.438" level="INFO">${returned_json} = {u'iconRef': u'icon', u'vendorName': u'2fd7999c-f632-4ce7-b924', u'description': u'vendor license model'}</msg>
<status status="PASS" endtime="20170918 12:23:40.438" starttime="20170918 12:23:40.437"></status>
</kw>
<msg timestamp="20170918 12:23:40.438" level="TRACE">Return: {'description': 'vendor license model', 'iconRef': 'icon', 'vendorName': '2fd7999c-f632-4ce7-b924'}</msg>
<msg timestamp="20170918 12:23:40.438" level="INFO">${returned_json} = {u'iconRef': u'icon', u'vendorName': u'2fd7999c-f632-4ce7-b924', u'description': u'vendor license model'}</msg>
<status status="PASS" endtime="20170918 12:23:40.438" starttime="20170918 12:23:40.434"></status>
</kw>
<msg timestamp="20170918 12:23:40.439" level="TRACE">Return: {'description': 'vendor license model', 'iconRef': 'icon', 'vendorName': '2fd7999c-f632-4ce7-b924'}</msg>
<msg timestamp="20170918 12:23:40.439" level="INFO">${data} = {u'iconRef': u'icon', u'vendorName': u'2fd7999c-f632-4ce7-b924', u'description': u'vendor license model'}</msg>
<status status="PASS" endtime="20170918 12:23:40.439" starttime="20170918 12:23:40.415"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:40.440" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models' | ${data}={'description': 'vendor license model', 'iconRef': 'icon', 'vendorName': '2fd7999c-f632-4ce7-b924'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:40.441" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:40.441" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:40.441" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:40.441" starttime="20170918 12:23:40.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:40.442" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:40.442" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:40.442" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:40.442" starttime="20170918 12:23:40.441"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:40.443" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:40.443" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707b1d2d0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:40.443" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:40.443" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:40.443" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707b1d050&gt;</msg>
<msg timestamp="20170918 12:23:40.443" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707b1d050&gt;</msg>
<status status="PASS" endtime="20170918 12:23:40.444" starttime="20170918 12:23:40.442"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:40.444" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:40.444" level="TRACE">Return: UUID('613af99e-ca14-4ecf-8a9a-31dadda98c78')</msg>
<msg timestamp="20170918 12:23:40.444" level="INFO">${uuid} = 613af99e-ca14-4ecf-8a9a-31dadda98c78</msg>
<status status="PASS" endtime="20170918 12:23:40.444" starttime="20170918 12:23:40.444"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:40.445" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:40.446" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-613af99e-ca14-4ecf-8a9a-31dadda98c78'}</msg>
<msg timestamp="20170918 12:23:40.446" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-613af99e-ca14-4ecf-8a9a-31dadda98c78', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:40.446" starttime="20170918 12:23:40.445"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:40.447" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models' | data={'description': 'vendor license model', 'iconRef': 'icon', 'vendorName': '2fd7999c-f632-4ce7-b924'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-613af99e-ca14-4ecf-8a9a-31dadda98c78'} ]</msg>
<msg timestamp="20170918 12:23:40.448" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:40.758" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-license-models HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:40.759" level="DEBUG">post response: {"value":"cb891cc725bd4377929296369d0a1e45"}</msg>
<msg timestamp="20170918 12:23:40.759" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models, data={"iconRef": "icon", "vendorName": "2fd7999c-f632-4ce7-b924", "description": "vendor license model"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-613af99e-ca14-4ecf-8a9a-31dadda98c78', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:40.759" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:40.759" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:40.759" starttime="20170918 12:23:40.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:40.760" level="TRACE">Arguments: [ 'Received response from asdc {"value":"cb891cc725bd4377929296369d0a1e45"}' ]</msg>
<msg timestamp="20170918 12:23:40.760" level="INFO">Received response from asdc {"value":"cb891cc725bd4377929296369d0a1e45"}</msg>
<msg timestamp="20170918 12:23:40.760" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:40.761" starttime="20170918 12:23:40.760"></status>
</kw>
<msg timestamp="20170918 12:23:40.761" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:40.761" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:40.761" starttime="20170918 12:23:40.439"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:40.762" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:40.762" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:40.762" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:40.762" starttime="20170918 12:23:40.761"></status>
</kw>
<msg timestamp="20170918 12:23:40.762" level="TRACE">Return: 'cb891cc725bd4377929296369d0a1e45'</msg>
<msg timestamp="20170918 12:23:40.763" level="INFO">${license_model_id} = cb891cc725bd4377929296369d0a1e45</msg>
<status status="PASS" endtime="20170918 12:23:40.763" starttime="20170918 12:23:40.411"></status>
</kw>
<kw name="Add ASDC License Group" library="asdc_interface">
<doc>Creates an asdc license group and returns its id</doc>
<arguments>
<arg>${license_model_id}</arg>
</arguments>
<assign>
<var>${key_group_id}</var>
</assign>
<msg timestamp="20170918 12:23:40.763" level="TRACE">Arguments: [ ${license_model_id}='cb891cc725bd4377929296369d0a1e45' | ${version_id}='0.1' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:40.764" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:40.764" level="TRACE">Return: UUID('649dd416-059b-4e72-99a4-55ae3e11fa7b')</msg>
<msg timestamp="20170918 12:23:40.764" level="INFO">${uuid} = 649dd416-059b-4e72-99a4-55ae3e11fa7b</msg>
<status status="PASS" endtime="20170918 12:23:40.765" starttime="20170918 12:23:40.764"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:40.765" level="TRACE">Arguments: [ 'str("649dd416-059b-4e72-99a4-55ae3e11fa7b")[:23]' ]</msg>
<msg timestamp="20170918 12:23:40.765" level="TRACE">Return: b'649dd416-059b-4e72-99a4'</msg>
<msg timestamp="20170918 12:23:40.766" level="INFO">${shortened_uuid} = 649dd416-059b-4e72-99a4</msg>
<status status="PASS" endtime="20170918 12:23:40.766" starttime="20170918 12:23:40.765"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key_group_name=${shortened_uuid}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:40.766" level="TRACE">Arguments: [ 'key_group_name=${shortened_uuid}' ]</msg>
<msg timestamp="20170918 12:23:40.767" level="TRACE">Return: {'key_group_name': b'649dd416-059b-4e72-99a4'}</msg>
<msg timestamp="20170918 12:23:40.767" level="INFO">${map} = {u'key_group_name': '649dd416-059b-4e72-99a4'}</msg>
<status status="PASS" endtime="20170918 12:23:40.767" starttime="20170918 12:23:40.766"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_KEY_GROUP_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:40.768" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/key_group.template' | ${arguments}={'key_group_name': b'649dd416-059b-4e72-99a4'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:40.769" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/key_group.template' ]</msg>
<msg timestamp="20170918 12:23:40.769" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/key_group.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/key_group.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:40.827" level="TRACE">Return: '{\n  "name": "${key_group_name}",\n  "description": "vendor license key group",\n  "operationalScope": {\n    "choices": [\n      "Tenant"\n    ],\n    "other": ""\n  },\n  "type": "Universal"\n}'</msg>
<msg timestamp="20170918 12:23:40.827" level="INFO">${json} = {
  "name": "${key_group_name}",
  "description": "vendor license key group",
  "operationalScope": {
    "choices": [
      "Tenant"
    ],
    "other": ""
  },
  "type": "Universal"
}</msg>
<status status="PASS" endtime="20170918 12:23:40.827" starttime="20170918 12:23:40.768"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:40.828" level="TRACE">Arguments: [ ${json}='{\n  "name": "${key_group_name}",\n  "description": "vendor license key group",\n  "operationalScope": {\n    "choices": [\n      "Tenant"\n    ],\n    "other": ""\n  },\n  "type": "Universal"\n}' | ${arguments}={'key_group_name': b'649dd416-059b-4e72-99a4'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:40.829" level="TRACE">Arguments: [ '{\n  "name": "${key_group_name}",\n  "description": "vendor license key group",\n  "operationalScope": {\n    "choices": [\n      "Tenant"\n    ],\n    "other": ""\n  },\n  "type": "Universal"\n}' | {'key_group_name': b'649dd416-059b-4e72-99a4'} ]</msg>
<msg timestamp="20170918 12:23:40.830" level="TRACE">Return: '{\n  "name": "649dd416-059b-4e72-99a4",\n  "description": "vendor license key group",\n  "operationalScope": {\n    "choices": [\n      "Tenant"\n    ],\n    "other": ""\n  },\n  "type": "Universal"\n}'</msg>
<msg timestamp="20170918 12:23:40.830" level="INFO">${returned_string} = {
  "name": "649dd416-059b-4e72-99a4",
  "description": "vendor license key group",
  "operationalScope": {
    "choices": [
      "Tenant"
    ],
    "other": ""
  },
  "type": "Universal"
}</msg>
<status status="PASS" endtime="20170918 12:23:40.830" starttime="20170918 12:23:40.829"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:40.831" level="TRACE">Arguments: [ '{\n  "name": "649dd416-059b-4e72-99a4",\n  "description": "vendor license key group",\n  "operationalScope": {\n    "choices": [\n      "Tenant"\n    ],\n    "other": ""\n  },\n  "type": "Universal"\n}' ]</msg>
<msg timestamp="20170918 12:23:40.831" level="INFO">To JSON using : content={
  "name": "649dd416-059b-4e72-99a4",
  "description": "vendor license key group",
  "operationalScope": {
    "choices": [
      "Tenant"
    ],
    "other": ""
  },
  "type": "Universal"
} </msg>
<msg timestamp="20170918 12:23:40.831" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:40.831" level="TRACE">Return: {'description': 'vendor license key group', 'name': '649dd416-059b-4e72-99a4', 'operationalScope': {'choices': ['Tenant'], 'other': ''}, 'type': 'Universal'}</msg>
<msg timestamp="20170918 12:23:40.831" level="INFO">${returned_json} = {u'operationalScope': {u'other': u'', u'choices': [u'Tenant']}, u'type': u'Universal', u'name': u'649dd416-059b-4e72-99a4', u'description': u'vendor license key group'}</msg>
<status status="PASS" endtime="20170918 12:23:40.831" starttime="20170918 12:23:40.830"></status>
</kw>
<msg timestamp="20170918 12:23:40.832" level="TRACE">Return: {'description': 'vendor license key group', 'name': '649dd416-059b-4e72-99a4', 'operationalScope': {'choices': ['Tenant'], 'other': ''}, 'type': 'Universal'}</msg>
<msg timestamp="20170918 12:23:40.832" level="INFO">${returned_json} = {u'operationalScope': {u'other': u'', u'choices': [u'Tenant']}, u'type': u'Universal', u'name': u'649dd416-059b-4e72-99a4', u'description': u'vendor license key group'}</msg>
<status status="PASS" endtime="20170918 12:23:40.832" starttime="20170918 12:23:40.827"></status>
</kw>
<msg timestamp="20170918 12:23:40.832" level="TRACE">Return: {'description': 'vendor license key group', 'name': '649dd416-059b-4e72-99a4', 'operationalScope': {'choices': ['Tenant'], 'other': ''}, 'type': 'Universal'}</msg>
<msg timestamp="20170918 12:23:40.832" level="INFO">${data} = {u'operationalScope': {u'other': u'', u'choices': [u'Tenant']}, u'type': u'Universal', u'name': u'649dd416-059b-4e72-99a4', u'description': u'vendor license key group'}</msg>
<status status="PASS" endtime="20170918 12:23:40.832" starttime="20170918 12:23:40.767"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${license_model_id}/versions/${version_id}${ASDC_VENDOR_KEY_GROUP_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:40.834" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/license-key-groups' | ${data}={'description': 'vendor license key group', 'name': '649dd416-059b-4e72-99a4', 'operationalScope': {'choices': ['Tenant'], 'other': ''}, 'type': 'Universal'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:40.835" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:40.835" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:40.835" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:40.835" starttime="20170918 12:23:40.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:40.836" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:40.836" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:40.836" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:40.836" starttime="20170918 12:23:40.835"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:40.837" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:40.837" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707b40590&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:40.837" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:40.837" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:40.837" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707c2cbd0&gt;</msg>
<msg timestamp="20170918 12:23:40.838" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707c2cbd0&gt;</msg>
<status status="PASS" endtime="20170918 12:23:40.838" starttime="20170918 12:23:40.836"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:40.838" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:40.838" level="TRACE">Return: UUID('f61960f0-bbeb-455a-807a-088e35124a4f')</msg>
<msg timestamp="20170918 12:23:40.839" level="INFO">${uuid} = f61960f0-bbeb-455a-807a-088e35124a4f</msg>
<status status="PASS" endtime="20170918 12:23:40.839" starttime="20170918 12:23:40.838"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:40.839" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:40.840" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-f61960f0-bbeb-455a-807a-088e35124a4f'}</msg>
<msg timestamp="20170918 12:23:40.840" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-f61960f0-bbeb-455a-807a-088e35124a4f', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:40.840" starttime="20170918 12:23:40.839"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:40.841" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/license-key-groups' | data={'description': 'vendor license key group', 'name': '649dd416-059b-4e72-99a4', 'operationalScope': {'choices': ['Tenant'], 'other': ''}, 'type': 'Universal'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-f61960f0-bbeb-455a-807a-088e35124a4f'} ]</msg>
<msg timestamp="20170918 12:23:40.843" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:40.963" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/license-key-groups HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:40.963" level="DEBUG">post response: {"value":"0aab4b48bea74cfdaf6d4cc7a52bb82a"}</msg>
<msg timestamp="20170918 12:23:40.963" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/license-key-groups, data={"operationalScope": {"other": "", "choices": ["Tenant"]}, "type": "Universal", "name": "649dd416-059b-4e72-99a4", "description": "vendor license key group"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-f61960f0-bbeb-455a-807a-088e35124a4f', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:40.964" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:40.964" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:40.964" starttime="20170918 12:23:40.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:40.965" level="TRACE">Arguments: [ 'Received response from asdc {"value":"0aab4b48bea74cfdaf6d4cc7a52bb82a"}' ]</msg>
<msg timestamp="20170918 12:23:40.965" level="INFO">Received response from asdc {"value":"0aab4b48bea74cfdaf6d4cc7a52bb82a"}</msg>
<msg timestamp="20170918 12:23:40.965" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:40.965" starttime="20170918 12:23:40.964"></status>
</kw>
<msg timestamp="20170918 12:23:40.965" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:40.966" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:40.966" starttime="20170918 12:23:40.833"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:40.966" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:40.966" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:40.967" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:40.967" starttime="20170918 12:23:40.966"></status>
</kw>
<msg timestamp="20170918 12:23:40.967" level="TRACE">Return: '0aab4b48bea74cfdaf6d4cc7a52bb82a'</msg>
<msg timestamp="20170918 12:23:40.967" level="INFO">${key_group_id} = 0aab4b48bea74cfdaf6d4cc7a52bb82a</msg>
<status status="PASS" endtime="20170918 12:23:40.967" starttime="20170918 12:23:40.763"></status>
</kw>
<kw name="Add ASDC Entitlement Pool" library="asdc_interface">
<doc>Creates an asdc Entitlement Pool and returns its id</doc>
<arguments>
<arg>${license_model_id}</arg>
</arguments>
<assign>
<var>${pool_id}</var>
</assign>
<msg timestamp="20170918 12:23:40.968" level="TRACE">Arguments: [ ${license_model_id}='cb891cc725bd4377929296369d0a1e45' | ${version_id}='0.1' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:40.969" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:40.969" level="TRACE">Return: UUID('4ade4112-f5ba-437a-97c5-8fe62de52d77')</msg>
<msg timestamp="20170918 12:23:40.969" level="INFO">${uuid} = 4ade4112-f5ba-437a-97c5-8fe62de52d77</msg>
<status status="PASS" endtime="20170918 12:23:40.969" starttime="20170918 12:23:40.969"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:40.970" level="TRACE">Arguments: [ 'str("4ade4112-f5ba-437a-97c5-8fe62de52d77")[:23]' ]</msg>
<msg timestamp="20170918 12:23:40.970" level="TRACE">Return: b'4ade4112-f5ba-437a-97c5'</msg>
<msg timestamp="20170918 12:23:40.970" level="INFO">${shortened_uuid} = 4ade4112-f5ba-437a-97c5</msg>
<status status="PASS" endtime="20170918 12:23:40.970" starttime="20170918 12:23:40.969"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>entitlement_pool_name=${shortened_uuid}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:40.971" level="TRACE">Arguments: [ 'entitlement_pool_name=${shortened_uuid}' ]</msg>
<msg timestamp="20170918 12:23:40.971" level="TRACE">Return: {'entitlement_pool_name': b'4ade4112-f5ba-437a-97c5'}</msg>
<msg timestamp="20170918 12:23:40.971" level="INFO">${map} = {u'entitlement_pool_name': '4ade4112-f5ba-437a-97c5'}</msg>
<status status="PASS" endtime="20170918 12:23:40.971" starttime="20170918 12:23:40.970"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_ENTITLEMENT_POOL_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:40.972" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/entitlement_pool.template' | ${arguments}={'entitlement_pool_name': b'4ade4112-f5ba-437a-97c5'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:40.973" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/entitlement_pool.template' ]</msg>
<msg timestamp="20170918 12:23:40.973" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/entitlement_pool.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/entitlement_pool.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:40.974" level="TRACE">Return: '{\n  "name": "${entitlement_pool_name}",\n  "description": "vendor entitlement pool",\n  "thresholdValue": "99",\n  "thresholdUnits": "Absolute",\n  "entitlementMetric": {\n    "choice": "CPU",\n    "other": ""\n  },\n  "increments": "robot",\n  "aggregationFunction": {\n    "choice": "Peak",\n    "other": ""\n  },\n  "operationalScope": {\n    "choices": [\n      "Availability_Zone"\n    ],\n    "other": ""\n  },\n  "time": {\n    "choice": "Hour",\n    "other": ""\n  },\n  "manufacturerReferenceNumber": "robot12345"\n}'</msg>
<msg timestamp="20170918 12:23:40.974" level="INFO">${json} = {
  "name": "${entitlement_pool_name}",
  "description": "vendor entitlement pool",
  "thresholdValue": "99",
  "thresholdUnits": "Absolute",
  "entitlementMetric": {
    "choice": "CPU",
    "other":...</msg>
<status status="PASS" endtime="20170918 12:23:40.974" starttime="20170918 12:23:40.973"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:40.975" level="TRACE">Arguments: [ ${json}='{\n  "name": "${entitlement_pool_name}",\n  "description": "vendor entitlement pool",\n  "thresholdValue": "99",\n  "thresholdUnits": "Absolute",\n  "entitlementMetric": {\n    "choice": "CPU",\n    "other": ""\n  },\n  "increments": "robot",\n  "aggregationFunction": {\n    "choice": "Peak",\n    "other": ""\n  },\n  "operationalScope": {\n    "choices": [\n      "Availability_Zone"\n    ],\n    "other": ""\n  },\n  "time": {\n    "choice": "Hour",\n    "other": ""\n  },\n  "manufacturerReferenceNumber": "robot12345"\n}' | ${arguments}={'entitlement_pool_name': b'4ade4112-f5ba-437a-97c5'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:40.976" level="TRACE">Arguments: [ '{\n  "name": "${entitlement_pool_name}",\n  "description": "vendor entitlement pool",\n  "thresholdValue": "99",\n  "thresholdUnits": "Absolute",\n  "entitlementMetric": {\n    "choice": "CPU",\n    "other": ""\n  },\n  "increments": "robot",\n  "aggregationFunction": {\n    "choice": "Peak",\n    "other": ""\n  },\n  "operationalScope": {\n    "choices": [\n      "Availability_Zone"\n    ],\n    "other": ""\n  },\n  "time": {\n    "choice": "Hour",\n    "other": ""\n  },\n  "manufacturerReferenceNumber": "robot12345"\n}' | {'entitlement_pool_name': b'4ade4112-f5ba-437a-97c5'} ]</msg>
<msg timestamp="20170918 12:23:40.976" level="TRACE">Return: '{\n  "name": "4ade4112-f5ba-437a-97c5",\n  "description": "vendor entitlement pool",\n  "thresholdValue": "99",\n  "thresholdUnits": "Absolute",\n  "entitlementMetric": {\n    "choice": "CPU",\n    "other": ""\n  },\n  "increments": "robot",\n  "aggregationFunction": {\n    "choice": "Peak",\n    "other": ""\n  },\n  "operationalScope": {\n    "choices": [\n      "Availability_Zone"\n    ],\n    "other": ""\n  },\n  "time": {\n    "choice": "Hour",\n    "other": ""\n  },\n  "manufacturerReferenceNumber": "robot12345"\n}'</msg>
<msg timestamp="20170918 12:23:40.976" level="INFO">${returned_string} = {
  "name": "4ade4112-f5ba-437a-97c5",
  "description": "vendor entitlement pool",
  "thresholdValue": "99",
  "thresholdUnits": "Absolute",
  "entitlementMetric": {
    "choice": "CPU",
    "other": ...</msg>
<status status="PASS" endtime="20170918 12:23:40.977" starttime="20170918 12:23:40.976"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:40.977" level="TRACE">Arguments: [ '{\n  "name": "4ade4112-f5ba-437a-97c5",\n  "description": "vendor entitlement pool",\n  "thresholdValue": "99",\n  "thresholdUnits": "Absolute",\n  "entitlementMetric": {\n    "choice": "CPU",\n    "other": ""\n  },\n  "increments": "robot",\n  "aggregationFunction": {\n    "choice": "Peak",\n    "other": ""\n  },\n  "operationalScope": {\n    "choices": [\n      "Availability_Zone"\n    ],\n    "other": ""\n  },\n  "time": {\n    "choice": "Hour",\n    "other": ""\n  },\n  "manufacturerReferenceNumber": "robot12345"\n}' ]</msg>
<msg timestamp="20170918 12:23:40.977" level="INFO">To JSON using : content={
  "name": "4ade4112-f5ba-437a-97c5",
  "description": "vendor entitlement pool",
  "thresholdValue": "99",
  "thresholdUnits": "Absolute",
  "entitlementMetric": {
    "choice": "CPU",
    "other": ""
  },
  "increments": "robot",
  "aggregationFunction": {
    "choice": "Peak",
    "other": ""
  },
  "operationalScope": {
    "choices": [
      "Availability_Zone"
    ],
    "other": ""
  },
  "time": {
    "choice": "Hour",
    "other": ""
  },
  "manufacturerReferenceNumber": "robot12345"
} </msg>
<msg timestamp="20170918 12:23:40.977" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:40.977" level="TRACE">Return: {'aggregationFunction': {'choice': 'Peak', 'other': ''},
 'description': 'vendor entitlement pool',
 'entitlementMetric': {'choice': 'CPU', 'other': ''},
 'increments': 'robot',
 'manufacturerReferenceNumber': 'robot12345',
 'name': '4ade4112-f5ba-437a-97c5',
 'operationalScope': {'choices': ['Availability_Zone'], 'other': ''},
 'thresholdUnits': 'Absolute',
 'thresholdValue': '99',
 'time': {'choice': 'Hour', 'other': ''}}</msg>
<msg timestamp="20170918 12:23:40.978" level="INFO">${returned_json} = {u'aggregationFunction': {u'other': u'', u'choice': u'Peak'}, u'increments': u'robot', u'name': u'4ade4112-f5ba-437a-97c5', u'entitlementMetric': {u'other': u'', u'choice': u'CPU'}, u'manufacturerRefe...</msg>
<status status="PASS" endtime="20170918 12:23:40.978" starttime="20170918 12:23:40.977"></status>
</kw>
<msg timestamp="20170918 12:23:40.978" level="TRACE">Return: {'aggregationFunction': {'choice': 'Peak', 'other': ''},
 'description': 'vendor entitlement pool',
 'entitlementMetric': {'choice': 'CPU', 'other': ''},
 'increments': 'robot',
 'manufacturerReferenceNumber': 'robot12345',
 'name': '4ade4112-f5ba-437a-97c5',
 'operationalScope': {'choices': ['Availability_Zone'], 'other': ''},
 'thresholdUnits': 'Absolute',
 'thresholdValue': '99',
 'time': {'choice': 'Hour', 'other': ''}}</msg>
<msg timestamp="20170918 12:23:40.979" level="INFO">${returned_json} = {u'aggregationFunction': {u'other': u'', u'choice': u'Peak'}, u'increments': u'robot', u'name': u'4ade4112-f5ba-437a-97c5', u'entitlementMetric': {u'other': u'', u'choice': u'CPU'}, u'manufacturerRefe...</msg>
<status status="PASS" endtime="20170918 12:23:40.979" starttime="20170918 12:23:40.975"></status>
</kw>
<msg timestamp="20170918 12:23:40.979" level="TRACE">Return: {'aggregationFunction': {'choice': 'Peak', 'other': ''},
 'description': 'vendor entitlement pool',
 'entitlementMetric': {'choice': 'CPU', 'other': ''},
 'increments': 'robot',
 'manufacturerReferenceNumber': 'robot12345',
 'name': '4ade4112-f5ba-437a-97c5',
 'operationalScope': {'choices': ['Availability_Zone'], 'other': ''},
 'thresholdUnits': 'Absolute',
 'thresholdValue': '99',
 'time': {'choice': 'Hour', 'other': ''}}</msg>
<msg timestamp="20170918 12:23:40.980" level="INFO">${data} = {u'aggregationFunction': {u'other': u'', u'choice': u'Peak'}, u'increments': u'robot', u'name': u'4ade4112-f5ba-437a-97c5', u'entitlementMetric': {u'other': u'', u'choice': u'CPU'}, u'manufacturerRefe...</msg>
<status status="PASS" endtime="20170918 12:23:40.980" starttime="20170918 12:23:40.972"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${license_model_id}/versions/${version_id}${ASDC_VENDOR_ENTITLEMENT_POOL_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:40.981" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/entitlement-pools' | ${data}={'aggregationFunction': {'choice': 'Peak', 'other': ''},
 'description': 'vendor entitlement pool',
 'entitlementMetric': {'choice': 'CPU', 'other': ''},
 'increments': 'robot',
 'manufacturerReferenceNumber': 'robot12345',
 'name': '4ade4112-f5ba-437a-97c5',
 'operationalScope': {'choices': ['Availability_Zone'], 'other': ''},
 'thresholdUnits': 'Absolute',
 'thresholdValue': '99',
 'time': {'choice': 'Hour', 'other': ''}} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:40.983" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:40.983" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:40.983" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:40.983" starttime="20170918 12:23:40.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:40.984" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:40.984" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:40.984" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:40.984" starttime="20170918 12:23:40.983"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:40.985" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:40.985" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707ad5950&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:40.985" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:40.985" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:40.985" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707b67f10&gt;</msg>
<msg timestamp="20170918 12:23:40.985" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707b67f10&gt;</msg>
<status status="PASS" endtime="20170918 12:23:40.985" starttime="20170918 12:23:40.984"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:40.986" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:40.986" level="TRACE">Return: UUID('c0dd8a93-e961-434f-b7a9-deacf9c76009')</msg>
<msg timestamp="20170918 12:23:40.986" level="INFO">${uuid} = c0dd8a93-e961-434f-b7a9-deacf9c76009</msg>
<status status="PASS" endtime="20170918 12:23:40.986" starttime="20170918 12:23:40.986"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:40.987" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:40.988" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-c0dd8a93-e961-434f-b7a9-deacf9c76009'}</msg>
<msg timestamp="20170918 12:23:40.988" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-c0dd8a93-e961-434f-b7a9-deacf9c76009', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:40.988" starttime="20170918 12:23:40.987"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:40.989" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/entitlement-pools' | data={'aggregationFunction': {'choice': 'Peak', 'other': ''},
 'description': 'vendor entitlement pool',
 'entitlementMetric': {'choice': 'CPU', 'other': ''},
 'increments': 'robot',
 'manufacturerReferenceNumber': 'robot12345',
 'name': '4ade4112-f5ba-437a-97c5',
 'operationalScope': {'choices': ['Availability_Zone'], 'other': ''},
 'thresholdUnits': 'Absolute',
 'thresholdValue': '99',
 'time': {'choice': 'Hour', 'other': ''}} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-c0dd8a93-e961-434f-b7a9-deacf9c76009'} ]</msg>
<msg timestamp="20170918 12:23:40.991" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:41.086" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/entitlement-pools HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:41.087" level="DEBUG">post response: {"value":"82aefca3d66947c89490e4ba9fd17129"}</msg>
<msg timestamp="20170918 12:23:41.087" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/entitlement-pools, data={"aggregationFunction": {"other": "", "choice": "Peak"}, "increments": "robot", "name": "4ade4112-f5ba-437a-97c5", "entitlementMetric": {"other": "", "choice": "CPU"}, "manufacturerReferenceNumber": "robot12345", "thresholdUnits": "Absolute", "time": {"other": "", "choice": "Hour"}, "operationalScope": {"other": "", "choices": ["Availability_Zone"]}, "thresholdValue": "99", "description": "vendor entitlement pool"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-c0dd8a93-e961-434f-b7a9-deacf9c76009', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:41.087" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.087" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.087" starttime="20170918 12:23:40.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.088" level="TRACE">Arguments: [ 'Received response from asdc {"value":"82aefca3d66947c89490e4ba9fd17129"}' ]</msg>
<msg timestamp="20170918 12:23:41.088" level="INFO">Received response from asdc {"value":"82aefca3d66947c89490e4ba9fd17129"}</msg>
<msg timestamp="20170918 12:23:41.088" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.088" starttime="20170918 12:23:41.088"></status>
</kw>
<msg timestamp="20170918 12:23:41.089" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.089" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.089" starttime="20170918 12:23:40.980"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:41.090" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:41.090" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:41.090" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.090" starttime="20170918 12:23:41.089"></status>
</kw>
<msg timestamp="20170918 12:23:41.090" level="TRACE">Return: '82aefca3d66947c89490e4ba9fd17129'</msg>
<msg timestamp="20170918 12:23:41.091" level="INFO">${pool_id} = 82aefca3d66947c89490e4ba9fd17129</msg>
<status status="PASS" endtime="20170918 12:23:41.091" starttime="20170918 12:23:40.968"></status>
</kw>
<kw name="Add ASDC Feature Group" library="asdc_interface">
<doc>Creates an asdc Feature Group and returns its id</doc>
<arguments>
<arg>${license_model_id}</arg>
<arg>${key_group_id}</arg>
<arg>${pool_id}</arg>
</arguments>
<assign>
<var>${feature_group_id}</var>
</assign>
<msg timestamp="20170918 12:23:41.092" level="TRACE">Arguments: [ ${license_model_id}='cb891cc725bd4377929296369d0a1e45' | ${key_group_id}='0aab4b48bea74cfdaf6d4cc7a52bb82a' | ${entitlement_pool_id}='82aefca3d66947c89490e4ba9fd17129' | ${version_id}='0.1' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.092" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.092" level="TRACE">Return: UUID('fa965bc0-22e7-4971-bcaf-26e269c62067')</msg>
<msg timestamp="20170918 12:23:41.093" level="INFO">${uuid} = fa965bc0-22e7-4971-bcaf-26e269c62067</msg>
<status status="PASS" endtime="20170918 12:23:41.093" starttime="20170918 12:23:41.092"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.093" level="TRACE">Arguments: [ 'str("fa965bc0-22e7-4971-bcaf-26e269c62067")[:23]' ]</msg>
<msg timestamp="20170918 12:23:41.094" level="TRACE">Return: b'fa965bc0-22e7-4971-bcaf'</msg>
<msg timestamp="20170918 12:23:41.094" level="INFO">${shortened_uuid} = fa965bc0-22e7-4971-bcaf</msg>
<status status="PASS" endtime="20170918 12:23:41.094" starttime="20170918 12:23:41.093"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>feature_group_name=${shortened_uuid}</arg>
<arg>key_group_id=${key_group_id}</arg>
<arg>entitlement_pool_id=${entitlement_pool_id}</arg>
<arg>manufacturer_reference_number=mrn${shortened_uuid}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:41.094" level="TRACE">Arguments: [ 'feature_group_name=${shortened_uuid}' | 'key_group_id=${key_group_id}' | 'entitlement_pool_id=${entitlement_pool_id}' | 'manufacturer_reference_number=mrn${shortened_uuid}' ]</msg>
<msg timestamp="20170918 12:23:41.095" level="TRACE">Return: {'entitlement_pool_id': '82aefca3d66947c89490e4ba9fd17129', 'feature_group_name': b'fa965bc0-22e7-4971-bcaf', 'key_group_id': '0aab4b48bea74cfdaf6d4cc7a52bb82a', 'manufacturer_reference_number': 'mrnfa965bc0-22e7-4971-bcaf'}</msg>
<msg timestamp="20170918 12:23:41.095" level="INFO">${map} = {u'feature_group_name': 'fa965bc0-22e7-4971-bcaf', u'key_group_id': u'0aab4b48bea74cfdaf6d4cc7a52bb82a', u'entitlement_pool_id': u'82aefca3d66947c89490e4ba9fd17129', u'manufacturer_reference_number': ...</msg>
<status status="PASS" endtime="20170918 12:23:41.095" starttime="20170918 12:23:41.094"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_FEATURE_GROUP_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:41.096" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/feature_group.template' | ${arguments}={'entitlement_pool_id': '82aefca3d66947c89490e4ba9fd17129', 'feature_group_name': b'fa965bc0-22e7-4971-bcaf', 'key_group_id': '0aab4b48bea74cfdaf6d4cc7a52bb82a', 'manufacturer_reference_number': 'mrnfa965bc0-22e7-4971-bcaf'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:41.097" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/feature_group.template' ]</msg>
<msg timestamp="20170918 12:23:41.098" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/feature_group.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/feature_group.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:41.099" level="TRACE">Return: '{\n  "name": "${feature_group_name}",\n  "description": "vendor feature group",\n  "partNumber": "123abc456",\n  "addedLicenseKeyGroupsIds": [\n    "${key_group_id}"\n  ],\n  "addedEntitlementPoolsIds": [\n    "${entitlement_pool_id}"\n  ],\n  "manufacturerReferenceNumber" : "${manufacturer_reference_number}"\n}'</msg>
<msg timestamp="20170918 12:23:41.099" level="INFO">${json} = {
  "name": "${feature_group_name}",
  "description": "vendor feature group",
  "partNumber": "123abc456",
  "addedLicenseKeyGroupsIds": [
    "${key_group_id}"
  ],
  "addedEntitlementPoolsIds": [
  ...</msg>
<status status="PASS" endtime="20170918 12:23:41.099" starttime="20170918 12:23:41.097"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.100" level="TRACE">Arguments: [ ${json}='{\n  "name": "${feature_group_name}",\n  "description": "vendor feature group",\n  "partNumber": "123abc456",\n  "addedLicenseKeyGroupsIds": [\n    "${key_group_id}"\n  ],\n  "addedEntitlementPoolsIds": [\n    "${entitlement_pool_id}"\n  ],\n  "manufacturerReferenceNumber" : "${manufacturer_reference_number}"\n}' | ${arguments}={'entitlement_pool_id': '82aefca3d66947c89490e4ba9fd17129', 'feature_group_name': b'fa965bc0-22e7-4971-bcaf', 'key_group_id': '0aab4b48bea74cfdaf6d4cc7a52bb82a', 'manufacturer_reference_number': 'mrnfa965bc0-22e7-4971-bcaf'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:41.101" level="TRACE">Arguments: [ '{\n  "name": "${feature_group_name}",\n  "description": "vendor feature group",\n  "partNumber": "123abc456",\n  "addedLicenseKeyGroupsIds": [\n    "${key_group_id}"\n  ],\n  "addedEntitlementPoolsIds": [\n    "${entitlement_pool_id}"\n  ],\n  "manufacturerReferenceNumber" : "${manufacturer_reference_number}"\n}' | {'entitlement_pool_id': '82aefca3d66947c89490e4ba9fd17129', 'feature_group_name': b'fa965bc0-22e7-4971-bcaf', 'key_group_id': '0aab4b48bea74cfdaf6d4cc7a52bb82a', 'manufacturer_reference_number': 'mrnfa965bc0-22e7-4971-bcaf'} ]</msg>
<msg timestamp="20170918 12:23:41.101" level="TRACE">Return: '{\n  "name": "fa965bc0-22e7-4971-bcaf",\n  "description": "vendor feature group",\n  "partNumber": "123abc456",\n  "addedLicenseKeyGroupsIds": [\n    "0aab4b48bea74cfdaf6d4cc7a52bb82a"\n  ],\n  "addedEntitlementPoolsIds": [\n    "82aefca3d66947c89490e4ba9fd17129"\n  ],\n  "manufacturerReferenceNumber" : "mrnfa965bc0-22e7-4971-bcaf"\n}'</msg>
<msg timestamp="20170918 12:23:41.101" level="INFO">${returned_string} = {
  "name": "fa965bc0-22e7-4971-bcaf",
  "description": "vendor feature group",
  "partNumber": "123abc456",
  "addedLicenseKeyGroupsIds": [
    "0aab4b48bea74cfdaf6d4cc7a52bb82a"
  ],
  "addedEntitle...</msg>
<status status="PASS" endtime="20170918 12:23:41.102" starttime="20170918 12:23:41.101"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.102" level="TRACE">Arguments: [ '{\n  "name": "fa965bc0-22e7-4971-bcaf",\n  "description": "vendor feature group",\n  "partNumber": "123abc456",\n  "addedLicenseKeyGroupsIds": [\n    "0aab4b48bea74cfdaf6d4cc7a52bb82a"\n  ],\n  "addedEntitlementPoolsIds": [\n    "82aefca3d66947c89490e4ba9fd17129"\n  ],\n  "manufacturerReferenceNumber" : "mrnfa965bc0-22e7-4971-bcaf"\n}' ]</msg>
<msg timestamp="20170918 12:23:41.102" level="INFO">To JSON using : content={
  "name": "fa965bc0-22e7-4971-bcaf",
  "description": "vendor feature group",
  "partNumber": "123abc456",
  "addedLicenseKeyGroupsIds": [
    "0aab4b48bea74cfdaf6d4cc7a52bb82a"
  ],
  "addedEntitlementPoolsIds": [
    "82aefca3d66947c89490e4ba9fd17129"
  ],
  "manufacturerReferenceNumber" : "mrnfa965bc0-22e7-4971-bcaf"
} </msg>
<msg timestamp="20170918 12:23:41.103" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:41.103" level="TRACE">Return: {'addedEntitlementPoolsIds': ['82aefca3d66947c89490e4ba9fd17129'], 'addedLicenseKeyGroupsIds': ['0aab4b48bea74cfdaf6d4cc7a52bb82a'], 'description': 'vendor feature group', 'manufacturerReferenceNumber': 'mrnfa965bc0-22e7-4971-bcaf', 'name': 'fa965bc0-22e7-4971-bcaf', 'partNumber': '123abc456'}</msg>
<msg timestamp="20170918 12:23:41.103" level="INFO">${returned_json} = {u'name': u'fa965bc0-22e7-4971-bcaf', u'addedLicenseKeyGroupsIds': [u'0aab4b48bea74cfdaf6d4cc7a52bb82a'], u'addedEntitlementPoolsIds': [u'82aefca3d66947c89490e4ba9fd17129'], u'partNumber': u'123abc456...</msg>
<status status="PASS" endtime="20170918 12:23:41.103" starttime="20170918 12:23:41.102"></status>
</kw>
<msg timestamp="20170918 12:23:41.103" level="TRACE">Return: {'addedEntitlementPoolsIds': ['82aefca3d66947c89490e4ba9fd17129'], 'addedLicenseKeyGroupsIds': ['0aab4b48bea74cfdaf6d4cc7a52bb82a'], 'description': 'vendor feature group', 'manufacturerReferenceNumber': 'mrnfa965bc0-22e7-4971-bcaf', 'name': 'fa965bc0-22e7-4971-bcaf', 'partNumber': '123abc456'}</msg>
<msg timestamp="20170918 12:23:41.104" level="INFO">${returned_json} = {u'name': u'fa965bc0-22e7-4971-bcaf', u'addedLicenseKeyGroupsIds': [u'0aab4b48bea74cfdaf6d4cc7a52bb82a'], u'addedEntitlementPoolsIds': [u'82aefca3d66947c89490e4ba9fd17129'], u'partNumber': u'123abc456...</msg>
<status status="PASS" endtime="20170918 12:23:41.104" starttime="20170918 12:23:41.100"></status>
</kw>
<msg timestamp="20170918 12:23:41.104" level="TRACE">Return: {'addedEntitlementPoolsIds': ['82aefca3d66947c89490e4ba9fd17129'], 'addedLicenseKeyGroupsIds': ['0aab4b48bea74cfdaf6d4cc7a52bb82a'], 'description': 'vendor feature group', 'manufacturerReferenceNumber': 'mrnfa965bc0-22e7-4971-bcaf', 'name': 'fa965bc0-22e7-4971-bcaf', 'partNumber': '123abc456'}</msg>
<msg timestamp="20170918 12:23:41.104" level="INFO">${data} = {u'name': u'fa965bc0-22e7-4971-bcaf', u'addedLicenseKeyGroupsIds': [u'0aab4b48bea74cfdaf6d4cc7a52bb82a'], u'addedEntitlementPoolsIds': [u'82aefca3d66947c89490e4ba9fd17129'], u'partNumber': u'123abc456...</msg>
<status status="PASS" endtime="20170918 12:23:41.104" starttime="20170918 12:23:41.096"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${license_model_id}/versions/${version_id}${ASDC_VENDOR_FEATURE_GROUP_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.105" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/feature-groups' | ${data}={'addedEntitlementPoolsIds': ['82aefca3d66947c89490e4ba9fd17129'], 'addedLicenseKeyGroupsIds': ['0aab4b48bea74cfdaf6d4cc7a52bb82a'], 'description': 'vendor feature group', 'manufacturerReferenceNumber': 'mrnfa965bc0-22e7-4971-bcaf', 'name': 'fa965bc0-22e7-4971-bcaf', 'partNumber': '123abc456'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:41.107" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:41.108" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:41.108" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:41.108" starttime="20170918 12:23:41.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.108" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:41.108" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:41.109" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.109" starttime="20170918 12:23:41.108"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:41.109" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:41.110" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707ae1110&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:41.110" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:41.110" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:41.110" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707ae17d0&gt;</msg>
<msg timestamp="20170918 12:23:41.110" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707ae17d0&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.110" starttime="20170918 12:23:41.109"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.111" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.111" level="TRACE">Return: UUID('29437dfe-4df1-415c-be7d-cd05c5cfe849')</msg>
<msg timestamp="20170918 12:23:41.111" level="INFO">${uuid} = 29437dfe-4df1-415c-be7d-cd05c5cfe849</msg>
<status status="PASS" endtime="20170918 12:23:41.111" starttime="20170918 12:23:41.111"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:41.112" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:41.113" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-29437dfe-4df1-415c-be7d-cd05c5cfe849'}</msg>
<msg timestamp="20170918 12:23:41.113" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-29437dfe-4df1-415c-be7d-cd05c5cfe849', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:41.113" starttime="20170918 12:23:41.112"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.114" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/feature-groups' | data={'addedEntitlementPoolsIds': ['82aefca3d66947c89490e4ba9fd17129'], 'addedLicenseKeyGroupsIds': ['0aab4b48bea74cfdaf6d4cc7a52bb82a'], 'description': 'vendor feature group', 'manufacturerReferenceNumber': 'mrnfa965bc0-22e7-4971-bcaf', 'name': 'fa965bc0-22e7-4971-bcaf', 'partNumber': '123abc456'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-29437dfe-4df1-415c-be7d-cd05c5cfe849'} ]</msg>
<msg timestamp="20170918 12:23:41.115" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:41.237" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/feature-groups HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:41.238" level="DEBUG">post response: {"value":"1e77353d692b4e8dad6f2cdde8bb1588"}</msg>
<msg timestamp="20170918 12:23:41.238" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/feature-groups, data={"name": "fa965bc0-22e7-4971-bcaf", "addedLicenseKeyGroupsIds": ["0aab4b48bea74cfdaf6d4cc7a52bb82a"], "addedEntitlementPoolsIds": ["82aefca3d66947c89490e4ba9fd17129"], "partNumber": "123abc456", "manufacturerReferenceNumber": "mrnfa965bc0-22e7-4971-bcaf", "description": "vendor feature group"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-29437dfe-4df1-415c-be7d-cd05c5cfe849', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:41.238" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.238" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.238" starttime="20170918 12:23:41.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.239" level="TRACE">Arguments: [ 'Received response from asdc {"value":"1e77353d692b4e8dad6f2cdde8bb1588"}' ]</msg>
<msg timestamp="20170918 12:23:41.239" level="INFO">Received response from asdc {"value":"1e77353d692b4e8dad6f2cdde8bb1588"}</msg>
<msg timestamp="20170918 12:23:41.240" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.240" starttime="20170918 12:23:41.239"></status>
</kw>
<msg timestamp="20170918 12:23:41.240" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.240" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.240" starttime="20170918 12:23:41.105"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:41.241" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:41.241" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:41.241" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.241" starttime="20170918 12:23:41.241"></status>
</kw>
<msg timestamp="20170918 12:23:41.242" level="TRACE">Return: '1e77353d692b4e8dad6f2cdde8bb1588'</msg>
<msg timestamp="20170918 12:23:41.242" level="INFO">${feature_group_id} = 1e77353d692b4e8dad6f2cdde8bb1588</msg>
<status status="PASS" endtime="20170918 12:23:41.242" starttime="20170918 12:23:41.091"></status>
</kw>
<kw name="Add ASDC License Agreement" library="asdc_interface">
<doc>Creates an asdc License Agreement and returns its id</doc>
<arguments>
<arg>${license_model_id}</arg>
<arg>${feature_group_id}</arg>
</arguments>
<assign>
<var>${license_agreement_id}</var>
</assign>
<msg timestamp="20170918 12:23:41.243" level="TRACE">Arguments: [ ${license_model_id}='cb891cc725bd4377929296369d0a1e45' | ${feature_group_id}='1e77353d692b4e8dad6f2cdde8bb1588' | ${version_id}='0.1' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.244" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.244" level="TRACE">Return: UUID('00b11d5c-98a0-4a3e-9450-703e893a1137')</msg>
<msg timestamp="20170918 12:23:41.244" level="INFO">${uuid} = 00b11d5c-98a0-4a3e-9450-703e893a1137</msg>
<status status="PASS" endtime="20170918 12:23:41.244" starttime="20170918 12:23:41.243"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.245" level="TRACE">Arguments: [ 'str("00b11d5c-98a0-4a3e-9450-703e893a1137")[:23]' ]</msg>
<msg timestamp="20170918 12:23:41.245" level="TRACE">Return: b'00b11d5c-98a0-4a3e-9450'</msg>
<msg timestamp="20170918 12:23:41.245" level="INFO">${shortened_uuid} = 00b11d5c-98a0-4a3e-9450</msg>
<status status="PASS" endtime="20170918 12:23:41.245" starttime="20170918 12:23:41.244"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>license_agreement_name=${shortened_uuid}</arg>
<arg>feature_group_id=${feature_group_id}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:41.246" level="TRACE">Arguments: [ 'license_agreement_name=${shortened_uuid}' | 'feature_group_id=${feature_group_id}' ]</msg>
<msg timestamp="20170918 12:23:41.246" level="TRACE">Return: {'feature_group_id': '1e77353d692b4e8dad6f2cdde8bb1588', 'license_agreement_name': b'00b11d5c-98a0-4a3e-9450'}</msg>
<msg timestamp="20170918 12:23:41.246" level="INFO">${map} = {u'license_agreement_name': '00b11d5c-98a0-4a3e-9450', u'feature_group_id': u'1e77353d692b4e8dad6f2cdde8bb1588'}</msg>
<status status="PASS" endtime="20170918 12:23:41.246" starttime="20170918 12:23:41.246"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_LICENSE_AGREEMENT_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:41.247" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/license_agreement.template' | ${arguments}={'feature_group_id': '1e77353d692b4e8dad6f2cdde8bb1588', 'license_agreement_name': b'00b11d5c-98a0-4a3e-9450'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:41.248" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/license_agreement.template' ]</msg>
<msg timestamp="20170918 12:23:41.248" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/license_agreement.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/license_agreement.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:41.249" level="TRACE">Return: '{\n  "name": "${license_agreement_name}",\n  "description": "vendor license agreement",\n  "requirementsAndConstrains": "abcdef",\n  "licenseTerm": {\n    "choice": "Fixed_Term",\n    "other": ""\n  },\n  "addedFeatureGroupsIds": [\n    "${feature_group_id}"\n  ]\n}'</msg>
<msg timestamp="20170918 12:23:41.249" level="INFO">${json} = {
  "name": "${license_agreement_name}",
  "description": "vendor license agreement",
  "requirementsAndConstrains": "abcdef",
  "licenseTerm": {
    "choice": "Fixed_Term",
    "other": ""
  },
  "ad...</msg>
<status status="PASS" endtime="20170918 12:23:41.249" starttime="20170918 12:23:41.248"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.250" level="TRACE">Arguments: [ ${json}='{\n  "name": "${license_agreement_name}",\n  "description": "vendor license agreement",\n  "requirementsAndConstrains": "abcdef",\n  "licenseTerm": {\n    "choice": "Fixed_Term",\n    "other": ""\n  },\n  "addedFeatureGroupsIds": [\n    "${feature_group_id}"\n  ]\n}' | ${arguments}={'feature_group_id': '1e77353d692b4e8dad6f2cdde8bb1588', 'license_agreement_name': b'00b11d5c-98a0-4a3e-9450'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:41.251" level="TRACE">Arguments: [ '{\n  "name": "${license_agreement_name}",\n  "description": "vendor license agreement",\n  "requirementsAndConstrains": "abcdef",\n  "licenseTerm": {\n    "choice": "Fixed_Term",\n    "other": ""\n  },\n  "addedFeatureGroupsIds": [\n    "${feature_group_id}"\n  ]\n}' | {'feature_group_id': '1e77353d692b4e8dad6f2cdde8bb1588', 'license_agreement_name': b'00b11d5c-98a0-4a3e-9450'} ]</msg>
<msg timestamp="20170918 12:23:41.251" level="TRACE">Return: '{\n  "name": "00b11d5c-98a0-4a3e-9450",\n  "description": "vendor license agreement",\n  "requirementsAndConstrains": "abcdef",\n  "licenseTerm": {\n    "choice": "Fixed_Term",\n    "other": ""\n  },\n  "addedFeatureGroupsIds": [\n    "1e77353d692b4e8dad6f2cdde8bb1588"\n  ]\n}'</msg>
<msg timestamp="20170918 12:23:41.251" level="INFO">${returned_string} = {
  "name": "00b11d5c-98a0-4a3e-9450",
  "description": "vendor license agreement",
  "requirementsAndConstrains": "abcdef",
  "licenseTerm": {
    "choice": "Fixed_Term",
    "other": ""
  },
  "adde...</msg>
<status status="PASS" endtime="20170918 12:23:41.251" starttime="20170918 12:23:41.251"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.252" level="TRACE">Arguments: [ '{\n  "name": "00b11d5c-98a0-4a3e-9450",\n  "description": "vendor license agreement",\n  "requirementsAndConstrains": "abcdef",\n  "licenseTerm": {\n    "choice": "Fixed_Term",\n    "other": ""\n  },\n  "addedFeatureGroupsIds": [\n    "1e77353d692b4e8dad6f2cdde8bb1588"\n  ]\n}' ]</msg>
<msg timestamp="20170918 12:23:41.252" level="INFO">To JSON using : content={
  "name": "00b11d5c-98a0-4a3e-9450",
  "description": "vendor license agreement",
  "requirementsAndConstrains": "abcdef",
  "licenseTerm": {
    "choice": "Fixed_Term",
    "other": ""
  },
  "addedFeatureGroupsIds": [
    "1e77353d692b4e8dad6f2cdde8bb1588"
  ]
} </msg>
<msg timestamp="20170918 12:23:41.252" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:41.252" level="TRACE">Return: {'addedFeatureGroupsIds': ['1e77353d692b4e8dad6f2cdde8bb1588'], 'description': 'vendor license agreement', 'licenseTerm': {'choice': 'Fixed_Term', 'other': ''}, 'name': '00b11d5c-98a0-4a3e-9450', 'requirementsAndConstrains': 'abcdef'}</msg>
<msg timestamp="20170918 12:23:41.253" level="INFO">${returned_json} = {u'licenseTerm': {u'other': u'', u'choice': u'Fixed_Term'}, u'addedFeatureGroupsIds': [u'1e77353d692b4e8dad6f2cdde8bb1588'], u'requirementsAndConstrains': u'abcdef', u'name': u'00b11d5c-98a0-4a3e-9450...</msg>
<status status="PASS" endtime="20170918 12:23:41.253" starttime="20170918 12:23:41.252"></status>
</kw>
<msg timestamp="20170918 12:23:41.253" level="TRACE">Return: {'addedFeatureGroupsIds': ['1e77353d692b4e8dad6f2cdde8bb1588'], 'description': 'vendor license agreement', 'licenseTerm': {'choice': 'Fixed_Term', 'other': ''}, 'name': '00b11d5c-98a0-4a3e-9450', 'requirementsAndConstrains': 'abcdef'}</msg>
<msg timestamp="20170918 12:23:41.253" level="INFO">${returned_json} = {u'licenseTerm': {u'other': u'', u'choice': u'Fixed_Term'}, u'addedFeatureGroupsIds': [u'1e77353d692b4e8dad6f2cdde8bb1588'], u'requirementsAndConstrains': u'abcdef', u'name': u'00b11d5c-98a0-4a3e-9450...</msg>
<status status="PASS" endtime="20170918 12:23:41.253" starttime="20170918 12:23:41.250"></status>
</kw>
<msg timestamp="20170918 12:23:41.254" level="TRACE">Return: {'addedFeatureGroupsIds': ['1e77353d692b4e8dad6f2cdde8bb1588'], 'description': 'vendor license agreement', 'licenseTerm': {'choice': 'Fixed_Term', 'other': ''}, 'name': '00b11d5c-98a0-4a3e-9450', 'requirementsAndConstrains': 'abcdef'}</msg>
<msg timestamp="20170918 12:23:41.254" level="INFO">${data} = {u'licenseTerm': {u'other': u'', u'choice': u'Fixed_Term'}, u'addedFeatureGroupsIds': [u'1e77353d692b4e8dad6f2cdde8bb1588'], u'requirementsAndConstrains': u'abcdef', u'name': u'00b11d5c-98a0-4a3e-9450...</msg>
<status status="PASS" endtime="20170918 12:23:41.254" starttime="20170918 12:23:41.247"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${license_model_id}/versions/${version_id}${ASDC_VENDOR_LICENSE_AGREEMENT_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.255" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/license-agreements' | ${data}={'addedFeatureGroupsIds': ['1e77353d692b4e8dad6f2cdde8bb1588'], 'description': 'vendor license agreement', 'licenseTerm': {'choice': 'Fixed_Term', 'other': ''}, 'name': '00b11d5c-98a0-4a3e-9450', 'requirementsAndConstrains': 'abcdef'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:41.256" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:41.257" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:41.257" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:41.257" starttime="20170918 12:23:41.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.257" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:41.258" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:41.258" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.258" starttime="20170918 12:23:41.257"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:41.259" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:41.259" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707a78d50&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:41.259" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:41.260" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:41.260" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707a78d10&gt;</msg>
<msg timestamp="20170918 12:23:41.260" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707a78d10&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.260" starttime="20170918 12:23:41.258"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.260" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.261" level="TRACE">Return: UUID('e420082a-986d-4783-ae7a-9e6b7d5f748b')</msg>
<msg timestamp="20170918 12:23:41.261" level="INFO">${uuid} = e420082a-986d-4783-ae7a-9e6b7d5f748b</msg>
<status status="PASS" endtime="20170918 12:23:41.261" starttime="20170918 12:23:41.260"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:41.262" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:41.262" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-e420082a-986d-4783-ae7a-9e6b7d5f748b'}</msg>
<msg timestamp="20170918 12:23:41.263" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-e420082a-986d-4783-ae7a-9e6b7d5f748b', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:41.263" starttime="20170918 12:23:41.261"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.263" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/license-agreements' | data={'addedFeatureGroupsIds': ['1e77353d692b4e8dad6f2cdde8bb1588'], 'description': 'vendor license agreement', 'licenseTerm': {'choice': 'Fixed_Term', 'other': ''}, 'name': '00b11d5c-98a0-4a3e-9450', 'requirementsAndConstrains': 'abcdef'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-e420082a-986d-4783-ae7a-9e6b7d5f748b'} ]</msg>
<msg timestamp="20170918 12:23:41.266" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:41.378" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/license-agreements HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:41.379" level="DEBUG">post response: {"value":"bb6be27c9bec4aa3b3f7aafb88d8273a"}</msg>
<msg timestamp="20170918 12:23:41.379" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/license-agreements, data={"licenseTerm": {"other": "", "choice": "Fixed_Term"}, "addedFeatureGroupsIds": ["1e77353d692b4e8dad6f2cdde8bb1588"], "requirementsAndConstrains": "abcdef", "name": "00b11d5c-98a0-4a3e-9450", "description": "vendor license agreement"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-e420082a-986d-4783-ae7a-9e6b7d5f748b', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:41.379" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.379" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.380" starttime="20170918 12:23:41.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.381" level="TRACE">Arguments: [ 'Received response from asdc {"value":"bb6be27c9bec4aa3b3f7aafb88d8273a"}' ]</msg>
<msg timestamp="20170918 12:23:41.381" level="INFO">Received response from asdc {"value":"bb6be27c9bec4aa3b3f7aafb88d8273a"}</msg>
<msg timestamp="20170918 12:23:41.381" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.381" starttime="20170918 12:23:41.380"></status>
</kw>
<msg timestamp="20170918 12:23:41.381" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.381" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.381" starttime="20170918 12:23:41.254"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:41.382" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:41.382" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:41.382" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.382" starttime="20170918 12:23:41.382"></status>
</kw>
<msg timestamp="20170918 12:23:41.383" level="TRACE">Return: 'bb6be27c9bec4aa3b3f7aafb88d8273a'</msg>
<msg timestamp="20170918 12:23:41.383" level="INFO">${license_agreement_id} = bb6be27c9bec4aa3b3f7aafb88d8273a</msg>
<status status="PASS" endtime="20170918 12:23:41.383" starttime="20170918 12:23:41.242"></status>
</kw>
<kw name="Checkin ASDC License Model" library="asdc_interface">
<doc>checksin an asdc license model by its id</doc>
<arguments>
<arg>${license_model_id}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.384" level="TRACE">Arguments: [ ${id}='cb891cc725bd4377929296369d0a1e45' | ${version_id}='0.1' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>action=Checkin</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:41.385" level="TRACE">Arguments: [ 'action=Checkin' ]</msg>
<msg timestamp="20170918 12:23:41.385" level="TRACE">Return: {'action': 'Checkin'}</msg>
<msg timestamp="20170918 12:23:41.385" level="INFO">${map} = {u'action': u'Checkin'}</msg>
<status status="PASS" endtime="20170918 12:23:41.385" starttime="20170918 12:23:41.384"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_ACTION_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:41.386" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/action.template' | ${arguments}={'action': 'Checkin'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:41.387" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/action.template' ]</msg>
<msg timestamp="20170918 12:23:41.387" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/action.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/action.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:41.395" level="TRACE">Return: '{\n  "action": "${action}"\n}'</msg>
<msg timestamp="20170918 12:23:41.395" level="INFO">${json} = {
  "action": "${action}"
}</msg>
<status status="PASS" endtime="20170918 12:23:41.395" starttime="20170918 12:23:41.386"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.396" level="TRACE">Arguments: [ ${json}='{\n  "action": "${action}"\n}' | ${arguments}={'action': 'Checkin'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:41.397" level="TRACE">Arguments: [ '{\n  "action": "${action}"\n}' | {'action': 'Checkin'} ]</msg>
<msg timestamp="20170918 12:23:41.397" level="TRACE">Return: '{\n  "action": "Checkin"\n}'</msg>
<msg timestamp="20170918 12:23:41.398" level="INFO">${returned_string} = {
  "action": "Checkin"
}</msg>
<status status="PASS" endtime="20170918 12:23:41.398" starttime="20170918 12:23:41.397"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.399" level="TRACE">Arguments: [ '{\n  "action": "Checkin"\n}' ]</msg>
<msg timestamp="20170918 12:23:41.399" level="INFO">To JSON using : content={
  "action": "Checkin"
} </msg>
<msg timestamp="20170918 12:23:41.399" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:41.399" level="TRACE">Return: {'action': 'Checkin'}</msg>
<msg timestamp="20170918 12:23:41.399" level="INFO">${returned_json} = {u'action': u'Checkin'}</msg>
<status status="PASS" endtime="20170918 12:23:41.399" starttime="20170918 12:23:41.398"></status>
</kw>
<msg timestamp="20170918 12:23:41.399" level="TRACE">Return: {'action': 'Checkin'}</msg>
<msg timestamp="20170918 12:23:41.400" level="INFO">${returned_json} = {u'action': u'Checkin'}</msg>
<status status="PASS" endtime="20170918 12:23:41.400" starttime="20170918 12:23:41.396"></status>
</kw>
<msg timestamp="20170918 12:23:41.400" level="TRACE">Return: {'action': 'Checkin'}</msg>
<msg timestamp="20170918 12:23:41.400" level="INFO">${data} = {u'action': u'Checkin'}</msg>
<status status="PASS" endtime="20170918 12:23:41.400" starttime="20170918 12:23:41.385"></status>
</kw>
<kw name="Run ASDC Put Request" library="asdc_interface">
<doc>Runs an ASDC put request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${id}/versions/${version_id}${ASDC_VENDOR_ACTIONS_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.401" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/actions' | ${data}={'action': 'Checkin'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:41.402" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:41.402" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:41.402" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:41.403" starttime="20170918 12:23:41.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.403" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:41.403" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:41.403" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.403" starttime="20170918 12:23:41.403"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:41.404" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:41.404" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707a81a10&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:41.405" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:41.405" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:41.405" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707a81b10&gt;</msg>
<msg timestamp="20170918 12:23:41.406" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707a81b10&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.406" starttime="20170918 12:23:41.404"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.406" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.406" level="TRACE">Return: UUID('bdbdfd69-4bf4-4ab1-a8dc-435bcac70b2e')</msg>
<msg timestamp="20170918 12:23:41.407" level="INFO">${uuid} = bdbdfd69-4bf4-4ab1-a8dc-435bcac70b2e</msg>
<status status="PASS" endtime="20170918 12:23:41.407" starttime="20170918 12:23:41.406"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:41.407" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:41.408" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-bdbdfd69-4bf4-4ab1-a8dc-435bcac70b2e'}</msg>
<msg timestamp="20170918 12:23:41.408" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-bdbdfd69-4bf4-4ab1-a8dc-435bcac70b2e', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:41.408" starttime="20170918 12:23:41.407"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.409" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/actions' | data={'action': 'Checkin'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-bdbdfd69-4bf4-4ab1-a8dc-435bcac70b2e'} ]</msg>
<msg timestamp="20170918 12:23:41.411" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:41.494" level="DEBUG">http://192.168.20.35:8080 "PUT /onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/actions HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:41.495" level="DEBUG">put response: {}</msg>
<msg timestamp="20170918 12:23:41.495" level="INFO">Put Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/actions, data={"action": "Checkin"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-bdbdfd69-4bf4-4ab1-a8dc-435bcac70b2e', u'X-FromAppId': u'robot-ete'}, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:41.495" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.495" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.496" starttime="20170918 12:23:41.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.497" level="TRACE">Arguments: [ 'Received response from asdc {}' ]</msg>
<msg timestamp="20170918 12:23:41.497" level="INFO">Received response from asdc {}</msg>
<msg timestamp="20170918 12:23:41.497" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.497" starttime="20170918 12:23:41.496"></status>
</kw>
<msg timestamp="20170918 12:23:41.497" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.497" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.497" starttime="20170918 12:23:41.400"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:41.498" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:41.498" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:41.499" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.499" starttime="20170918 12:23:41.498"></status>
</kw>
<msg timestamp="20170918 12:23:41.499" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20170918 12:23:41.499" starttime="20170918 12:23:41.383"></status>
</kw>
<kw name="Submit ASDC License Model" library="asdc_interface">
<doc>submits an asdc license model by its id</doc>
<arguments>
<arg>${license_model_id}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.500" level="TRACE">Arguments: [ ${id}='cb891cc725bd4377929296369d0a1e45' | ${version_id}='0.1' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>action=Submit</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:41.501" level="TRACE">Arguments: [ 'action=Submit' ]</msg>
<msg timestamp="20170918 12:23:41.501" level="TRACE">Return: {'action': 'Submit'}</msg>
<msg timestamp="20170918 12:23:41.501" level="INFO">${map} = {u'action': u'Submit'}</msg>
<status status="PASS" endtime="20170918 12:23:41.501" starttime="20170918 12:23:41.500"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_ACTION_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:41.502" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/action.template' | ${arguments}={'action': 'Submit'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:41.503" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/action.template' ]</msg>
<msg timestamp="20170918 12:23:41.503" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/action.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/action.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:41.503" level="TRACE">Return: '{\n  "action": "${action}"\n}'</msg>
<msg timestamp="20170918 12:23:41.503" level="INFO">${json} = {
  "action": "${action}"
}</msg>
<status status="PASS" endtime="20170918 12:23:41.503" starttime="20170918 12:23:41.502"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.504" level="TRACE">Arguments: [ ${json}='{\n  "action": "${action}"\n}' | ${arguments}={'action': 'Submit'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:41.505" level="TRACE">Arguments: [ '{\n  "action": "${action}"\n}' | {'action': 'Submit'} ]</msg>
<msg timestamp="20170918 12:23:41.505" level="TRACE">Return: '{\n  "action": "Submit"\n}'</msg>
<msg timestamp="20170918 12:23:41.505" level="INFO">${returned_string} = {
  "action": "Submit"
}</msg>
<status status="PASS" endtime="20170918 12:23:41.505" starttime="20170918 12:23:41.505"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.506" level="TRACE">Arguments: [ '{\n  "action": "Submit"\n}' ]</msg>
<msg timestamp="20170918 12:23:41.506" level="INFO">To JSON using : content={
  "action": "Submit"
} </msg>
<msg timestamp="20170918 12:23:41.506" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:41.506" level="TRACE">Return: {'action': 'Submit'}</msg>
<msg timestamp="20170918 12:23:41.507" level="INFO">${returned_json} = {u'action': u'Submit'}</msg>
<status status="PASS" endtime="20170918 12:23:41.507" starttime="20170918 12:23:41.506"></status>
</kw>
<msg timestamp="20170918 12:23:41.507" level="TRACE">Return: {'action': 'Submit'}</msg>
<msg timestamp="20170918 12:23:41.507" level="INFO">${returned_json} = {u'action': u'Submit'}</msg>
<status status="PASS" endtime="20170918 12:23:41.507" starttime="20170918 12:23:41.504"></status>
</kw>
<msg timestamp="20170918 12:23:41.507" level="TRACE">Return: {'action': 'Submit'}</msg>
<msg timestamp="20170918 12:23:41.507" level="INFO">${data} = {u'action': u'Submit'}</msg>
<status status="PASS" endtime="20170918 12:23:41.507" starttime="20170918 12:23:41.501"></status>
</kw>
<kw name="Run ASDC Put Request" library="asdc_interface">
<doc>Runs an ASDC put request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${id}/versions/${version_id}${ASDC_VENDOR_ACTIONS_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.509" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/actions' | ${data}={'action': 'Submit'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:41.510" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:41.510" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:41.510" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:41.510" starttime="20170918 12:23:41.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.510" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:41.511" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:41.511" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.511" starttime="20170918 12:23:41.510"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:41.512" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:41.512" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707a8db10&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:41.512" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:41.512" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:41.512" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707a8dc10&gt;</msg>
<msg timestamp="20170918 12:23:41.513" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707a8dc10&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.513" starttime="20170918 12:23:41.511"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.513" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.513" level="TRACE">Return: UUID('a3e3f461-c14c-4967-bd15-d55d2a8b419c')</msg>
<msg timestamp="20170918 12:23:41.513" level="INFO">${uuid} = a3e3f461-c14c-4967-bd15-d55d2a8b419c</msg>
<status status="PASS" endtime="20170918 12:23:41.514" starttime="20170918 12:23:41.513"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:41.514" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:41.515" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-a3e3f461-c14c-4967-bd15-d55d2a8b419c'}</msg>
<msg timestamp="20170918 12:23:41.515" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-a3e3f461-c14c-4967-bd15-d55d2a8b419c', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:41.515" starttime="20170918 12:23:41.514"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.516" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/actions' | data={'action': 'Submit'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-a3e3f461-c14c-4967-bd15-d55d2a8b419c'} ]</msg>
<msg timestamp="20170918 12:23:41.518" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:41.607" level="DEBUG">http://192.168.20.35:8080 "PUT /onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/actions HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:41.607" level="DEBUG">put response: {}</msg>
<msg timestamp="20170918 12:23:41.607" level="INFO">Put Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/0.1/actions, data={"action": "Submit"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-a3e3f461-c14c-4967-bd15-d55d2a8b419c', u'X-FromAppId': u'robot-ete'}, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:41.608" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.608" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.608" starttime="20170918 12:23:41.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.609" level="TRACE">Arguments: [ 'Received response from asdc {}' ]</msg>
<msg timestamp="20170918 12:23:41.609" level="INFO">Received response from asdc {}</msg>
<msg timestamp="20170918 12:23:41.609" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.609" starttime="20170918 12:23:41.608"></status>
</kw>
<msg timestamp="20170918 12:23:41.609" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.609" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.609" starttime="20170918 12:23:41.508"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:41.610" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:41.611" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:41.611" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.611" starttime="20170918 12:23:41.610"></status>
</kw>
<msg timestamp="20170918 12:23:41.611" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20170918 12:23:41.611" starttime="20170918 12:23:41.499"></status>
</kw>
<kw name="Get ASDC License Model" library="asdc_interface">
<doc>gets an asdc license model by its id</doc>
<arguments>
<arg>${license_model_id}</arg>
<arg>1.0</arg>
</arguments>
<assign>
<var>${license_model_resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.612" level="TRACE">Arguments: [ ${id}='cb891cc725bd4377929296369d0a1e45' | ${version_id}='1.0' ]</msg>
<kw name="Run ASDC Get Request" library="asdc_interface">
<doc>Runs an ASDC get request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${id}/versions/${version_id}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.613" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/1.0' | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:41.614" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:41.614" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:41.614" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:41.614" starttime="20170918 12:23:41.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.615" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:41.615" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:41.615" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.615" starttime="20170918 12:23:41.615"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:41.616" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:41.616" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707aedfd0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:41.616" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:41.617" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:41.617" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707aed910&gt;</msg>
<msg timestamp="20170918 12:23:41.617" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707aed910&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.617" starttime="20170918 12:23:41.616"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.618" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.618" level="TRACE">Return: UUID('8d13fc79-d3f7-46fe-ab15-23c6ae90831a')</msg>
<msg timestamp="20170918 12:23:41.618" level="INFO">${uuid} = 8d13fc79-d3f7-46fe-ab15-23c6ae90831a</msg>
<status status="PASS" endtime="20170918 12:23:41.618" starttime="20170918 12:23:41.617"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:41.619" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:41.619" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-8d13fc79-d3f7-46fe-ab15-23c6ae90831a'}</msg>
<msg timestamp="20170918 12:23:41.620" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-8d13fc79-d3f7-46fe-ab15-23c6ae90831a', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:41.620" starttime="20170918 12:23:41.618"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.621" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/1.0' | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-8d13fc79-d3f7-46fe-ab15-23c6ae90831a'} ]</msg>
<msg timestamp="20170918 12:23:41.622" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:41.642" level="DEBUG">http://192.168.20.35:8080 "GET /onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/1.0 HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:41.643" level="INFO">Get Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/cb891cc725bd4377929296369d0a1e45/versions/1.0, headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-8d13fc79-d3f7-46fe-ab15-23c6ae90831a', u'X-FromAppId': u'robot-ete'} </msg>
<msg timestamp="20170918 12:23:41.643" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.643" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.643" starttime="20170918 12:23:41.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.644" level="TRACE">Arguments: [ 'Received response from asdc {"vendorName":"2fd7999c-f632-4ce7-b924","description":"vendor license model","iconRef":"icon","id":"cb891cc725bd4377929296369d0a1e45","version":{"id":"1.0","label":"1.0"},"status":"Final","viewableVersions":[{"id":"1.0","label":"1.0"}],"finalVersions":[{"id":"1.0","label":"1.0"}]}' ]</msg>
<msg timestamp="20170918 12:23:41.644" level="INFO">Received response from asdc {"vendorName":"2fd7999c-f632-4ce7-b924","description":"vendor license model","iconRef":"icon","id":"cb891cc725bd4377929296369d0a1e45","version":{"id":"1.0","label":"1.0"},"status":"Final","viewableVersions":[{"id":"1.0","label":"1.0"}],"finalVersions":[{"id":"1.0","label":"1.0"}]}</msg>
<msg timestamp="20170918 12:23:41.644" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.645" starttime="20170918 12:23:41.644"></status>
</kw>
<msg timestamp="20170918 12:23:41.645" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:41.645" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.645" starttime="20170918 12:23:41.612"></status>
</kw>
<msg timestamp="20170918 12:23:41.645" level="TRACE">Return: {'description': 'vendor license model', 'finalVersions': [{'id': '1.0', 'label': '1.0'}], 'iconRef': 'icon', 'id': 'cb891cc725bd4377929296369d0a1e45', 'status': 'Final', 'vendorName': '2fd7999c-f632-4ce7-b924', 'version': {'id': '1.0', 'label': '1.0'}, 'viewableVersions': [{'id': '1.0', 'label': '1.0'}]}</msg>
<msg timestamp="20170918 12:23:41.646" level="INFO">${license_model_resp} = {u'status': u'Final', u'iconRef': u'icon', u'viewableVersions': [{u'id': u'1.0', u'label': u'1.0'}], u'vendorName': u'2fd7999c-f632-4ce7-b924', u'version': {u'id': u'1.0', u'label': u'1.0'}, u'finalVe...</msg>
<status status="PASS" endtime="20170918 12:23:41.646" starttime="20170918 12:23:41.612"></status>
</kw>
<kw name="Add ASDC Software Product" library="asdc_interface">
<doc>Creates an asdc Software Product and returns its id</doc>
<arguments>
<arg>${license_agreement_id}</arg>
<arg>${feature_group_id}</arg>
<arg>${license_model_resp['vendorName']}</arg>
<arg>${license_model_id}</arg>
</arguments>
<assign>
<var>${software_product_id}</var>
</assign>
<msg timestamp="20170918 12:23:41.647" level="TRACE">Arguments: [ ${license_agreement_id}='bb6be27c9bec4aa3b3f7aafb88d8273a' | ${feature_group_id}='1e77353d692b4e8dad6f2cdde8bb1588' | ${license_model_name}='2fd7999c-f632-4ce7-b924' | ${license_model_id}='cb891cc725bd4377929296369d0a1e45' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.648" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.648" level="TRACE">Return: UUID('c54a9818-a2bb-4e5b-a450-960c499d5f0d')</msg>
<msg timestamp="20170918 12:23:41.648" level="INFO">${uuid} = c54a9818-a2bb-4e5b-a450-960c499d5f0d</msg>
<status status="PASS" endtime="20170918 12:23:41.648" starttime="20170918 12:23:41.648"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.649" level="TRACE">Arguments: [ 'str("c54a9818-a2bb-4e5b-a450-960c499d5f0d")[:23]' ]</msg>
<msg timestamp="20170918 12:23:41.649" level="TRACE">Return: b'c54a9818-a2bb-4e5b-a450'</msg>
<msg timestamp="20170918 12:23:41.649" level="INFO">${shortened_uuid} = c54a9818-a2bb-4e5b-a450</msg>
<status status="PASS" endtime="20170918 12:23:41.649" starttime="20170918 12:23:41.649"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>software_product_name=${shortened_uuid}</arg>
<arg>feature_group_id=${feature_group_id}</arg>
<arg>license_agreement_id=${license_agreement_id}</arg>
<arg>vendor_name=${license_model_name}</arg>
<arg>vendor_id=${license_model_id}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:41.650" level="TRACE">Arguments: [ 'software_product_name=${shortened_uuid}' | 'feature_group_id=${feature_group_id}' | 'license_agreement_id=${license_agreement_id}' | 'vendor_name=${license_model_name}' | 'vendor_id=${license_model_id}' ]</msg>
<msg timestamp="20170918 12:23:41.651" level="TRACE">Return: {'feature_group_id': '1e77353d692b4e8dad6f2cdde8bb1588', 'license_agreement_id': 'bb6be27c9bec4aa3b3f7aafb88d8273a', 'software_product_name': b'c54a9818-a2bb-4e5b-a450', 'vendor_id': 'cb891cc725bd4377929296369d0a1e45', 'vendor_name': '2fd7999c-f632-4ce7-b924'}</msg>
<msg timestamp="20170918 12:23:41.651" level="INFO">${map} = {u'software_product_name': 'c54a9818-a2bb-4e5b-a450', u'feature_group_id': u'1e77353d692b4e8dad6f2cdde8bb1588', u'license_agreement_id': u'bb6be27c9bec4aa3b3f7aafb88d8273a', u'vendor_name': u'2fd7999c...</msg>
<status status="PASS" endtime="20170918 12:23:41.651" starttime="20170918 12:23:41.650"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_SOFTWARE_PRODUCT_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:41.653" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/software_product.template' | ${arguments}={'feature_group_id': '1e77353d692b4e8dad6f2cdde8bb1588', 'license_agreement_id': 'bb6be27c9bec4aa3b3f7aafb88d8273a', 'software_product_name': b'c54a9818-a2bb-4e5b-a450', 'vendor_id': 'cb891cc725bd4377929296369d0a1e45', 'vendor_name': '2fd7999c-f632-4ce7-b924'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:41.654" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/software_product.template' ]</msg>
<msg timestamp="20170918 12:23:41.654" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/software_product.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/software_product.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:41.656" level="TRACE">Return: '{\n  "name": "${software_product_name}",\n  "description": "vendor software product",\n  "category": "resourceNewCategory.generic",\n  "subCategory": "resourceNewCategory.generic.abstract",\n  "onboardingMethod" : "HEAT",\n  "licensingVersion":  {\n        "id" : "1.0",\n        "label" : "1.0"\n        },\n  "vendorName": "${vendor_name}",\n  "vendorId": "${vendor_id}",\n  "icon": "icon",\n  "licensingData": {\n    "licenseAgreement": "${license_agreement_id}",\n    "featureGroups": [\n      "${feature_group_id}"\n    ]\n  }\n}'</msg>
<msg timestamp="20170918 12:23:41.657" level="INFO">${json} = {
  "name": "${software_product_name}",
  "description": "vendor software product",
  "category": "resourceNewCategory.generic",
  "subCategory": "resourceNewCategory.generic.abstract",
  "onboardingM...</msg>
<status status="PASS" endtime="20170918 12:23:41.657" starttime="20170918 12:23:41.654"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.658" level="TRACE">Arguments: [ ${json}='{\n  "name": "${software_product_name}",\n  "description": "vendor software product",\n  "category": "resourceNewCategory.generic",\n  "subCategory": "resourceNewCategory.generic.abstract",\n  "onboardingMethod" : "HEAT",\n  "licensingVersion":  {\n        "id" : "1.0",\n        "label" : "1.0"\n        },\n  "vendorName": "${vendor_name}",\n  "vendorId": "${vendor_id}",\n  "icon": "icon",\n  "licensingData": {\n    "licenseAgreement": "${license_agreement_id}",\n    "featureGroups": [\n      "${feature_group_id}"\n    ]\n  }\n}' | ${arguments}={'feature_group_id': '1e77353d692b4e8dad6f2cdde8bb1588', 'license_agreement_id': 'bb6be27c9bec4aa3b3f7aafb88d8273a', 'software_product_name': b'c54a9818-a2bb-4e5b-a450', 'vendor_id': 'cb891cc725bd4377929296369d0a1e45', 'vendor_name': '2fd7999c-f632-4ce7-b924'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:41.659" level="TRACE">Arguments: [ '{\n  "name": "${software_product_name}",\n  "description": "vendor software product",\n  "category": "resourceNewCategory.generic",\n  "subCategory": "resourceNewCategory.generic.abstract",\n  "onboardingMethod" : "HEAT",\n  "licensingVersion":  {\n        "id" : "1.0",\n        "label" : "1.0"\n        },\n  "vendorName": "${vendor_name}",\n  "vendorId": "${vendor_id}",\n  "icon": "icon",\n  "licensingData": {\n    "licenseAgreement": "${license_agreement_id}",\n    "featureGroups": [\n      "${feature_group_id}"\n    ]\n  }\n}' | {'feature_group_id': '1e77353d692b4e8dad6f2cdde8bb1588', 'license_agreement_id': 'bb6be27c9bec4aa3b3f7aafb88d8273a', 'software_product_name': b'c54a9818-a2bb-4e5b-a450', 'vendor_id': 'cb891cc725bd4377929296369d0a1e45', 'vendor_name': '2fd7999c-f632-4ce7-b924'} ]</msg>
<msg timestamp="20170918 12:23:41.659" level="TRACE">Return: '{\n  "name": "c54a9818-a2bb-4e5b-a450",\n  "description": "vendor software product",\n  "category": "resourceNewCategory.generic",\n  "subCategory": "resourceNewCategory.generic.abstract",\n  "onboardingMethod" : "HEAT",\n  "licensingVersion":  {\n        "id" : "1.0",\n        "label" : "1.0"\n        },\n  "vendorName": "2fd7999c-f632-4ce7-b924",\n  "vendorId": "cb891cc725bd4377929296369d0a1e45",\n  "icon": "icon",\n  "licensingData": {\n    "licenseAgreement": "bb6be27c9bec4aa3b3f7aafb88d8273a",\n    "featureGroups": [\n      "1e77353d692b4e8dad6f2cdde8bb1588"\n    ]\n  }\n}'</msg>
<msg timestamp="20170918 12:23:41.659" level="INFO">${returned_string} = {
  "name": "c54a9818-a2bb-4e5b-a450",
  "description": "vendor software product",
  "category": "resourceNewCategory.generic",
  "subCategory": "resourceNewCategory.generic.abstract",
  "onboardingMe...</msg>
<status status="PASS" endtime="20170918 12:23:41.659" starttime="20170918 12:23:41.658"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.660" level="TRACE">Arguments: [ '{\n  "name": "c54a9818-a2bb-4e5b-a450",\n  "description": "vendor software product",\n  "category": "resourceNewCategory.generic",\n  "subCategory": "resourceNewCategory.generic.abstract",\n  "onboardingMethod" : "HEAT",\n  "licensingVersion":  {\n        "id" : "1.0",\n        "label" : "1.0"\n        },\n  "vendorName": "2fd7999c-f632-4ce7-b924",\n  "vendorId": "cb891cc725bd4377929296369d0a1e45",\n  "icon": "icon",\n  "licensingData": {\n    "licenseAgreement": "bb6be27c9bec4aa3b3f7aafb88d8273a",\n    "featureGroups": [\n      "1e77353d692b4e8dad6f2cdde8bb1588"\n    ]\n  }\n}' ]</msg>
<msg timestamp="20170918 12:23:41.660" level="INFO">To JSON using : content={
  "name": "c54a9818-a2bb-4e5b-a450",
  "description": "vendor software product",
  "category": "resourceNewCategory.generic",
  "subCategory": "resourceNewCategory.generic.abstract",
  "onboardingMethod" : "HEAT",
  "licensingVersion":  {
        "id" : "1.0",
        "label" : "1.0"
        },
  "vendorName": "2fd7999c-f632-4ce7-b924",
  "vendorId": "cb891cc725bd4377929296369d0a1e45",
  "icon": "icon",
  "licensingData": {
    "licenseAgreement": "bb6be27c9bec4aa3b3f7aafb88d8273a",
    "featureGroups": [
      "1e77353d692b4e8dad6f2cdde8bb1588"
    ]
  }
} </msg>
<msg timestamp="20170918 12:23:41.660" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:41.660" level="TRACE">Return: {'category': 'resourceNewCategory.generic',
 'description': 'vendor software product',
 'icon': 'icon',
 'licensingData': {'featureGroups': ['1e77353d692b4e8dad6f2cdde8bb1588'], 'licenseAgreement': 'bb6be27c9bec4aa3b3f7aafb88d8273a'},
 'licensingVersion': {'id': '1.0', 'label': '1.0'},
 'name': 'c54a9818-a2bb-4e5b-a450',
 'onboardingMethod': 'HEAT',
 'subCategory': 'resourceNewCategory.generic.abstract',
 'vendorId': 'cb891cc725bd4377929296369d0a1e45',
 'vendorName': '2fd7999c-f632-4ce7-b924'}</msg>
<msg timestamp="20170918 12:23:41.661" level="INFO">${returned_json} = {u'category': u'resourceNewCategory.generic', u'vendorId': u'cb891cc725bd4377929296369d0a1e45', u'subCategory': u'resourceNewCategory.generic.abstract', u'description': u'vendor software product', u'l...</msg>
<status status="PASS" endtime="20170918 12:23:41.661" starttime="20170918 12:23:41.660"></status>
</kw>
<msg timestamp="20170918 12:23:41.661" level="TRACE">Return: {'category': 'resourceNewCategory.generic',
 'description': 'vendor software product',
 'icon': 'icon',
 'licensingData': {'featureGroups': ['1e77353d692b4e8dad6f2cdde8bb1588'], 'licenseAgreement': 'bb6be27c9bec4aa3b3f7aafb88d8273a'},
 'licensingVersion': {'id': '1.0', 'label': '1.0'},
 'name': 'c54a9818-a2bb-4e5b-a450',
 'onboardingMethod': 'HEAT',
 'subCategory': 'resourceNewCategory.generic.abstract',
 'vendorId': 'cb891cc725bd4377929296369d0a1e45',
 'vendorName': '2fd7999c-f632-4ce7-b924'}</msg>
<msg timestamp="20170918 12:23:41.662" level="INFO">${returned_json} = {u'category': u'resourceNewCategory.generic', u'vendorId': u'cb891cc725bd4377929296369d0a1e45', u'subCategory': u'resourceNewCategory.generic.abstract', u'description': u'vendor software product', u'l...</msg>
<status status="PASS" endtime="20170918 12:23:41.662" starttime="20170918 12:23:41.657"></status>
</kw>
<msg timestamp="20170918 12:23:41.662" level="TRACE">Return: {'category': 'resourceNewCategory.generic',
 'description': 'vendor software product',
 'icon': 'icon',
 'licensingData': {'featureGroups': ['1e77353d692b4e8dad6f2cdde8bb1588'], 'licenseAgreement': 'bb6be27c9bec4aa3b3f7aafb88d8273a'},
 'licensingVersion': {'id': '1.0', 'label': '1.0'},
 'name': 'c54a9818-a2bb-4e5b-a450',
 'onboardingMethod': 'HEAT',
 'subCategory': 'resourceNewCategory.generic.abstract',
 'vendorId': 'cb891cc725bd4377929296369d0a1e45',
 'vendorName': '2fd7999c-f632-4ce7-b924'}</msg>
<msg timestamp="20170918 12:23:41.662" level="INFO">${data} = {u'category': u'resourceNewCategory.generic', u'vendorId': u'cb891cc725bd4377929296369d0a1e45', u'subCategory': u'resourceNewCategory.generic.abstract', u'description': u'vendor software product', u'l...</msg>
<status status="PASS" endtime="20170918 12:23:41.663" starttime="20170918 12:23:41.652"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_SOFTWARE_PRODUCT_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.664" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-software-products' | ${data}={'category': 'resourceNewCategory.generic',
 'description': 'vendor software product',
 'icon': 'icon',
 'licensingData': {'featureGroups': ['1e77353d692b4e8dad6f2cdde8bb1588'], 'licenseAgreement': 'bb6be27c9bec4aa3b3f7aafb88d8273a'},
 'licensingVersion': {'id': '1.0', 'label': '1.0'},
 'name': 'c54a9818-a2bb-4e5b-a450',
 'onboardingMethod': 'HEAT',
 'subCategory': 'resourceNewCategory.generic.abstract',
 'vendorId': 'cb891cc725bd4377929296369d0a1e45',
 'vendorName': '2fd7999c-f632-4ce7-b924'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:41.665" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:41.665" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:41.665" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:41.665" starttime="20170918 12:23:41.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.666" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:41.666" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:41.666" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.667" starttime="20170918 12:23:41.666"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:41.667" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:41.668" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707a8d8d0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:41.668" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:41.668" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:41.668" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707a8d790&gt;</msg>
<msg timestamp="20170918 12:23:41.668" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707a8d790&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.669" starttime="20170918 12:23:41.667"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.669" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.669" level="TRACE">Return: UUID('c8b23934-9050-4f90-acdf-54c397f8b479')</msg>
<msg timestamp="20170918 12:23:41.669" level="INFO">${uuid} = c8b23934-9050-4f90-acdf-54c397f8b479</msg>
<status status="PASS" endtime="20170918 12:23:41.669" starttime="20170918 12:23:41.669"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:41.670" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:41.671" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-c8b23934-9050-4f90-acdf-54c397f8b479'}</msg>
<msg timestamp="20170918 12:23:41.671" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-c8b23934-9050-4f90-acdf-54c397f8b479', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:41.671" starttime="20170918 12:23:41.670"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.672" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-software-products' | data={'category': 'resourceNewCategory.generic',
 'description': 'vendor software product',
 'icon': 'icon',
 'licensingData': {'featureGroups': ['1e77353d692b4e8dad6f2cdde8bb1588'], 'licenseAgreement': 'bb6be27c9bec4aa3b3f7aafb88d8273a'},
 'licensingVersion': {'id': '1.0', 'label': '1.0'},
 'name': 'c54a9818-a2bb-4e5b-a450',
 'onboardingMethod': 'HEAT',
 'subCategory': 'resourceNewCategory.generic.abstract',
 'vendorId': 'cb891cc725bd4377929296369d0a1e45',
 'vendorName': '2fd7999c-f632-4ce7-b924'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-c8b23934-9050-4f90-acdf-54c397f8b479'} ]</msg>
<msg timestamp="20170918 12:23:41.675" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:41.733" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-software-products HTTP/1.1" 500 None</msg>
<msg timestamp="20170918 12:23:41.734" level="DEBUG">post response: {"status":"INTERNAL_SERVER_ERROR","errorCode":"GENERAL_ERROR_REST_ID","message":"An error has occurred: No enum constant org.openecomp.sdcrests.vendorsoftwareproducts.types.OnboardingMethod.HEAT"}</msg>
<msg timestamp="20170918 12:23:41.734" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-software-products, data={"category": "resourceNewCategory.generic", "vendorId": "cb891cc725bd4377929296369d0a1e45", "subCategory": "resourceNewCategory.generic.abstract", "description": "vendor software product", "licensingVersion": {"id": "1.0", "label": "1.0"}, "licensingData": {"featureGroups": ["1e77353d692b4e8dad6f2cdde8bb1588"], "licenseAgreement": "bb6be27c9bec4aa3b3f7aafb88d8273a"}, "icon": "icon", "onboardingMethod": "HEAT", "vendorName": "2fd7999c-f632-4ce7-b924", "name": "c54a9818-a2bb-4e5b-a450"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-c8b23934-9050-4f90-acdf-54c397f8b479', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:41.734" level="TRACE">Return: &lt;Response [500]&gt;</msg>
<msg timestamp="20170918 12:23:41.734" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.734" starttime="20170918 12:23:41.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.735" level="TRACE">Arguments: [ 'Received response from asdc {"status":"INTERNAL_SERVER_ERROR","errorCode":"GENERAL_ERROR_REST_ID","message":"An error has occurred: No enum constant org.openecomp.sdcrests.vendorsoftwareproducts.types.OnboardingMethod.HEAT"}' ]</msg>
<msg timestamp="20170918 12:23:41.736" level="INFO">Received response from asdc {"status":"INTERNAL_SERVER_ERROR","errorCode":"GENERAL_ERROR_REST_ID","message":"An error has occurred: No enum constant org.openecomp.sdcrests.vendorsoftwareproducts.types.OnboardingMethod.HEAT"}</msg>
<msg timestamp="20170918 12:23:41.736" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.736" starttime="20170918 12:23:41.735"></status>
</kw>
<msg timestamp="20170918 12:23:41.737" level="TRACE">Return: &lt;Response [500]&gt;</msg>
<msg timestamp="20170918 12:23:41.737" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.737" starttime="20170918 12:23:41.663"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:41.738" level="TRACE">Arguments: [ 500 | '200' ]</msg>
<msg timestamp="20170918 12:23:41.738" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:41.738" level="FAIL">500 != 200</msg>
<msg timestamp="20170918 12:23:41.738" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20170918 12:23:41.738" starttime="20170918 12:23:41.737"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:41.738" starttime="20170918 12:23:41.646"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:41.739" starttime="20170918 12:23:40.410"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:41.739" starttime="20170918 12:23:40.410"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:41.739" starttime="20170918 12:23:40.409"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:41.739" starttime="20170918 12:23:38.616"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:41.739" starttime="20170918 12:23:38.584"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:41.739" starttime="20170918 12:23:38.583"></status>
</kw>
<msg timestamp="20170918 12:23:41.739" level="TRACE">Return: (b'FAIL', '500 != 200')</msg>
<msg timestamp="20170918 12:23:41.740" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170918 12:23:41.740" level="INFO">${value} = 500 != 200</msg>
<status status="PASS" endtime="20170918 12:23:41.740" starttime="20170918 12:23:38.582"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Distribute Model</arg>
<arg>vLB</arg>
<arg>demoVLB</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<msg timestamp="20170918 12:23:41.740" level="TRACE">Arguments: [ 'Distribute Model' | 'vLB' | 'demoVLB' ]</msg>
<kw name="Distribute Model" library="demo_preload">
<arguments>
<arg>vLB</arg>
<arg>demoVLB</arg>
</arguments>
<msg timestamp="20170918 12:23:41.741" level="TRACE">Arguments: [ ${service}='vLB' | ${modelName}='demoVLB' ]</msg>
<kw name="Model Distribution For Directory" library="model_test_template">
<arguments>
<arg>${service}</arg>
<arg>${modelName}</arg>
</arguments>
<assign>
<var>${service_model_type}</var>
<var>${vnf_type}</var>
<var>${vf_modules}</var>
</assign>
<msg timestamp="20170918 12:23:41.742" level="TRACE">Arguments: [ ${service}='vLB' | ${catalog_service_name}='demoVLB' ]</msg>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${GLOBAL_SERVICE_FOLDER_MAPPING}</arg>
<arg>${service}</arg>
</arguments>
<assign>
<var>${directory_list}</var>
</assign>
<msg timestamp="20170918 12:23:41.743" level="TRACE">Arguments: [ {b'vFW': [b'base_vfw'], b'vIMS': [b'base_clearwater'], b'vLB': [b'base_vlb'], b'vVG': [b'base_vvg']} | 'vLB' ]</msg>
<msg timestamp="20170918 12:23:41.743" level="TRACE">Return: [b'base_vlb']</msg>
<msg timestamp="20170918 12:23:41.744" level="INFO">${directory_list} = ['base_vlb']</msg>
<status status="PASS" endtime="20170918 12:23:41.744" starttime="20170918 12:23:41.743"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${ziplist}</var>
</assign>
<msg timestamp="20170918 12:23:41.744" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.744" level="TRACE">Return: []</msg>
<msg timestamp="20170918 12:23:41.744" level="INFO">${ziplist} = []</msg>
<status status="PASS" endtime="20170918 12:23:41.744" starttime="20170918 12:23:41.744"></status>
</kw>
<kw type="for" name="${directory} IN [ @{directory_list} ]">
<kw type="foritem" name="${directory} = base_vlb">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${ASDC_ZIP_DIRECTORY}/${directory}.zip</arg>
</arguments>
<assign>
<var>${zip}</var>
</assign>
<msg timestamp="20170918 12:23:41.746" level="TRACE">Arguments: [ 'robot/assets/asdc/temp/base_vlb.zip' ]</msg>
<msg timestamp="20170918 12:23:41.746" level="TRACE">Return: 'robot/assets/asdc/temp/base_vlb.zip'</msg>
<msg timestamp="20170918 12:23:41.746" level="INFO">${zip} = robot/assets/asdc/temp/base_vlb.zip</msg>
<status status="PASS" endtime="20170918 12:23:41.746" starttime="20170918 12:23:41.745"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${ASDC_ASSETS_DIRECTORY}/${directory}</arg>
</arguments>
<assign>
<var>${folder}</var>
</assign>
<msg timestamp="20170918 12:23:41.747" level="TRACE">Arguments: [ 'robot/assets/asdc/base_vlb' ]</msg>
<msg timestamp="20170918 12:23:41.747" level="TRACE">Return: 'robot/assets/asdc/base_vlb'</msg>
<msg timestamp="20170918 12:23:41.747" level="INFO">${folder} = robot/assets/asdc/base_vlb</msg>
<status status="PASS" endtime="20170918 12:23:41.747" starttime="20170918 12:23:41.746"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${ASDC_ASSETS_DIRECTORY}/temp</arg>
</arguments>
<msg timestamp="20170918 12:23:41.748" level="TRACE">Arguments: [ 'robot/assets/asdc/temp' ]</msg>
<msg timestamp="20170918 12:23:41.748" html="yes" level="INFO">Directory '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/asdc/temp"&gt;/var/opt/OpenECOMP_ETE/robot/assets/asdc/temp&lt;/a&gt;' already exists.</msg>
<msg timestamp="20170918 12:23:41.748" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.748" starttime="20170918 12:23:41.748"></status>
</kw>
<kw name="Create Zip From Files In Directory" library="ArchiveLibrary">
<doc>Take all files in a directory and create a zip package from them</doc>
<arguments>
<arg>${folder}</arg>
<arg>${zip}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.749" level="TRACE">Arguments: [ 'robot/assets/asdc/base_vlb' | 'robot/assets/asdc/temp/base_vlb.zip' ]</msg>
<msg timestamp="20170918 12:23:41.765" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.765" starttime="20170918 12:23:41.749"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${ziplist}</arg>
<arg>${zip}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.766" level="TRACE">Arguments: [ [] | 'robot/assets/asdc/temp/base_vlb.zip' ]</msg>
<msg timestamp="20170918 12:23:41.766" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.766" starttime="20170918 12:23:41.765"></status>
</kw>
<status status="PASS" endtime="20170918 12:23:41.766" starttime="20170918 12:23:41.745"></status>
</kw>
<status status="PASS" endtime="20170918 12:23:41.766" starttime="20170918 12:23:41.745"></status>
</kw>
<kw name="Distribute Model From ASDC" library="asdc_interface">
<doc>goes end to end creating all the asdc objects based ona model and distributing it to the systems. it then returns the service name, vf name and vf module name</doc>
<arguments>
<arg>${ziplist}</arg>
<arg>${catalog_service_name}</arg>
</arguments>
<assign>
<var>${catalog_service_name}</var>
<var>${catalog_resource_name}</var>
<var>${vf_modules}</var>
<var>${catalog_resource_ids}</var>
<var>${catalog_service_id}</var>
</assign>
<msg timestamp="20170918 12:23:41.767" level="TRACE">Arguments: [ ${model_zip_path}=['robot/assets/asdc/temp/base_vlb.zip'] | ${catalog_service_name}='demoVLB' ]</msg>
<kw name="Add ASDC Catalog Service" library="asdc_interface">
<doc>Creates an asdc Catalog Service and returns its id</doc>
<arguments>
<arg>${catalog_service_name}</arg>
</arguments>
<assign>
<var>${catalog_service_id}</var>
</assign>
<msg timestamp="20170918 12:23:41.768" level="TRACE">Arguments: [ ${catalog_service_name}='demoVLB' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.768" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.769" level="TRACE">Return: UUID('dcaef5e7-5cb3-4f5d-945e-3b8284240174')</msg>
<msg timestamp="20170918 12:23:41.769" level="INFO">${uuid} = dcaef5e7-5cb3-4f5d-945e-3b8284240174</msg>
<status status="PASS" endtime="20170918 12:23:41.769" starttime="20170918 12:23:41.768"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.769" level="TRACE">Arguments: [ 'str("dcaef5e7-5cb3-4f5d-945e-3b8284240174")[:23]' ]</msg>
<msg timestamp="20170918 12:23:41.770" level="TRACE">Return: b'dcaef5e7-5cb3-4f5d-945e'</msg>
<msg timestamp="20170918 12:23:41.770" level="INFO">${shortened_uuid} = dcaef5e7-5cb3-4f5d-945e</msg>
<status status="PASS" endtime="20170918 12:23:41.770" starttime="20170918 12:23:41.769"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${catalog_service_name}' ==''</arg>
<arg>${shortened_uuid}</arg>
<arg>${catalog_service_name}</arg>
</arguments>
<assign>
<var>${catalog_service_name}</var>
</assign>
<msg timestamp="20170918 12:23:41.770" level="TRACE">Arguments: [ "'demoVLB' ==''" | '${shortened_uuid}' | '${catalog_service_name}' ]</msg>
<msg timestamp="20170918 12:23:41.771" level="TRACE">Return: 'demoVLB'</msg>
<msg timestamp="20170918 12:23:41.771" level="INFO">${catalog_service_name} = demoVLB</msg>
<status status="PASS" endtime="20170918 12:23:41.771" starttime="20170918 12:23:41.770"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>service_name=${catalog_service_name}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:41.771" level="TRACE">Arguments: [ 'service_name=${catalog_service_name}' ]</msg>
<msg timestamp="20170918 12:23:41.772" level="TRACE">Return: {'service_name': 'demoVLB'}</msg>
<msg timestamp="20170918 12:23:41.772" level="INFO">${map} = {u'service_name': u'demoVLB'}</msg>
<status status="PASS" endtime="20170918 12:23:41.772" starttime="20170918 12:23:41.771"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_CATALOG_SERVICE_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:41.773" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/catalog_service.template' | ${arguments}={'service_name': 'demoVLB'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:41.774" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/catalog_service.template' ]</msg>
<msg timestamp="20170918 12:23:41.774" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/catalog_service.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/catalog_service.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:41.774" level="TRACE">Return: '{\n  "artifacts": {},\n  "toscaArtifacts": {},\n  "contactId": "cs0008",\n  "categories": [\n    {\n      "name": "Network L1-3",\n      "normalizedName": "network l1-3",\n      "uniqueId": "serviceNewCategory.network l1-3",\n      "icons": [\n        "network_l_1-3"\n      ]\n    }\n  ],\n  "description": "catalog service description",\n  "icon": "network_l_1-3",\n  "componentInstancesProperties": {},\n  "componentInstancesAttributes": {},\n  "name": "${service_name}",\n  "tags": [\n    "robot-ete",\n    "${service_name}"\n  ],\n  "capabilities": {},\n  "requirements": {},\n  "deploymentArtifacts": {},\n  "componentType": "SERVICE",\n  "projectCode": "123456",\n  "componentInstances": [],\n  "properties": [],\n  "attributes": [],\n  "groups": [],\n  "serviceApiArtifacts": {}\n}'</msg>
<msg timestamp="20170918 12:23:41.774" level="INFO">${json} = {
  "artifacts": {},
  "toscaArtifacts": {},
  "contactId": "cs0008",
  "categories": [
    {
      "name": "Network L1-3",
      "normalizedName": "network l1-3",
      "uniqueId": "serviceNewCategor...</msg>
<status status="PASS" endtime="20170918 12:23:41.774" starttime="20170918 12:23:41.773"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.775" level="TRACE">Arguments: [ ${json}='{\n  "artifacts": {},\n  "toscaArtifacts": {},\n  "contactId": "cs0008",\n  "categories": [\n    {\n      "name": "Network L1-3",\n      "normalizedName": "network l1-3",\n      "uniqueId": "serviceNewCategory.network l1-3",\n      "icons": [\n        "network_l_1-3"\n      ]\n    }\n  ],\n  "description": "catalog service description",\n  "icon": "network_l_1-3",\n  "componentInstancesProperties": {},\n  "componentInstancesAttributes": {},\n  "name": "${service_name}",\n  "tags": [\n    "robot-ete",\n    "${service_name}"\n  ],\n  "capabilities": {},\n  "requirements": {},\n  "deploymentArtifacts": {},\n  "componentType": "SERVICE",\n  "projectCode": "123456",\n  "componentInstances": [],\n  "properties": [],\n  "attributes": [],\n  "groups": [],\n  "serviceApiArtifacts": {}\n}' | ${arguments}={'service_name': 'demoVLB'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:41.776" level="TRACE">Arguments: [ '{\n  "artifacts": {},\n  "toscaArtifacts": {},\n  "contactId": "cs0008",\n  "categories": [\n    {\n      "name": "Network L1-3",\n      "normalizedName": "network l1-3",\n      "uniqueId": "serviceNewCategory.network l1-3",\n      "icons": [\n        "network_l_1-3"\n      ]\n    }\n  ],\n  "description": "catalog service description",\n  "icon": "network_l_1-3",\n  "componentInstancesProperties": {},\n  "componentInstancesAttributes": {},\n  "name": "${service_name}",\n  "tags": [\n    "robot-ete",\n    "${service_name}"\n  ],\n  "capabilities": {},\n  "requirements": {},\n  "deploymentArtifacts": {},\n  "componentType": "SERVICE",\n  "projectCode": "123456",\n  "componentInstances": [],\n  "properties": [],\n  "attributes": [],\n  "groups": [],\n  "serviceApiArtifacts": {}\n}' | {'service_name': 'demoVLB'} ]</msg>
<msg timestamp="20170918 12:23:41.776" level="TRACE">Return: '{\n  "artifacts": {},\n  "toscaArtifacts": {},\n  "contactId": "cs0008",\n  "categories": [\n    {\n      "name": "Network L1-3",\n      "normalizedName": "network l1-3",\n      "uniqueId": "serviceNewCategory.network l1-3",\n      "icons": [\n        "network_l_1-3"\n      ]\n    }\n  ],\n  "description": "catalog service description",\n  "icon": "network_l_1-3",\n  "componentInstancesProperties": {},\n  "componentInstancesAttributes": {},\n  "name": "demoVLB",\n  "tags": [\n    "robot-ete",\n    "demoVLB"\n  ],\n  "capabilities": {},\n  "requirements": {},\n  "deploymentArtifacts": {},\n  "componentType": "SERVICE",\n  "projectCode": "123456",\n  "componentInstances": [],\n  "properties": [],\n  "attributes": [],\n  "groups": [],\n  "serviceApiArtifacts": {}\n}'</msg>
<msg timestamp="20170918 12:23:41.777" level="INFO">${returned_string} = {
  "artifacts": {},
  "toscaArtifacts": {},
  "contactId": "cs0008",
  "categories": [
    {
      "name": "Network L1-3",
      "normalizedName": "network l1-3",
      "uniqueId": "serviceNewCategor...</msg>
<status status="PASS" endtime="20170918 12:23:41.777" starttime="20170918 12:23:41.776"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:41.777" level="TRACE">Arguments: [ '{\n  "artifacts": {},\n  "toscaArtifacts": {},\n  "contactId": "cs0008",\n  "categories": [\n    {\n      "name": "Network L1-3",\n      "normalizedName": "network l1-3",\n      "uniqueId": "serviceNewCategory.network l1-3",\n      "icons": [\n        "network_l_1-3"\n      ]\n    }\n  ],\n  "description": "catalog service description",\n  "icon": "network_l_1-3",\n  "componentInstancesProperties": {},\n  "componentInstancesAttributes": {},\n  "name": "demoVLB",\n  "tags": [\n    "robot-ete",\n    "demoVLB"\n  ],\n  "capabilities": {},\n  "requirements": {},\n  "deploymentArtifacts": {},\n  "componentType": "SERVICE",\n  "projectCode": "123456",\n  "componentInstances": [],\n  "properties": [],\n  "attributes": [],\n  "groups": [],\n  "serviceApiArtifacts": {}\n}' ]</msg>
<msg timestamp="20170918 12:23:41.777" level="INFO">To JSON using : content={
  "artifacts": {},
  "toscaArtifacts": {},
  "contactId": "cs0008",
  "categories": [
    {
      "name": "Network L1-3",
      "normalizedName": "network l1-3",
      "uniqueId": "serviceNewCategory.network l1-3",
      "icons": [
        "network_l_1-3"
      ]
    }
  ],
  "description": "catalog service description",
  "icon": "network_l_1-3",
  "componentInstancesProperties": {},
  "componentInstancesAttributes": {},
  "name": "demoVLB",
  "tags": [
    "robot-ete",
    "demoVLB"
  ],
  "capabilities": {},
  "requirements": {},
  "deploymentArtifacts": {},
  "componentType": "SERVICE",
  "projectCode": "123456",
  "componentInstances": [],
  "properties": [],
  "attributes": [],
  "groups": [],
  "serviceApiArtifacts": {}
} </msg>
<msg timestamp="20170918 12:23:41.778" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:41.778" level="TRACE">Return: {'artifacts': {},
 'attributes': [],
 'capabilities': {},
 'categories': [{'icons': ['network_l_1-3'], 'name': 'Network L1-3', 'normalizedName': 'network l1-3', 'uniqueId': 'serviceNewCategory.network l1-3'}],
 'componentInstances': [],
 'componentInstancesAttributes': {},
 'componentInstancesProperties': {},
 'componentType': 'SERVICE',
 'contactId': 'cs0008',
 'deploymentArtifacts': {},
 'description': 'catalog service description',
 'groups': [],
 'icon': 'network_l_1-3',
 'name': 'demoVLB',
 'projectCode': '123456',
 'properties': [],
 'requirements': {},
 'serviceApiArtifacts': {},
 'tags': ['robot-ete', 'demoVLB'],
 'toscaArtifacts': {}}</msg>
<msg timestamp="20170918 12:23:41.778" level="INFO">${returned_json} = {u'componentType': u'SERVICE', u'properties': [], u'requirements': {}, u'toscaArtifacts': {}, u'tags': [u'robot-ete', u'demoVLB'], u'artifacts': {}, u'description': u'catalog service description', u's...</msg>
<status status="PASS" endtime="20170918 12:23:41.778" starttime="20170918 12:23:41.777"></status>
</kw>
<msg timestamp="20170918 12:23:41.779" level="TRACE">Return: {'artifacts': {},
 'attributes': [],
 'capabilities': {},
 'categories': [{'icons': ['network_l_1-3'], 'name': 'Network L1-3', 'normalizedName': 'network l1-3', 'uniqueId': 'serviceNewCategory.network l1-3'}],
 'componentInstances': [],
 'componentInstancesAttributes': {},
 'componentInstancesProperties': {},
 'componentType': 'SERVICE',
 'contactId': 'cs0008',
 'deploymentArtifacts': {},
 'description': 'catalog service description',
 'groups': [],
 'icon': 'network_l_1-3',
 'name': 'demoVLB',
 'projectCode': '123456',
 'properties': [],
 'requirements': {},
 'serviceApiArtifacts': {},
 'tags': ['robot-ete', 'demoVLB'],
 'toscaArtifacts': {}}</msg>
<msg timestamp="20170918 12:23:41.779" level="INFO">${returned_json} = {u'componentType': u'SERVICE', u'properties': [], u'requirements': {}, u'toscaArtifacts': {}, u'tags': [u'robot-ete', u'demoVLB'], u'artifacts': {}, u'description': u'catalog service description', u's...</msg>
<status status="PASS" endtime="20170918 12:23:41.779" starttime="20170918 12:23:41.774"></status>
</kw>
<msg timestamp="20170918 12:23:41.779" level="TRACE">Return: {'artifacts': {},
 'attributes': [],
 'capabilities': {},
 'categories': [{'icons': ['network_l_1-3'], 'name': 'Network L1-3', 'normalizedName': 'network l1-3', 'uniqueId': 'serviceNewCategory.network l1-3'}],
 'componentInstances': [],
 'componentInstancesAttributes': {},
 'componentInstancesProperties': {},
 'componentType': 'SERVICE',
 'contactId': 'cs0008',
 'deploymentArtifacts': {},
 'description': 'catalog service description',
 'groups': [],
 'icon': 'network_l_1-3',
 'name': 'demoVLB',
 'projectCode': '123456',
 'properties': [],
 'requirements': {},
 'serviceApiArtifacts': {},
 'tags': ['robot-ete', 'demoVLB'],
 'toscaArtifacts': {}}</msg>
<msg timestamp="20170918 12:23:41.780" level="INFO">${data} = {u'componentType': u'SERVICE', u'properties': [], u'requirements': {}, u'toscaArtifacts': {}, u'tags': [u'robot-ete', u'demoVLB'], u'artifacts': {}, u'description': u'catalog service description', u's...</msg>
<status status="PASS" endtime="20170918 12:23:41.780" starttime="20170918 12:23:41.772"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_CATALOG_SERVICES_PATH}</arg>
<arg>${data}</arg>
<arg>${ASDC_DESIGNER_USER_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.781" level="TRACE">Arguments: [ ${data_path}='/sdc2/rest/v1/catalog/services' | ${data}={'artifacts': {},
 'attributes': [],
 'capabilities': {},
 'categories': [{'icons': ['network_l_1-3'], 'name': 'Network L1-3', 'normalizedName': 'network l1-3', 'uniqueId': 'serviceNewCategory.network l1-3'}],
 'componentInstances': [],
 'componentInstancesAttributes': {},
 'componentInstancesProperties': {},
 'componentType': 'SERVICE',
 'contactId': 'cs0008',
 'deploymentArtifacts': {},
 'description': 'catalog service description',
 'groups': [],
 'icon': 'network_l_1-3',
 'name': 'demoVLB',
 'projectCode': '123456',
 'properties': [],
 'requirements': {},
 'serviceApiArtifacts': {},
 'tags': ['robot-ete', 'demoVLB'],
 'toscaArtifacts': {}} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:41.782" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:41.783" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:41.783" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:41.783" starttime="20170918 12:23:41.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:41.783" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:41.784" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:41.784" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:41.784" starttime="20170918 12:23:41.783"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:41.784" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:41.785" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707a3af10&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:41.785" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:41.785" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:41.785" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707a3afd0&gt;</msg>
<msg timestamp="20170918 12:23:41.786" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707a3afd0&gt;</msg>
<status status="PASS" endtime="20170918 12:23:41.786" starttime="20170918 12:23:41.784"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:41.786" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:41.787" level="TRACE">Return: UUID('9a68bcae-fe7b-49b8-a308-e1b729827ac8')</msg>
<msg timestamp="20170918 12:23:41.787" level="INFO">${uuid} = 9a68bcae-fe7b-49b8-a308-e1b729827ac8</msg>
<status status="PASS" endtime="20170918 12:23:41.787" starttime="20170918 12:23:41.786"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:41.787" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:41.788" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-9a68bcae-fe7b-49b8-a308-e1b729827ac8'}</msg>
<msg timestamp="20170918 12:23:41.788" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-9a68bcae-fe7b-49b8-a308-e1b729827ac8', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:41.788" starttime="20170918 12:23:41.787"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:41.789" level="TRACE">Arguments: [ 'asdc' | '/sdc2/rest/v1/catalog/services' | data={'artifacts': {},
 'attributes': [],
 'capabilities': {},
 'categories': [{'icons': ['network_l_1-3'], 'name': 'Network L1-3', 'normalizedName': 'network l1-3', 'uniqueId': 'serviceNewCategory.network l1-3'}],
 'componentInstances': [],
 'componentInstancesAttributes': {},
 'componentInstancesProperties': {},
 'componentType': 'SERVICE',
 'contactId': 'cs0008',
 'deploymentArtifacts': {},
 'description': 'catalog service description',
 'groups': [],
 'icon': 'network_l_1-3',
 'name': 'demoVLB',
 'projectCode': '123456',
 'properties': [],
 'requirements': {},
 'serviceApiArtifacts': {},
 'tags': ['robot-ete', 'demoVLB'],
 'toscaArtifacts': {}} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-9a68bcae-fe7b-49b8-a308-e1b729827ac8'} ]</msg>
<msg timestamp="20170918 12:23:41.793" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:42.919" level="DEBUG">http://192.168.20.35:8080 "POST /sdc2/rest/v1/catalog/services HTTP/1.1" 201 None</msg>
<msg timestamp="20170918 12:23:42.921" level="DEBUG">post response: {"artifacts":{"servicequestionnaire":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"controlloopfunctions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"deploymentArtifacts":{},"toscaArtifacts":{"assettoscacsar":{"timeout":0,"creationDate":1505737367755,"description":"TOSCA definition package of the asset","artifactName":"service-Demovlb-csar.csar","uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.assettoscacsar","artifactLabel":"assettoscacsar","artifactVersion":"0","artifactType":"TOSCA_CSAR","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Tosca Model","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"assettoscatemplate":{"timeout":0,"creationDate":1505737367755,"description":"TOSCA representation of the asset","artifactName":"service-Demovlb-template.yml","uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.assettoscatemplate","artifactLabel":"assettoscatemplate","artifactVersion":"0","artifactType":"TOSCA_TEMPLATE","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Tosca Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"categories":[{"name":"Network L1-3","normalizedName":"network l1-3","uniqueId":"serviceNewCategory.network l1-3","icons":["network_l_1-3"]}],"componentInstancesRelations":[],"derivedFromGenericType":"org.openecomp.resource.abstract.nodes.service","derivedFromGenericVersion":"1.0","toscaType":"topology_template","serviceApiArtifacts":{"configuration":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.configuration","artifactLabel":"configuration","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Configuration","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"testing":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.testing","artifactLabel":"testing","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Testing","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"logging":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.logging","artifactLabel":"logging","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Logging","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"monitoring":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.monitoring","artifactLabel":"monitoring","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Monitoring","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"reporting":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.reporting","artifactLabel":"reporting","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Reporting","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"instantiation":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.instantiation","artifactLabel":"instantiation","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Instantiation","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"distributionStatus":"DISTRIBUTION_NOT_APPROVED","projectCode":"123456","ecompGeneratedNaming":true,"namingPolicy":"","serviceType":"","serviceRole":"","icon":"network_l_1-3","version":"0.1","creationDate":1505737367768,"description":"catalog service description","tags":["robot-ete","demoVLB"],"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30","lastUpdateDate":1505737367768,"normalizedName":"demovlb","invariantUUID":"b50d8856-56e6-42a6-b01c-4b280032c63f","componentType":"SERVICE","lifecycleState":"NOT_CERTIFIED_CHECKOUT","uuid":"f0ea33ae-9f00-4698-9437-924cda40689f","systemName":"Demovlb","lastUpdaterUserId":"cs0008","highestVersion":true,"creatorFullName":"Carlos Santana","allArtifacts":{"controlloopfunctions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicequestionnaire":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"creatorUserId":"cs0008","contactId":"cs0008","conformanceLevel":"4.0","lastUpdaterFullName":"Carlos Santana","name":"demoVLB"}</msg>
<msg timestamp="20170918 12:23:42.921" level="INFO">Post Request using : alias=asdc, uri=/sdc2/rest/v1/catalog/services, data={"componentType": "SERVICE", "properties": [], "requirements": {}, "toscaArtifacts": {}, "tags": ["robot-ete", "demoVLB"], "artifacts": {}, "description": "catalog service description", "serviceApiArtifacts": {}, "capabilities": {}, "name": "demoVLB", "componentInstancesProperties": {}, "componentInstancesAttributes": {}, "contactId": "cs0008", "groups": [], "projectCode": "123456", "deploymentArtifacts": {}, "attributes": [], "componentInstances": [], "categories": [{"normalizedName": "network l1-3", "name": "Network L1-3", "uniqueId": "serviceNewCategory.network l1-3", "icons": ["network_l_1-3"]}], "icon": "network_l_1-3"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-9a68bcae-fe7b-49b8-a308-e1b729827ac8', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:42.921" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:42.921" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:42.921" starttime="20170918 12:23:41.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:42.923" level="TRACE">Arguments: [ 'Received response from asdc {"artifacts":{"servicequestionnaire":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"controlloopfunctions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"deploymentArtifacts":{},"toscaArtifacts":{"assettoscacsar":{"timeout":0,"creationDate":1505737367755,"description":"TOSCA definition package of the asset","artifactName":"service-Demovlb-csar.csar","uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.assettoscacsar","artifactLabel":"assettoscacsar","artifactVersion":"0","artifactType":"TOSCA_CSAR","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Tosca Model","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"assettoscatemplate":{"timeout":0,"creationDate":1505737367755,"description":"TOSCA representation of the asset","artifactName":"service-Demovlb-template.yml","uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.assettoscatemplate","artifactLabel":"assettoscatemplate","artifactVersion":"0","artifactType":"TOSCA_TEMPLATE","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Tosca Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"categories":[{"name":"Network L1-3","normalizedName":"network l1-3","uniqueId":"serviceNewCategory.network l1-3","icons":["network_l_1-3"]}],"componentInstancesRelations":[],"derivedFromGenericType":"org.openecomp.resource.abstract.nodes.service","derivedFromGenericVersion":"1.0","toscaType":"topology_template","serviceApiArtifacts":{"configuration":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.configuration","artifactLabel":"configuration","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Configuration","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"testing":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.testing","artifactLabel":"testing","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Testing","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"logging":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.logging","artifactLabel":"logging","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Logging","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"monitoring":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.monitoring","artifactLabel":"monitoring","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Monitoring","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"reporting":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.reporting","artifactLabel":"reporting","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Reporting","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"instantiation":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.instantiation","artifactLabel":"instantiation","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Instantiation","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"distributionStatus":"DISTRIBUTION_NOT_APPROVED","projectCode":"123456","ecompGeneratedNaming":true,"namingPolicy":"","serviceType":"","serviceRole":"","icon":"network_l_1-3","version":"0.1","creationDate":1505737367768,"description":"catalog service description","tags":["robot-ete","demoVLB"],"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30","lastUpdateDate":1505737367768,"normalizedName":"demovlb","invariantUUID":"b50d8856-56e6-42a6-b01c-4b280032c63f","componentType":"SERVICE","lifecycleState":"NOT_CERTIFIED_CHECKOUT","uuid":"f0ea33ae-9f00-4698-9437-924cda40689f","systemName":"Demovlb","lastUpdaterUserId":"cs0008","highestVersion":true,"creatorFullName":"Carlos Santana","allArtifacts":{"controlloopfunctions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicequestionnaire":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"creatorUserId":"cs0008","contactId":"cs0008","conformanceLevel":"4.0","lastUpdaterFullName":"Carlos Santana","name":"demoVLB"}' ]</msg>
<msg timestamp="20170918 12:23:42.924" level="INFO">Received response from asdc {"artifacts":{"servicequestionnaire":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"controlloopfunctions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"deploymentArtifacts":{},"toscaArtifacts":{"assettoscacsar":{"timeout":0,"creationDate":1505737367755,"description":"TOSCA definition package of the asset","artifactName":"service-Demovlb-csar.csar","uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.assettoscacsar","artifactLabel":"assettoscacsar","artifactVersion":"0","artifactType":"TOSCA_CSAR","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Tosca Model","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"assettoscatemplate":{"timeout":0,"creationDate":1505737367755,"description":"TOSCA representation of the asset","artifactName":"service-Demovlb-template.yml","uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.assettoscatemplate","artifactLabel":"assettoscatemplate","artifactVersion":"0","artifactType":"TOSCA_TEMPLATE","artifactGroupType":"TOSCA","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Tosca Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"categories":[{"name":"Network L1-3","normalizedName":"network l1-3","uniqueId":"serviceNewCategory.network l1-3","icons":["network_l_1-3"]}],"componentInstancesRelations":[],"derivedFromGenericType":"org.openecomp.resource.abstract.nodes.service","derivedFromGenericVersion":"1.0","toscaType":"topology_template","serviceApiArtifacts":{"configuration":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.configuration","artifactLabel":"configuration","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Configuration","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"testing":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.testing","artifactLabel":"testing","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Testing","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"logging":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.logging","artifactLabel":"logging","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Logging","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"monitoring":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.monitoring","artifactLabel":"monitoring","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Monitoring","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"reporting":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.reporting","artifactLabel":"reporting","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Reporting","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"instantiation":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.instantiation","artifactLabel":"instantiation","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"SERVICE_API","mandatory":false,"serviceApi":true,"lastUpdateDate":1505737367755,"artifactDisplayName":"Instantiation","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"distributionStatus":"DISTRIBUTION_NOT_APPROVED","projectCode":"123456","ecompGeneratedNaming":true,"namingPolicy":"","serviceType":"","serviceRole":"","icon":"network_l_1-3","version":"0.1","creationDate":1505737367768,"description":"catalog service description","tags":["robot-ete","demoVLB"],"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30","lastUpdateDate":1505737367768,"normalizedName":"demovlb","invariantUUID":"b50d8856-56e6-42a6-b01c-4b280032c63f","componentType":"SERVICE","lifecycleState":"NOT_CERTIFIED_CHECKOUT","uuid":"f0ea33ae-9f00-4698-9437-924cda40689f","systemName":"Demovlb","lastUpdaterUserId":"cs0008","highestVersion":true,"creatorFullName":"Carlos Santana","allArtifacts":{"controlloopfunctions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.controlloopfunctions","artifactLabel":"controlloopfunctions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Control Loop Functions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"operationalpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.operationalpolicies","artifactLabel":"operationalpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Operational Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"certificationtestresults":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.certificationtestresults","artifactLabel":"certificationtestresults","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"TD Certification Test Results","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"deploymentvotingrecord":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.deploymentvotingrecord","artifactLabel":"deploymentvotingrecord","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Deployment Voting Record","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicequestionnaire":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicequestionnaire","artifactLabel":"servicequestionnaire","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Questionnaire","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"dimensioninginfo":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.dimensioninginfo","artifactLabel":"dimensioninginfo","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Dimensioning Info","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"affinityrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.affinityrules","artifactLabel":"affinityrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Affinity Rules","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"serviceartifactplan":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.serviceartifactplan","artifactLabel":"serviceartifactplan","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Artifact Plan","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicespecificpolicies":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicespecificpolicies","artifactLabel":"servicespecificpolicies","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service-specific Policies","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"servicesecuritytemplate":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.servicesecuritytemplate","artifactLabel":"servicesecuritytemplate","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Service Security Template","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"engineeringrules":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.engineeringrules","artifactLabel":"engineeringrules","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Engineering Rules (ERD)","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"distributioninstructions":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.distributioninstructions","artifactLabel":"distributioninstructions","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Distribution Instructions","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false},"summaryofimpactstoecompelements":{"timeout":0,"creationDate":1505737367755,"uniqueId":"639162c6-972b-472d-be26-8e3861e6cc30.summaryofimpactstoecompelements","artifactLabel":"summaryofimpactstoecompelements","artifactVersion":"0","artifactType":"OTHER","artifactGroupType":"INFORMATIONAL","mandatory":true,"serviceApi":false,"lastUpdateDate":1505737367755,"artifactDisplayName":"Summary of impacts to ECOMP elements,OSSs, BSSs","duplicated":false,"userIdCreator":"cs0008","userIdLastUpdater":"cs0008","creatorFullName":"Carlos Santana","updaterFullName":"Carlos Santana","generated":false}},"creatorUserId":"cs0008","contactId":"cs0008","conformanceLevel":"4.0","lastUpdaterFullName":"Carlos Santana","name":"demoVLB"}</msg>
<msg timestamp="20170918 12:23:42.924" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:42.924" starttime="20170918 12:23:42.922"></status>
</kw>
<msg timestamp="20170918 12:23:42.924" level="TRACE">Return: &lt;Response [201]&gt;</msg>
<msg timestamp="20170918 12:23:42.925" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:42.925" starttime="20170918 12:23:41.780"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20170918 12:23:42.925" level="TRACE">Arguments: [ 201 | '201' ]</msg>
<msg timestamp="20170918 12:23:42.926" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:42.926" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:42.926" starttime="20170918 12:23:42.925"></status>
</kw>
<msg timestamp="20170918 12:23:42.926" level="TRACE">Return: '639162c6-972b-472d-be26-8e3861e6cc30'</msg>
<msg timestamp="20170918 12:23:42.927" level="INFO">${catalog_service_id} = 639162c6-972b-472d-be26-8e3861e6cc30</msg>
<status status="PASS" endtime="20170918 12:23:42.927" starttime="20170918 12:23:41.767"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${catalog_resource_ids}</var>
</assign>
<msg timestamp="20170918 12:23:42.927" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:42.927" level="TRACE">Return: []</msg>
<msg timestamp="20170918 12:23:42.927" level="INFO">${catalog_resource_ids} = []</msg>
<status status="PASS" endtime="20170918 12:23:42.927" starttime="20170918 12:23:42.927"></status>
</kw>
<kw type="for" name="${zip} IN [ @{model_zip_path} ]">
<kw type="foritem" name="${zip} = robot/assets/asdc/temp/base_vlb.zip">
<kw name="Setup ASDC Catalog Resource" library="asdc_interface">
<doc>Creates all the steps a vf needs for an asdc catalog resource and returns the id</doc>
<arguments>
<arg>${zip}</arg>
</arguments>
<assign>
<var>${loop_catalog_resource_id}</var>
</assign>
<msg timestamp="20170918 12:23:42.929" level="TRACE">Arguments: [ ${model_zip_path}='robot/assets/asdc/temp/base_vlb.zip' ]</msg>
<kw name="Add ASDC License Model" library="asdc_interface">
<doc>Creates an asdc license model and returns its id</doc>
<assign>
<var>${license_model_id}</var>
</assign>
<msg timestamp="20170918 12:23:42.930" level="TRACE">Arguments: [  ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:42.930" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:42.930" level="TRACE">Return: UUID('aec7f621-7684-4da5-8914-08fe7b9d9baf')</msg>
<msg timestamp="20170918 12:23:42.930" level="INFO">${uuid} = aec7f621-7684-4da5-8914-08fe7b9d9baf</msg>
<status status="PASS" endtime="20170918 12:23:42.931" starttime="20170918 12:23:42.930"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:42.931" level="TRACE">Arguments: [ 'str("aec7f621-7684-4da5-8914-08fe7b9d9baf")[:23]' ]</msg>
<msg timestamp="20170918 12:23:42.931" level="TRACE">Return: b'aec7f621-7684-4da5-8914'</msg>
<msg timestamp="20170918 12:23:42.931" level="INFO">${shortened_uuid} = aec7f621-7684-4da5-8914</msg>
<status status="PASS" endtime="20170918 12:23:42.932" starttime="20170918 12:23:42.931"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>vendor_name=${shortened_uuid}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:42.932" level="TRACE">Arguments: [ 'vendor_name=${shortened_uuid}' ]</msg>
<msg timestamp="20170918 12:23:42.932" level="TRACE">Return: {'vendor_name': b'aec7f621-7684-4da5-8914'}</msg>
<msg timestamp="20170918 12:23:42.933" level="INFO">${map} = {u'vendor_name': 'aec7f621-7684-4da5-8914'}</msg>
<status status="PASS" endtime="20170918 12:23:42.933" starttime="20170918 12:23:42.932"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_LICENSE_MODEL_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:42.934" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/license_model.template' | ${arguments}={'vendor_name': b'aec7f621-7684-4da5-8914'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:42.934" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/license_model.template' ]</msg>
<msg timestamp="20170918 12:23:42.935" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/license_model.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/license_model.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:42.935" level="TRACE">Return: '{\n  "vendorName": "${vendor_name}",\n  "description": "vendor license model",\n  "iconRef": "icon"\n}'</msg>
<msg timestamp="20170918 12:23:42.935" level="INFO">${json} = {
  "vendorName": "${vendor_name}",
  "description": "vendor license model",
  "iconRef": "icon"
}</msg>
<status status="PASS" endtime="20170918 12:23:42.935" starttime="20170918 12:23:42.934"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:42.936" level="TRACE">Arguments: [ ${json}='{\n  "vendorName": "${vendor_name}",\n  "description": "vendor license model",\n  "iconRef": "icon"\n}' | ${arguments}={'vendor_name': b'aec7f621-7684-4da5-8914'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:42.937" level="TRACE">Arguments: [ '{\n  "vendorName": "${vendor_name}",\n  "description": "vendor license model",\n  "iconRef": "icon"\n}' | {'vendor_name': b'aec7f621-7684-4da5-8914'} ]</msg>
<msg timestamp="20170918 12:23:42.937" level="TRACE">Return: '{\n  "vendorName": "aec7f621-7684-4da5-8914",\n  "description": "vendor license model",\n  "iconRef": "icon"\n}'</msg>
<msg timestamp="20170918 12:23:42.937" level="INFO">${returned_string} = {
  "vendorName": "aec7f621-7684-4da5-8914",
  "description": "vendor license model",
  "iconRef": "icon"
}</msg>
<status status="PASS" endtime="20170918 12:23:42.937" starttime="20170918 12:23:42.936"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:42.938" level="TRACE">Arguments: [ '{\n  "vendorName": "aec7f621-7684-4da5-8914",\n  "description": "vendor license model",\n  "iconRef": "icon"\n}' ]</msg>
<msg timestamp="20170918 12:23:42.938" level="INFO">To JSON using : content={
  "vendorName": "aec7f621-7684-4da5-8914",
  "description": "vendor license model",
  "iconRef": "icon"
} </msg>
<msg timestamp="20170918 12:23:42.938" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:42.938" level="TRACE">Return: {'description': 'vendor license model', 'iconRef': 'icon', 'vendorName': 'aec7f621-7684-4da5-8914'}</msg>
<msg timestamp="20170918 12:23:42.938" level="INFO">${returned_json} = {u'iconRef': u'icon', u'vendorName': u'aec7f621-7684-4da5-8914', u'description': u'vendor license model'}</msg>
<status status="PASS" endtime="20170918 12:23:42.938" starttime="20170918 12:23:42.938"></status>
</kw>
<msg timestamp="20170918 12:23:42.939" level="TRACE">Return: {'description': 'vendor license model', 'iconRef': 'icon', 'vendorName': 'aec7f621-7684-4da5-8914'}</msg>
<msg timestamp="20170918 12:23:42.939" level="INFO">${returned_json} = {u'iconRef': u'icon', u'vendorName': u'aec7f621-7684-4da5-8914', u'description': u'vendor license model'}</msg>
<status status="PASS" endtime="20170918 12:23:42.939" starttime="20170918 12:23:42.935"></status>
</kw>
<msg timestamp="20170918 12:23:42.939" level="TRACE">Return: {'description': 'vendor license model', 'iconRef': 'icon', 'vendorName': 'aec7f621-7684-4da5-8914'}</msg>
<msg timestamp="20170918 12:23:42.939" level="INFO">${data} = {u'iconRef': u'icon', u'vendorName': u'aec7f621-7684-4da5-8914', u'description': u'vendor license model'}</msg>
<status status="PASS" endtime="20170918 12:23:42.939" starttime="20170918 12:23:42.933"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:42.940" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models' | ${data}={'description': 'vendor license model', 'iconRef': 'icon', 'vendorName': 'aec7f621-7684-4da5-8914'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:42.941" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:42.941" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:42.942" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:42.942" starttime="20170918 12:23:42.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:42.942" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:42.942" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:42.942" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:42.943" starttime="20170918 12:23:42.942"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:42.943" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:42.943" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707aedc90&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:42.944" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:42.944" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:42.944" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707aedb90&gt;</msg>
<msg timestamp="20170918 12:23:42.944" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707aedb90&gt;</msg>
<status status="PASS" endtime="20170918 12:23:42.944" starttime="20170918 12:23:42.943"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:42.945" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:42.945" level="TRACE">Return: UUID('6725e6ec-c756-4783-96af-8581a9a05070')</msg>
<msg timestamp="20170918 12:23:42.945" level="INFO">${uuid} = 6725e6ec-c756-4783-96af-8581a9a05070</msg>
<status status="PASS" endtime="20170918 12:23:42.945" starttime="20170918 12:23:42.945"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:42.946" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:42.947" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-6725e6ec-c756-4783-96af-8581a9a05070'}</msg>
<msg timestamp="20170918 12:23:42.947" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-6725e6ec-c756-4783-96af-8581a9a05070', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:42.947" starttime="20170918 12:23:42.946"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:42.948" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models' | data={'description': 'vendor license model', 'iconRef': 'icon', 'vendorName': 'aec7f621-7684-4da5-8914'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-6725e6ec-c756-4783-96af-8581a9a05070'} ]</msg>
<msg timestamp="20170918 12:23:42.950" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:42.969" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-license-models HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:42.970" level="DEBUG">post response: {"value":"3c40753304454266a51ba7647f9983ae"}</msg>
<msg timestamp="20170918 12:23:42.970" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models, data={"iconRef": "icon", "vendorName": "aec7f621-7684-4da5-8914", "description": "vendor license model"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-6725e6ec-c756-4783-96af-8581a9a05070', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:42.970" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:42.970" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:42.970" starttime="20170918 12:23:42.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:42.971" level="TRACE">Arguments: [ 'Received response from asdc {"value":"3c40753304454266a51ba7647f9983ae"}' ]</msg>
<msg timestamp="20170918 12:23:42.971" level="INFO">Received response from asdc {"value":"3c40753304454266a51ba7647f9983ae"}</msg>
<msg timestamp="20170918 12:23:42.971" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:42.971" starttime="20170918 12:23:42.971"></status>
</kw>
<msg timestamp="20170918 12:23:42.972" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:42.972" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:42.972" starttime="20170918 12:23:42.940"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:42.972" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:42.973" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:42.973" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:42.973" starttime="20170918 12:23:42.972"></status>
</kw>
<msg timestamp="20170918 12:23:42.973" level="TRACE">Return: '3c40753304454266a51ba7647f9983ae'</msg>
<msg timestamp="20170918 12:23:42.973" level="INFO">${license_model_id} = 3c40753304454266a51ba7647f9983ae</msg>
<status status="PASS" endtime="20170918 12:23:42.973" starttime="20170918 12:23:42.929"></status>
</kw>
<kw name="Add ASDC License Group" library="asdc_interface">
<doc>Creates an asdc license group and returns its id</doc>
<arguments>
<arg>${license_model_id}</arg>
</arguments>
<assign>
<var>${key_group_id}</var>
</assign>
<msg timestamp="20170918 12:23:42.974" level="TRACE">Arguments: [ ${license_model_id}='3c40753304454266a51ba7647f9983ae' | ${version_id}='0.1' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:42.975" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:42.975" level="TRACE">Return: UUID('8b9bf521-5032-4725-a702-a32c28f6631a')</msg>
<msg timestamp="20170918 12:23:42.975" level="INFO">${uuid} = 8b9bf521-5032-4725-a702-a32c28f6631a</msg>
<status status="PASS" endtime="20170918 12:23:42.975" starttime="20170918 12:23:42.975"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:42.976" level="TRACE">Arguments: [ 'str("8b9bf521-5032-4725-a702-a32c28f6631a")[:23]' ]</msg>
<msg timestamp="20170918 12:23:42.976" level="TRACE">Return: b'8b9bf521-5032-4725-a702'</msg>
<msg timestamp="20170918 12:23:42.976" level="INFO">${shortened_uuid} = 8b9bf521-5032-4725-a702</msg>
<status status="PASS" endtime="20170918 12:23:42.976" starttime="20170918 12:23:42.976"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>key_group_name=${shortened_uuid}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:42.977" level="TRACE">Arguments: [ 'key_group_name=${shortened_uuid}' ]</msg>
<msg timestamp="20170918 12:23:42.977" level="TRACE">Return: {'key_group_name': b'8b9bf521-5032-4725-a702'}</msg>
<msg timestamp="20170918 12:23:42.977" level="INFO">${map} = {u'key_group_name': '8b9bf521-5032-4725-a702'}</msg>
<status status="PASS" endtime="20170918 12:23:42.977" starttime="20170918 12:23:42.977"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_KEY_GROUP_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:42.978" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/key_group.template' | ${arguments}={'key_group_name': b'8b9bf521-5032-4725-a702'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:42.979" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/key_group.template' ]</msg>
<msg timestamp="20170918 12:23:42.979" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/key_group.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/key_group.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:42.979" level="TRACE">Return: '{\n  "name": "${key_group_name}",\n  "description": "vendor license key group",\n  "operationalScope": {\n    "choices": [\n      "Tenant"\n    ],\n    "other": ""\n  },\n  "type": "Universal"\n}'</msg>
<msg timestamp="20170918 12:23:42.980" level="INFO">${json} = {
  "name": "${key_group_name}",
  "description": "vendor license key group",
  "operationalScope": {
    "choices": [
      "Tenant"
    ],
    "other": ""
  },
  "type": "Universal"
}</msg>
<status status="PASS" endtime="20170918 12:23:42.980" starttime="20170918 12:23:42.979"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:42.980" level="TRACE">Arguments: [ ${json}='{\n  "name": "${key_group_name}",\n  "description": "vendor license key group",\n  "operationalScope": {\n    "choices": [\n      "Tenant"\n    ],\n    "other": ""\n  },\n  "type": "Universal"\n}' | ${arguments}={'key_group_name': b'8b9bf521-5032-4725-a702'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:42.981" level="TRACE">Arguments: [ '{\n  "name": "${key_group_name}",\n  "description": "vendor license key group",\n  "operationalScope": {\n    "choices": [\n      "Tenant"\n    ],\n    "other": ""\n  },\n  "type": "Universal"\n}' | {'key_group_name': b'8b9bf521-5032-4725-a702'} ]</msg>
<msg timestamp="20170918 12:23:42.982" level="TRACE">Return: '{\n  "name": "8b9bf521-5032-4725-a702",\n  "description": "vendor license key group",\n  "operationalScope": {\n    "choices": [\n      "Tenant"\n    ],\n    "other": ""\n  },\n  "type": "Universal"\n}'</msg>
<msg timestamp="20170918 12:23:42.982" level="INFO">${returned_string} = {
  "name": "8b9bf521-5032-4725-a702",
  "description": "vendor license key group",
  "operationalScope": {
    "choices": [
      "Tenant"
    ],
    "other": ""
  },
  "type": "Universal"
}</msg>
<status status="PASS" endtime="20170918 12:23:42.982" starttime="20170918 12:23:42.981"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:42.982" level="TRACE">Arguments: [ '{\n  "name": "8b9bf521-5032-4725-a702",\n  "description": "vendor license key group",\n  "operationalScope": {\n    "choices": [\n      "Tenant"\n    ],\n    "other": ""\n  },\n  "type": "Universal"\n}' ]</msg>
<msg timestamp="20170918 12:23:42.983" level="INFO">To JSON using : content={
  "name": "8b9bf521-5032-4725-a702",
  "description": "vendor license key group",
  "operationalScope": {
    "choices": [
      "Tenant"
    ],
    "other": ""
  },
  "type": "Universal"
} </msg>
<msg timestamp="20170918 12:23:42.983" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:42.983" level="TRACE">Return: {'description': 'vendor license key group', 'name': '8b9bf521-5032-4725-a702', 'operationalScope': {'choices': ['Tenant'], 'other': ''}, 'type': 'Universal'}</msg>
<msg timestamp="20170918 12:23:42.983" level="INFO">${returned_json} = {u'operationalScope': {u'other': u'', u'choices': [u'Tenant']}, u'type': u'Universal', u'name': u'8b9bf521-5032-4725-a702', u'description': u'vendor license key group'}</msg>
<status status="PASS" endtime="20170918 12:23:42.983" starttime="20170918 12:23:42.982"></status>
</kw>
<msg timestamp="20170918 12:23:42.983" level="TRACE">Return: {'description': 'vendor license key group', 'name': '8b9bf521-5032-4725-a702', 'operationalScope': {'choices': ['Tenant'], 'other': ''}, 'type': 'Universal'}</msg>
<msg timestamp="20170918 12:23:42.984" level="INFO">${returned_json} = {u'operationalScope': {u'other': u'', u'choices': [u'Tenant']}, u'type': u'Universal', u'name': u'8b9bf521-5032-4725-a702', u'description': u'vendor license key group'}</msg>
<status status="PASS" endtime="20170918 12:23:42.984" starttime="20170918 12:23:42.980"></status>
</kw>
<msg timestamp="20170918 12:23:42.984" level="TRACE">Return: {'description': 'vendor license key group', 'name': '8b9bf521-5032-4725-a702', 'operationalScope': {'choices': ['Tenant'], 'other': ''}, 'type': 'Universal'}</msg>
<msg timestamp="20170918 12:23:42.984" level="INFO">${data} = {u'operationalScope': {u'other': u'', u'choices': [u'Tenant']}, u'type': u'Universal', u'name': u'8b9bf521-5032-4725-a702', u'description': u'vendor license key group'}</msg>
<status status="PASS" endtime="20170918 12:23:42.984" starttime="20170918 12:23:42.978"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${license_model_id}/versions/${version_id}${ASDC_VENDOR_KEY_GROUP_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:42.986" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/license-key-groups' | ${data}={'description': 'vendor license key group', 'name': '8b9bf521-5032-4725-a702', 'operationalScope': {'choices': ['Tenant'], 'other': ''}, 'type': 'Universal'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:42.987" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:42.987" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:42.987" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:42.987" starttime="20170918 12:23:42.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:42.988" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:42.988" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:42.988" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:42.988" starttime="20170918 12:23:42.987"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:42.989" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:42.989" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707ad5210&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:42.989" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:42.989" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:42.989" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707ad5150&gt;</msg>
<msg timestamp="20170918 12:23:42.990" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707ad5150&gt;</msg>
<status status="PASS" endtime="20170918 12:23:42.990" starttime="20170918 12:23:42.988"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:42.990" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:42.990" level="TRACE">Return: UUID('82795d45-c5ce-4af4-a4c0-3722c7951175')</msg>
<msg timestamp="20170918 12:23:42.990" level="INFO">${uuid} = 82795d45-c5ce-4af4-a4c0-3722c7951175</msg>
<status status="PASS" endtime="20170918 12:23:42.991" starttime="20170918 12:23:42.990"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:42.991" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:42.992" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-82795d45-c5ce-4af4-a4c0-3722c7951175'}</msg>
<msg timestamp="20170918 12:23:42.992" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-82795d45-c5ce-4af4-a4c0-3722c7951175', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:42.992" starttime="20170918 12:23:42.991"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:42.993" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/license-key-groups' | data={'description': 'vendor license key group', 'name': '8b9bf521-5032-4725-a702', 'operationalScope': {'choices': ['Tenant'], 'other': ''}, 'type': 'Universal'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-82795d45-c5ce-4af4-a4c0-3722c7951175'} ]</msg>
<msg timestamp="20170918 12:23:42.995" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:43.036" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/license-key-groups HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:43.036" level="DEBUG">post response: {"value":"893cde99ba184cfd91637ca5f608fbdd"}</msg>
<msg timestamp="20170918 12:23:43.036" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/license-key-groups, data={"operationalScope": {"other": "", "choices": ["Tenant"]}, "type": "Universal", "name": "8b9bf521-5032-4725-a702", "description": "vendor license key group"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-82795d45-c5ce-4af4-a4c0-3722c7951175', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:43.036" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.037" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.037" starttime="20170918 12:23:42.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.038" level="TRACE">Arguments: [ 'Received response from asdc {"value":"893cde99ba184cfd91637ca5f608fbdd"}' ]</msg>
<msg timestamp="20170918 12:23:43.038" level="INFO">Received response from asdc {"value":"893cde99ba184cfd91637ca5f608fbdd"}</msg>
<msg timestamp="20170918 12:23:43.038" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.038" starttime="20170918 12:23:43.037"></status>
</kw>
<msg timestamp="20170918 12:23:43.038" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.038" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.038" starttime="20170918 12:23:42.985"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:43.039" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:43.039" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:43.039" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.039" starttime="20170918 12:23:43.039"></status>
</kw>
<msg timestamp="20170918 12:23:43.040" level="TRACE">Return: '893cde99ba184cfd91637ca5f608fbdd'</msg>
<msg timestamp="20170918 12:23:43.040" level="INFO">${key_group_id} = 893cde99ba184cfd91637ca5f608fbdd</msg>
<status status="PASS" endtime="20170918 12:23:43.040" starttime="20170918 12:23:42.974"></status>
</kw>
<kw name="Add ASDC Entitlement Pool" library="asdc_interface">
<doc>Creates an asdc Entitlement Pool and returns its id</doc>
<arguments>
<arg>${license_model_id}</arg>
</arguments>
<assign>
<var>${pool_id}</var>
</assign>
<msg timestamp="20170918 12:23:43.041" level="TRACE">Arguments: [ ${license_model_id}='3c40753304454266a51ba7647f9983ae' | ${version_id}='0.1' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.041" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:43.042" level="TRACE">Return: UUID('fd36b981-a7a0-49cb-b7af-76976d5cc545')</msg>
<msg timestamp="20170918 12:23:43.042" level="INFO">${uuid} = fd36b981-a7a0-49cb-b7af-76976d5cc545</msg>
<status status="PASS" endtime="20170918 12:23:43.042" starttime="20170918 12:23:43.041"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.042" level="TRACE">Arguments: [ 'str("fd36b981-a7a0-49cb-b7af-76976d5cc545")[:23]' ]</msg>
<msg timestamp="20170918 12:23:43.043" level="TRACE">Return: b'fd36b981-a7a0-49cb-b7af'</msg>
<msg timestamp="20170918 12:23:43.043" level="INFO">${shortened_uuid} = fd36b981-a7a0-49cb-b7af</msg>
<status status="PASS" endtime="20170918 12:23:43.043" starttime="20170918 12:23:43.042"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>entitlement_pool_name=${shortened_uuid}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:43.043" level="TRACE">Arguments: [ 'entitlement_pool_name=${shortened_uuid}' ]</msg>
<msg timestamp="20170918 12:23:43.044" level="TRACE">Return: {'entitlement_pool_name': b'fd36b981-a7a0-49cb-b7af'}</msg>
<msg timestamp="20170918 12:23:43.044" level="INFO">${map} = {u'entitlement_pool_name': 'fd36b981-a7a0-49cb-b7af'}</msg>
<status status="PASS" endtime="20170918 12:23:43.044" starttime="20170918 12:23:43.043"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_ENTITLEMENT_POOL_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:43.045" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/entitlement_pool.template' | ${arguments}={'entitlement_pool_name': b'fd36b981-a7a0-49cb-b7af'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:43.046" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/entitlement_pool.template' ]</msg>
<msg timestamp="20170918 12:23:43.046" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/entitlement_pool.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/entitlement_pool.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:43.046" level="TRACE">Return: '{\n  "name": "${entitlement_pool_name}",\n  "description": "vendor entitlement pool",\n  "thresholdValue": "99",\n  "thresholdUnits": "Absolute",\n  "entitlementMetric": {\n    "choice": "CPU",\n    "other": ""\n  },\n  "increments": "robot",\n  "aggregationFunction": {\n    "choice": "Peak",\n    "other": ""\n  },\n  "operationalScope": {\n    "choices": [\n      "Availability_Zone"\n    ],\n    "other": ""\n  },\n  "time": {\n    "choice": "Hour",\n    "other": ""\n  },\n  "manufacturerReferenceNumber": "robot12345"\n}'</msg>
<msg timestamp="20170918 12:23:43.046" level="INFO">${json} = {
  "name": "${entitlement_pool_name}",
  "description": "vendor entitlement pool",
  "thresholdValue": "99",
  "thresholdUnits": "Absolute",
  "entitlementMetric": {
    "choice": "CPU",
    "other":...</msg>
<status status="PASS" endtime="20170918 12:23:43.046" starttime="20170918 12:23:43.045"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.047" level="TRACE">Arguments: [ ${json}='{\n  "name": "${entitlement_pool_name}",\n  "description": "vendor entitlement pool",\n  "thresholdValue": "99",\n  "thresholdUnits": "Absolute",\n  "entitlementMetric": {\n    "choice": "CPU",\n    "other": ""\n  },\n  "increments": "robot",\n  "aggregationFunction": {\n    "choice": "Peak",\n    "other": ""\n  },\n  "operationalScope": {\n    "choices": [\n      "Availability_Zone"\n    ],\n    "other": ""\n  },\n  "time": {\n    "choice": "Hour",\n    "other": ""\n  },\n  "manufacturerReferenceNumber": "robot12345"\n}' | ${arguments}={'entitlement_pool_name': b'fd36b981-a7a0-49cb-b7af'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:43.048" level="TRACE">Arguments: [ '{\n  "name": "${entitlement_pool_name}",\n  "description": "vendor entitlement pool",\n  "thresholdValue": "99",\n  "thresholdUnits": "Absolute",\n  "entitlementMetric": {\n    "choice": "CPU",\n    "other": ""\n  },\n  "increments": "robot",\n  "aggregationFunction": {\n    "choice": "Peak",\n    "other": ""\n  },\n  "operationalScope": {\n    "choices": [\n      "Availability_Zone"\n    ],\n    "other": ""\n  },\n  "time": {\n    "choice": "Hour",\n    "other": ""\n  },\n  "manufacturerReferenceNumber": "robot12345"\n}' | {'entitlement_pool_name': b'fd36b981-a7a0-49cb-b7af'} ]</msg>
<msg timestamp="20170918 12:23:43.048" level="TRACE">Return: '{\n  "name": "fd36b981-a7a0-49cb-b7af",\n  "description": "vendor entitlement pool",\n  "thresholdValue": "99",\n  "thresholdUnits": "Absolute",\n  "entitlementMetric": {\n    "choice": "CPU",\n    "other": ""\n  },\n  "increments": "robot",\n  "aggregationFunction": {\n    "choice": "Peak",\n    "other": ""\n  },\n  "operationalScope": {\n    "choices": [\n      "Availability_Zone"\n    ],\n    "other": ""\n  },\n  "time": {\n    "choice": "Hour",\n    "other": ""\n  },\n  "manufacturerReferenceNumber": "robot12345"\n}'</msg>
<msg timestamp="20170918 12:23:43.048" level="INFO">${returned_string} = {
  "name": "fd36b981-a7a0-49cb-b7af",
  "description": "vendor entitlement pool",
  "thresholdValue": "99",
  "thresholdUnits": "Absolute",
  "entitlementMetric": {
    "choice": "CPU",
    "other": ...</msg>
<status status="PASS" endtime="20170918 12:23:43.048" starttime="20170918 12:23:43.048"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.049" level="TRACE">Arguments: [ '{\n  "name": "fd36b981-a7a0-49cb-b7af",\n  "description": "vendor entitlement pool",\n  "thresholdValue": "99",\n  "thresholdUnits": "Absolute",\n  "entitlementMetric": {\n    "choice": "CPU",\n    "other": ""\n  },\n  "increments": "robot",\n  "aggregationFunction": {\n    "choice": "Peak",\n    "other": ""\n  },\n  "operationalScope": {\n    "choices": [\n      "Availability_Zone"\n    ],\n    "other": ""\n  },\n  "time": {\n    "choice": "Hour",\n    "other": ""\n  },\n  "manufacturerReferenceNumber": "robot12345"\n}' ]</msg>
<msg timestamp="20170918 12:23:43.049" level="INFO">To JSON using : content={
  "name": "fd36b981-a7a0-49cb-b7af",
  "description": "vendor entitlement pool",
  "thresholdValue": "99",
  "thresholdUnits": "Absolute",
  "entitlementMetric": {
    "choice": "CPU",
    "other": ""
  },
  "increments": "robot",
  "aggregationFunction": {
    "choice": "Peak",
    "other": ""
  },
  "operationalScope": {
    "choices": [
      "Availability_Zone"
    ],
    "other": ""
  },
  "time": {
    "choice": "Hour",
    "other": ""
  },
  "manufacturerReferenceNumber": "robot12345"
} </msg>
<msg timestamp="20170918 12:23:43.049" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:43.049" level="TRACE">Return: {'aggregationFunction': {'choice': 'Peak', 'other': ''},
 'description': 'vendor entitlement pool',
 'entitlementMetric': {'choice': 'CPU', 'other': ''},
 'increments': 'robot',
 'manufacturerReferenceNumber': 'robot12345',
 'name': 'fd36b981-a7a0-49cb-b7af',
 'operationalScope': {'choices': ['Availability_Zone'], 'other': ''},
 'thresholdUnits': 'Absolute',
 'thresholdValue': '99',
 'time': {'choice': 'Hour', 'other': ''}}</msg>
<msg timestamp="20170918 12:23:43.050" level="INFO">${returned_json} = {u'aggregationFunction': {u'other': u'', u'choice': u'Peak'}, u'increments': u'robot', u'name': u'fd36b981-a7a0-49cb-b7af', u'entitlementMetric': {u'other': u'', u'choice': u'CPU'}, u'manufacturerRefe...</msg>
<status status="PASS" endtime="20170918 12:23:43.050" starttime="20170918 12:23:43.049"></status>
</kw>
<msg timestamp="20170918 12:23:43.050" level="TRACE">Return: {'aggregationFunction': {'choice': 'Peak', 'other': ''},
 'description': 'vendor entitlement pool',
 'entitlementMetric': {'choice': 'CPU', 'other': ''},
 'increments': 'robot',
 'manufacturerReferenceNumber': 'robot12345',
 'name': 'fd36b981-a7a0-49cb-b7af',
 'operationalScope': {'choices': ['Availability_Zone'], 'other': ''},
 'thresholdUnits': 'Absolute',
 'thresholdValue': '99',
 'time': {'choice': 'Hour', 'other': ''}}</msg>
<msg timestamp="20170918 12:23:43.051" level="INFO">${returned_json} = {u'aggregationFunction': {u'other': u'', u'choice': u'Peak'}, u'increments': u'robot', u'name': u'fd36b981-a7a0-49cb-b7af', u'entitlementMetric': {u'other': u'', u'choice': u'CPU'}, u'manufacturerRefe...</msg>
<status status="PASS" endtime="20170918 12:23:43.051" starttime="20170918 12:23:43.047"></status>
</kw>
<msg timestamp="20170918 12:23:43.051" level="TRACE">Return: {'aggregationFunction': {'choice': 'Peak', 'other': ''},
 'description': 'vendor entitlement pool',
 'entitlementMetric': {'choice': 'CPU', 'other': ''},
 'increments': 'robot',
 'manufacturerReferenceNumber': 'robot12345',
 'name': 'fd36b981-a7a0-49cb-b7af',
 'operationalScope': {'choices': ['Availability_Zone'], 'other': ''},
 'thresholdUnits': 'Absolute',
 'thresholdValue': '99',
 'time': {'choice': 'Hour', 'other': ''}}</msg>
<msg timestamp="20170918 12:23:43.052" level="INFO">${data} = {u'aggregationFunction': {u'other': u'', u'choice': u'Peak'}, u'increments': u'robot', u'name': u'fd36b981-a7a0-49cb-b7af', u'entitlementMetric': {u'other': u'', u'choice': u'CPU'}, u'manufacturerRefe...</msg>
<status status="PASS" endtime="20170918 12:23:43.052" starttime="20170918 12:23:43.044"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${license_model_id}/versions/${version_id}${ASDC_VENDOR_ENTITLEMENT_POOL_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.053" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/entitlement-pools' | ${data}={'aggregationFunction': {'choice': 'Peak', 'other': ''},
 'description': 'vendor entitlement pool',
 'entitlementMetric': {'choice': 'CPU', 'other': ''},
 'increments': 'robot',
 'manufacturerReferenceNumber': 'robot12345',
 'name': 'fd36b981-a7a0-49cb-b7af',
 'operationalScope': {'choices': ['Availability_Zone'], 'other': ''},
 'thresholdUnits': 'Absolute',
 'thresholdValue': '99',
 'time': {'choice': 'Hour', 'other': ''}} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:43.054" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:43.054" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:43.054" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:43.054" starttime="20170918 12:23:43.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.055" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:43.055" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:43.055" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.055" starttime="20170918 12:23:43.055"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:43.056" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:43.056" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707acb950&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:43.056" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:43.057" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:43.057" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707acbb50&gt;</msg>
<msg timestamp="20170918 12:23:43.057" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707acbb50&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.057" starttime="20170918 12:23:43.056"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.058" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:43.058" level="TRACE">Return: UUID('0c740071-9f87-4f3f-8ffa-b7de7184ee55')</msg>
<msg timestamp="20170918 12:23:43.058" level="INFO">${uuid} = 0c740071-9f87-4f3f-8ffa-b7de7184ee55</msg>
<status status="PASS" endtime="20170918 12:23:43.058" starttime="20170918 12:23:43.057"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:43.059" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:43.059" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-0c740071-9f87-4f3f-8ffa-b7de7184ee55'}</msg>
<msg timestamp="20170918 12:23:43.059" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-0c740071-9f87-4f3f-8ffa-b7de7184ee55', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:43.060" starttime="20170918 12:23:43.058"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.060" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/entitlement-pools' | data={'aggregationFunction': {'choice': 'Peak', 'other': ''},
 'description': 'vendor entitlement pool',
 'entitlementMetric': {'choice': 'CPU', 'other': ''},
 'increments': 'robot',
 'manufacturerReferenceNumber': 'robot12345',
 'name': 'fd36b981-a7a0-49cb-b7af',
 'operationalScope': {'choices': ['Availability_Zone'], 'other': ''},
 'thresholdUnits': 'Absolute',
 'thresholdValue': '99',
 'time': {'choice': 'Hour', 'other': ''}} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-0c740071-9f87-4f3f-8ffa-b7de7184ee55'} ]</msg>
<msg timestamp="20170918 12:23:43.062" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:43.102" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/entitlement-pools HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:43.103" level="DEBUG">post response: {"value":"8104c966cebc45b1a2d2ef239b3900cd"}</msg>
<msg timestamp="20170918 12:23:43.103" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/entitlement-pools, data={"aggregationFunction": {"other": "", "choice": "Peak"}, "increments": "robot", "name": "fd36b981-a7a0-49cb-b7af", "entitlementMetric": {"other": "", "choice": "CPU"}, "manufacturerReferenceNumber": "robot12345", "thresholdUnits": "Absolute", "time": {"other": "", "choice": "Hour"}, "operationalScope": {"other": "", "choices": ["Availability_Zone"]}, "thresholdValue": "99", "description": "vendor entitlement pool"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-0c740071-9f87-4f3f-8ffa-b7de7184ee55', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:43.103" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.103" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.103" starttime="20170918 12:23:43.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.104" level="TRACE">Arguments: [ 'Received response from asdc {"value":"8104c966cebc45b1a2d2ef239b3900cd"}' ]</msg>
<msg timestamp="20170918 12:23:43.104" level="INFO">Received response from asdc {"value":"8104c966cebc45b1a2d2ef239b3900cd"}</msg>
<msg timestamp="20170918 12:23:43.104" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.105" starttime="20170918 12:23:43.104"></status>
</kw>
<msg timestamp="20170918 12:23:43.105" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.105" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.105" starttime="20170918 12:23:43.052"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:43.106" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:43.106" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:43.106" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.106" starttime="20170918 12:23:43.105"></status>
</kw>
<msg timestamp="20170918 12:23:43.106" level="TRACE">Return: '8104c966cebc45b1a2d2ef239b3900cd'</msg>
<msg timestamp="20170918 12:23:43.107" level="INFO">${pool_id} = 8104c966cebc45b1a2d2ef239b3900cd</msg>
<status status="PASS" endtime="20170918 12:23:43.107" starttime="20170918 12:23:43.040"></status>
</kw>
<kw name="Add ASDC Feature Group" library="asdc_interface">
<doc>Creates an asdc Feature Group and returns its id</doc>
<arguments>
<arg>${license_model_id}</arg>
<arg>${key_group_id}</arg>
<arg>${pool_id}</arg>
</arguments>
<assign>
<var>${feature_group_id}</var>
</assign>
<msg timestamp="20170918 12:23:43.108" level="TRACE">Arguments: [ ${license_model_id}='3c40753304454266a51ba7647f9983ae' | ${key_group_id}='893cde99ba184cfd91637ca5f608fbdd' | ${entitlement_pool_id}='8104c966cebc45b1a2d2ef239b3900cd' | ${version_id}='0.1' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.108" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:43.109" level="TRACE">Return: UUID('bd22b878-1a4b-4613-81de-01700c1b7355')</msg>
<msg timestamp="20170918 12:23:43.109" level="INFO">${uuid} = bd22b878-1a4b-4613-81de-01700c1b7355</msg>
<status status="PASS" endtime="20170918 12:23:43.109" starttime="20170918 12:23:43.108"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.109" level="TRACE">Arguments: [ 'str("bd22b878-1a4b-4613-81de-01700c1b7355")[:23]' ]</msg>
<msg timestamp="20170918 12:23:43.110" level="TRACE">Return: b'bd22b878-1a4b-4613-81de'</msg>
<msg timestamp="20170918 12:23:43.110" level="INFO">${shortened_uuid} = bd22b878-1a4b-4613-81de</msg>
<status status="PASS" endtime="20170918 12:23:43.110" starttime="20170918 12:23:43.109"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>feature_group_name=${shortened_uuid}</arg>
<arg>key_group_id=${key_group_id}</arg>
<arg>entitlement_pool_id=${entitlement_pool_id}</arg>
<arg>manufacturer_reference_number=mrn${shortened_uuid}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:43.110" level="TRACE">Arguments: [ 'feature_group_name=${shortened_uuid}' | 'key_group_id=${key_group_id}' | 'entitlement_pool_id=${entitlement_pool_id}' | 'manufacturer_reference_number=mrn${shortened_uuid}' ]</msg>
<msg timestamp="20170918 12:23:43.111" level="TRACE">Return: {'entitlement_pool_id': '8104c966cebc45b1a2d2ef239b3900cd', 'feature_group_name': b'bd22b878-1a4b-4613-81de', 'key_group_id': '893cde99ba184cfd91637ca5f608fbdd', 'manufacturer_reference_number': 'mrnbd22b878-1a4b-4613-81de'}</msg>
<msg timestamp="20170918 12:23:43.111" level="INFO">${map} = {u'feature_group_name': 'bd22b878-1a4b-4613-81de', u'key_group_id': u'893cde99ba184cfd91637ca5f608fbdd', u'entitlement_pool_id': u'8104c966cebc45b1a2d2ef239b3900cd', u'manufacturer_reference_number': ...</msg>
<status status="PASS" endtime="20170918 12:23:43.111" starttime="20170918 12:23:43.110"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_FEATURE_GROUP_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:43.112" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/feature_group.template' | ${arguments}={'entitlement_pool_id': '8104c966cebc45b1a2d2ef239b3900cd', 'feature_group_name': b'bd22b878-1a4b-4613-81de', 'key_group_id': '893cde99ba184cfd91637ca5f608fbdd', 'manufacturer_reference_number': 'mrnbd22b878-1a4b-4613-81de'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:43.113" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/feature_group.template' ]</msg>
<msg timestamp="20170918 12:23:43.113" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/feature_group.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/feature_group.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:43.114" level="TRACE">Return: '{\n  "name": "${feature_group_name}",\n  "description": "vendor feature group",\n  "partNumber": "123abc456",\n  "addedLicenseKeyGroupsIds": [\n    "${key_group_id}"\n  ],\n  "addedEntitlementPoolsIds": [\n    "${entitlement_pool_id}"\n  ],\n  "manufacturerReferenceNumber" : "${manufacturer_reference_number}"\n}'</msg>
<msg timestamp="20170918 12:23:43.114" level="INFO">${json} = {
  "name": "${feature_group_name}",
  "description": "vendor feature group",
  "partNumber": "123abc456",
  "addedLicenseKeyGroupsIds": [
    "${key_group_id}"
  ],
  "addedEntitlementPoolsIds": [
  ...</msg>
<status status="PASS" endtime="20170918 12:23:43.114" starttime="20170918 12:23:43.113"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.115" level="TRACE">Arguments: [ ${json}='{\n  "name": "${feature_group_name}",\n  "description": "vendor feature group",\n  "partNumber": "123abc456",\n  "addedLicenseKeyGroupsIds": [\n    "${key_group_id}"\n  ],\n  "addedEntitlementPoolsIds": [\n    "${entitlement_pool_id}"\n  ],\n  "manufacturerReferenceNumber" : "${manufacturer_reference_number}"\n}' | ${arguments}={'entitlement_pool_id': '8104c966cebc45b1a2d2ef239b3900cd', 'feature_group_name': b'bd22b878-1a4b-4613-81de', 'key_group_id': '893cde99ba184cfd91637ca5f608fbdd', 'manufacturer_reference_number': 'mrnbd22b878-1a4b-4613-81de'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:43.115" level="TRACE">Arguments: [ '{\n  "name": "${feature_group_name}",\n  "description": "vendor feature group",\n  "partNumber": "123abc456",\n  "addedLicenseKeyGroupsIds": [\n    "${key_group_id}"\n  ],\n  "addedEntitlementPoolsIds": [\n    "${entitlement_pool_id}"\n  ],\n  "manufacturerReferenceNumber" : "${manufacturer_reference_number}"\n}' | {'entitlement_pool_id': '8104c966cebc45b1a2d2ef239b3900cd', 'feature_group_name': b'bd22b878-1a4b-4613-81de', 'key_group_id': '893cde99ba184cfd91637ca5f608fbdd', 'manufacturer_reference_number': 'mrnbd22b878-1a4b-4613-81de'} ]</msg>
<msg timestamp="20170918 12:23:43.116" level="TRACE">Return: '{\n  "name": "bd22b878-1a4b-4613-81de",\n  "description": "vendor feature group",\n  "partNumber": "123abc456",\n  "addedLicenseKeyGroupsIds": [\n    "893cde99ba184cfd91637ca5f608fbdd"\n  ],\n  "addedEntitlementPoolsIds": [\n    "8104c966cebc45b1a2d2ef239b3900cd"\n  ],\n  "manufacturerReferenceNumber" : "mrnbd22b878-1a4b-4613-81de"\n}'</msg>
<msg timestamp="20170918 12:23:43.116" level="INFO">${returned_string} = {
  "name": "bd22b878-1a4b-4613-81de",
  "description": "vendor feature group",
  "partNumber": "123abc456",
  "addedLicenseKeyGroupsIds": [
    "893cde99ba184cfd91637ca5f608fbdd"
  ],
  "addedEntitle...</msg>
<status status="PASS" endtime="20170918 12:23:43.116" starttime="20170918 12:23:43.115"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.117" level="TRACE">Arguments: [ '{\n  "name": "bd22b878-1a4b-4613-81de",\n  "description": "vendor feature group",\n  "partNumber": "123abc456",\n  "addedLicenseKeyGroupsIds": [\n    "893cde99ba184cfd91637ca5f608fbdd"\n  ],\n  "addedEntitlementPoolsIds": [\n    "8104c966cebc45b1a2d2ef239b3900cd"\n  ],\n  "manufacturerReferenceNumber" : "mrnbd22b878-1a4b-4613-81de"\n}' ]</msg>
<msg timestamp="20170918 12:23:43.117" level="INFO">To JSON using : content={
  "name": "bd22b878-1a4b-4613-81de",
  "description": "vendor feature group",
  "partNumber": "123abc456",
  "addedLicenseKeyGroupsIds": [
    "893cde99ba184cfd91637ca5f608fbdd"
  ],
  "addedEntitlementPoolsIds": [
    "8104c966cebc45b1a2d2ef239b3900cd"
  ],
  "manufacturerReferenceNumber" : "mrnbd22b878-1a4b-4613-81de"
} </msg>
<msg timestamp="20170918 12:23:43.117" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:43.117" level="TRACE">Return: {'addedEntitlementPoolsIds': ['8104c966cebc45b1a2d2ef239b3900cd'], 'addedLicenseKeyGroupsIds': ['893cde99ba184cfd91637ca5f608fbdd'], 'description': 'vendor feature group', 'manufacturerReferenceNumber': 'mrnbd22b878-1a4b-4613-81de', 'name': 'bd22b878-1a4b-4613-81de', 'partNumber': '123abc456'}</msg>
<msg timestamp="20170918 12:23:43.117" level="INFO">${returned_json} = {u'name': u'bd22b878-1a4b-4613-81de', u'addedLicenseKeyGroupsIds': [u'893cde99ba184cfd91637ca5f608fbdd'], u'addedEntitlementPoolsIds': [u'8104c966cebc45b1a2d2ef239b3900cd'], u'partNumber': u'123abc456...</msg>
<status status="PASS" endtime="20170918 12:23:43.117" starttime="20170918 12:23:43.116"></status>
</kw>
<msg timestamp="20170918 12:23:43.118" level="TRACE">Return: {'addedEntitlementPoolsIds': ['8104c966cebc45b1a2d2ef239b3900cd'], 'addedLicenseKeyGroupsIds': ['893cde99ba184cfd91637ca5f608fbdd'], 'description': 'vendor feature group', 'manufacturerReferenceNumber': 'mrnbd22b878-1a4b-4613-81de', 'name': 'bd22b878-1a4b-4613-81de', 'partNumber': '123abc456'}</msg>
<msg timestamp="20170918 12:23:43.118" level="INFO">${returned_json} = {u'name': u'bd22b878-1a4b-4613-81de', u'addedLicenseKeyGroupsIds': [u'893cde99ba184cfd91637ca5f608fbdd'], u'addedEntitlementPoolsIds': [u'8104c966cebc45b1a2d2ef239b3900cd'], u'partNumber': u'123abc456...</msg>
<status status="PASS" endtime="20170918 12:23:43.118" starttime="20170918 12:23:43.114"></status>
</kw>
<msg timestamp="20170918 12:23:43.118" level="TRACE">Return: {'addedEntitlementPoolsIds': ['8104c966cebc45b1a2d2ef239b3900cd'], 'addedLicenseKeyGroupsIds': ['893cde99ba184cfd91637ca5f608fbdd'], 'description': 'vendor feature group', 'manufacturerReferenceNumber': 'mrnbd22b878-1a4b-4613-81de', 'name': 'bd22b878-1a4b-4613-81de', 'partNumber': '123abc456'}</msg>
<msg timestamp="20170918 12:23:43.118" level="INFO">${data} = {u'name': u'bd22b878-1a4b-4613-81de', u'addedLicenseKeyGroupsIds': [u'893cde99ba184cfd91637ca5f608fbdd'], u'addedEntitlementPoolsIds': [u'8104c966cebc45b1a2d2ef239b3900cd'], u'partNumber': u'123abc456...</msg>
<status status="PASS" endtime="20170918 12:23:43.118" starttime="20170918 12:23:43.112"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${license_model_id}/versions/${version_id}${ASDC_VENDOR_FEATURE_GROUP_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.120" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/feature-groups' | ${data}={'addedEntitlementPoolsIds': ['8104c966cebc45b1a2d2ef239b3900cd'], 'addedLicenseKeyGroupsIds': ['893cde99ba184cfd91637ca5f608fbdd'], 'description': 'vendor feature group', 'manufacturerReferenceNumber': 'mrnbd22b878-1a4b-4613-81de', 'name': 'bd22b878-1a4b-4613-81de', 'partNumber': '123abc456'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:43.121" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:43.121" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:43.121" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:43.121" starttime="20170918 12:23:43.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.122" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:43.122" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:43.122" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.122" starttime="20170918 12:23:43.121"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:43.123" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:43.123" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa708727250&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:43.123" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:43.123" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:43.123" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa70b246bd0&gt;</msg>
<msg timestamp="20170918 12:23:43.124" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa70b246bd0&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.124" starttime="20170918 12:23:43.122"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.124" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:43.124" level="TRACE">Return: UUID('d9ac5919-ff19-4003-a1f9-a321848fd245')</msg>
<msg timestamp="20170918 12:23:43.125" level="INFO">${uuid} = d9ac5919-ff19-4003-a1f9-a321848fd245</msg>
<status status="PASS" endtime="20170918 12:23:43.125" starttime="20170918 12:23:43.124"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:43.125" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:43.126" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-d9ac5919-ff19-4003-a1f9-a321848fd245'}</msg>
<msg timestamp="20170918 12:23:43.126" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-d9ac5919-ff19-4003-a1f9-a321848fd245', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:43.126" starttime="20170918 12:23:43.125"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.127" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/feature-groups' | data={'addedEntitlementPoolsIds': ['8104c966cebc45b1a2d2ef239b3900cd'], 'addedLicenseKeyGroupsIds': ['893cde99ba184cfd91637ca5f608fbdd'], 'description': 'vendor feature group', 'manufacturerReferenceNumber': 'mrnbd22b878-1a4b-4613-81de', 'name': 'bd22b878-1a4b-4613-81de', 'partNumber': '123abc456'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-d9ac5919-ff19-4003-a1f9-a321848fd245'} ]</msg>
<msg timestamp="20170918 12:23:43.129" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:43.191" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/feature-groups HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:43.192" level="DEBUG">post response: {"value":"2f074681b70e4e7e844c917e2e7adab4"}</msg>
<msg timestamp="20170918 12:23:43.193" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/feature-groups, data={"name": "bd22b878-1a4b-4613-81de", "addedLicenseKeyGroupsIds": ["893cde99ba184cfd91637ca5f608fbdd"], "addedEntitlementPoolsIds": ["8104c966cebc45b1a2d2ef239b3900cd"], "partNumber": "123abc456", "manufacturerReferenceNumber": "mrnbd22b878-1a4b-4613-81de", "description": "vendor feature group"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-d9ac5919-ff19-4003-a1f9-a321848fd245', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:43.193" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.193" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.193" starttime="20170918 12:23:43.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.194" level="TRACE">Arguments: [ 'Received response from asdc {"value":"2f074681b70e4e7e844c917e2e7adab4"}' ]</msg>
<msg timestamp="20170918 12:23:43.194" level="INFO">Received response from asdc {"value":"2f074681b70e4e7e844c917e2e7adab4"}</msg>
<msg timestamp="20170918 12:23:43.194" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.194" starttime="20170918 12:23:43.193"></status>
</kw>
<msg timestamp="20170918 12:23:43.195" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.195" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.195" starttime="20170918 12:23:43.119"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:43.196" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:43.196" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:43.196" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.196" starttime="20170918 12:23:43.195"></status>
</kw>
<msg timestamp="20170918 12:23:43.196" level="TRACE">Return: '2f074681b70e4e7e844c917e2e7adab4'</msg>
<msg timestamp="20170918 12:23:43.197" level="INFO">${feature_group_id} = 2f074681b70e4e7e844c917e2e7adab4</msg>
<status status="PASS" endtime="20170918 12:23:43.197" starttime="20170918 12:23:43.107"></status>
</kw>
<kw name="Add ASDC License Agreement" library="asdc_interface">
<doc>Creates an asdc License Agreement and returns its id</doc>
<arguments>
<arg>${license_model_id}</arg>
<arg>${feature_group_id}</arg>
</arguments>
<assign>
<var>${license_agreement_id}</var>
</assign>
<msg timestamp="20170918 12:23:43.198" level="TRACE">Arguments: [ ${license_model_id}='3c40753304454266a51ba7647f9983ae' | ${feature_group_id}='2f074681b70e4e7e844c917e2e7adab4' | ${version_id}='0.1' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.199" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:43.199" level="TRACE">Return: UUID('c8ee35d8-60ce-4d88-b71c-7fd3a22025cb')</msg>
<msg timestamp="20170918 12:23:43.199" level="INFO">${uuid} = c8ee35d8-60ce-4d88-b71c-7fd3a22025cb</msg>
<status status="PASS" endtime="20170918 12:23:43.199" starttime="20170918 12:23:43.199"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.200" level="TRACE">Arguments: [ 'str("c8ee35d8-60ce-4d88-b71c-7fd3a22025cb")[:23]' ]</msg>
<msg timestamp="20170918 12:23:43.200" level="TRACE">Return: b'c8ee35d8-60ce-4d88-b71c'</msg>
<msg timestamp="20170918 12:23:43.200" level="INFO">${shortened_uuid} = c8ee35d8-60ce-4d88-b71c</msg>
<status status="PASS" endtime="20170918 12:23:43.200" starttime="20170918 12:23:43.200"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>license_agreement_name=${shortened_uuid}</arg>
<arg>feature_group_id=${feature_group_id}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:43.201" level="TRACE">Arguments: [ 'license_agreement_name=${shortened_uuid}' | 'feature_group_id=${feature_group_id}' ]</msg>
<msg timestamp="20170918 12:23:43.202" level="TRACE">Return: {'feature_group_id': '2f074681b70e4e7e844c917e2e7adab4', 'license_agreement_name': b'c8ee35d8-60ce-4d88-b71c'}</msg>
<msg timestamp="20170918 12:23:43.202" level="INFO">${map} = {u'license_agreement_name': 'c8ee35d8-60ce-4d88-b71c', u'feature_group_id': u'2f074681b70e4e7e844c917e2e7adab4'}</msg>
<status status="PASS" endtime="20170918 12:23:43.202" starttime="20170918 12:23:43.201"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_LICENSE_AGREEMENT_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:43.203" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/license_agreement.template' | ${arguments}={'feature_group_id': '2f074681b70e4e7e844c917e2e7adab4', 'license_agreement_name': b'c8ee35d8-60ce-4d88-b71c'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:43.204" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/license_agreement.template' ]</msg>
<msg timestamp="20170918 12:23:43.204" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/license_agreement.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/license_agreement.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:43.204" level="TRACE">Return: '{\n  "name": "${license_agreement_name}",\n  "description": "vendor license agreement",\n  "requirementsAndConstrains": "abcdef",\n  "licenseTerm": {\n    "choice": "Fixed_Term",\n    "other": ""\n  },\n  "addedFeatureGroupsIds": [\n    "${feature_group_id}"\n  ]\n}'</msg>
<msg timestamp="20170918 12:23:43.204" level="INFO">${json} = {
  "name": "${license_agreement_name}",
  "description": "vendor license agreement",
  "requirementsAndConstrains": "abcdef",
  "licenseTerm": {
    "choice": "Fixed_Term",
    "other": ""
  },
  "ad...</msg>
<status status="PASS" endtime="20170918 12:23:43.204" starttime="20170918 12:23:43.203"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.205" level="TRACE">Arguments: [ ${json}='{\n  "name": "${license_agreement_name}",\n  "description": "vendor license agreement",\n  "requirementsAndConstrains": "abcdef",\n  "licenseTerm": {\n    "choice": "Fixed_Term",\n    "other": ""\n  },\n  "addedFeatureGroupsIds": [\n    "${feature_group_id}"\n  ]\n}' | ${arguments}={'feature_group_id': '2f074681b70e4e7e844c917e2e7adab4', 'license_agreement_name': b'c8ee35d8-60ce-4d88-b71c'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:43.206" level="TRACE">Arguments: [ '{\n  "name": "${license_agreement_name}",\n  "description": "vendor license agreement",\n  "requirementsAndConstrains": "abcdef",\n  "licenseTerm": {\n    "choice": "Fixed_Term",\n    "other": ""\n  },\n  "addedFeatureGroupsIds": [\n    "${feature_group_id}"\n  ]\n}' | {'feature_group_id': '2f074681b70e4e7e844c917e2e7adab4', 'license_agreement_name': b'c8ee35d8-60ce-4d88-b71c'} ]</msg>
<msg timestamp="20170918 12:23:43.206" level="TRACE">Return: '{\n  "name": "c8ee35d8-60ce-4d88-b71c",\n  "description": "vendor license agreement",\n  "requirementsAndConstrains": "abcdef",\n  "licenseTerm": {\n    "choice": "Fixed_Term",\n    "other": ""\n  },\n  "addedFeatureGroupsIds": [\n    "2f074681b70e4e7e844c917e2e7adab4"\n  ]\n}'</msg>
<msg timestamp="20170918 12:23:43.206" level="INFO">${returned_string} = {
  "name": "c8ee35d8-60ce-4d88-b71c",
  "description": "vendor license agreement",
  "requirementsAndConstrains": "abcdef",
  "licenseTerm": {
    "choice": "Fixed_Term",
    "other": ""
  },
  "adde...</msg>
<status status="PASS" endtime="20170918 12:23:43.207" starttime="20170918 12:23:43.206"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.207" level="TRACE">Arguments: [ '{\n  "name": "c8ee35d8-60ce-4d88-b71c",\n  "description": "vendor license agreement",\n  "requirementsAndConstrains": "abcdef",\n  "licenseTerm": {\n    "choice": "Fixed_Term",\n    "other": ""\n  },\n  "addedFeatureGroupsIds": [\n    "2f074681b70e4e7e844c917e2e7adab4"\n  ]\n}' ]</msg>
<msg timestamp="20170918 12:23:43.207" level="INFO">To JSON using : content={
  "name": "c8ee35d8-60ce-4d88-b71c",
  "description": "vendor license agreement",
  "requirementsAndConstrains": "abcdef",
  "licenseTerm": {
    "choice": "Fixed_Term",
    "other": ""
  },
  "addedFeatureGroupsIds": [
    "2f074681b70e4e7e844c917e2e7adab4"
  ]
} </msg>
<msg timestamp="20170918 12:23:43.208" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:43.208" level="TRACE">Return: {'addedFeatureGroupsIds': ['2f074681b70e4e7e844c917e2e7adab4'], 'description': 'vendor license agreement', 'licenseTerm': {'choice': 'Fixed_Term', 'other': ''}, 'name': 'c8ee35d8-60ce-4d88-b71c', 'requirementsAndConstrains': 'abcdef'}</msg>
<msg timestamp="20170918 12:23:43.208" level="INFO">${returned_json} = {u'licenseTerm': {u'other': u'', u'choice': u'Fixed_Term'}, u'addedFeatureGroupsIds': [u'2f074681b70e4e7e844c917e2e7adab4'], u'requirementsAndConstrains': u'abcdef', u'name': u'c8ee35d8-60ce-4d88-b71c...</msg>
<status status="PASS" endtime="20170918 12:23:43.208" starttime="20170918 12:23:43.207"></status>
</kw>
<msg timestamp="20170918 12:23:43.208" level="TRACE">Return: {'addedFeatureGroupsIds': ['2f074681b70e4e7e844c917e2e7adab4'], 'description': 'vendor license agreement', 'licenseTerm': {'choice': 'Fixed_Term', 'other': ''}, 'name': 'c8ee35d8-60ce-4d88-b71c', 'requirementsAndConstrains': 'abcdef'}</msg>
<msg timestamp="20170918 12:23:43.209" level="INFO">${returned_json} = {u'licenseTerm': {u'other': u'', u'choice': u'Fixed_Term'}, u'addedFeatureGroupsIds': [u'2f074681b70e4e7e844c917e2e7adab4'], u'requirementsAndConstrains': u'abcdef', u'name': u'c8ee35d8-60ce-4d88-b71c...</msg>
<status status="PASS" endtime="20170918 12:23:43.209" starttime="20170918 12:23:43.205"></status>
</kw>
<msg timestamp="20170918 12:23:43.209" level="TRACE">Return: {'addedFeatureGroupsIds': ['2f074681b70e4e7e844c917e2e7adab4'], 'description': 'vendor license agreement', 'licenseTerm': {'choice': 'Fixed_Term', 'other': ''}, 'name': 'c8ee35d8-60ce-4d88-b71c', 'requirementsAndConstrains': 'abcdef'}</msg>
<msg timestamp="20170918 12:23:43.209" level="INFO">${data} = {u'licenseTerm': {u'other': u'', u'choice': u'Fixed_Term'}, u'addedFeatureGroupsIds': [u'2f074681b70e4e7e844c917e2e7adab4'], u'requirementsAndConstrains': u'abcdef', u'name': u'c8ee35d8-60ce-4d88-b71c...</msg>
<status status="PASS" endtime="20170918 12:23:43.209" starttime="20170918 12:23:43.202"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${license_model_id}/versions/${version_id}${ASDC_VENDOR_LICENSE_AGREEMENT_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.211" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/license-agreements' | ${data}={'addedFeatureGroupsIds': ['2f074681b70e4e7e844c917e2e7adab4'], 'description': 'vendor license agreement', 'licenseTerm': {'choice': 'Fixed_Term', 'other': ''}, 'name': 'c8ee35d8-60ce-4d88-b71c', 'requirementsAndConstrains': 'abcdef'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:43.212" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:43.212" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:43.212" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:43.212" starttime="20170918 12:23:43.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.213" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:43.213" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:43.213" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.213" starttime="20170918 12:23:43.212"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:43.214" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:43.214" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707b552d0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:43.214" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:43.214" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:43.215" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707b67410&gt;</msg>
<msg timestamp="20170918 12:23:43.215" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707b67410&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.215" starttime="20170918 12:23:43.213"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.215" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:43.215" level="TRACE">Return: UUID('32cbb5be-ee00-47e1-99a3-7f6e2a04467e')</msg>
<msg timestamp="20170918 12:23:43.216" level="INFO">${uuid} = 32cbb5be-ee00-47e1-99a3-7f6e2a04467e</msg>
<status status="PASS" endtime="20170918 12:23:43.216" starttime="20170918 12:23:43.215"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:43.216" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:43.217" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-32cbb5be-ee00-47e1-99a3-7f6e2a04467e'}</msg>
<msg timestamp="20170918 12:23:43.217" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-32cbb5be-ee00-47e1-99a3-7f6e2a04467e', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:43.217" starttime="20170918 12:23:43.216"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.218" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/license-agreements' | data={'addedFeatureGroupsIds': ['2f074681b70e4e7e844c917e2e7adab4'], 'description': 'vendor license agreement', 'licenseTerm': {'choice': 'Fixed_Term', 'other': ''}, 'name': 'c8ee35d8-60ce-4d88-b71c', 'requirementsAndConstrains': 'abcdef'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-32cbb5be-ee00-47e1-99a3-7f6e2a04467e'} ]</msg>
<msg timestamp="20170918 12:23:43.220" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:43.284" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/license-agreements HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:43.285" level="DEBUG">post response: {"value":"819d62378a0f43d2ad65b5101c5b33ee"}</msg>
<msg timestamp="20170918 12:23:43.286" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/license-agreements, data={"licenseTerm": {"other": "", "choice": "Fixed_Term"}, "addedFeatureGroupsIds": ["2f074681b70e4e7e844c917e2e7adab4"], "requirementsAndConstrains": "abcdef", "name": "c8ee35d8-60ce-4d88-b71c", "description": "vendor license agreement"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-32cbb5be-ee00-47e1-99a3-7f6e2a04467e', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:43.286" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.286" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.286" starttime="20170918 12:23:43.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.287" level="TRACE">Arguments: [ 'Received response from asdc {"value":"819d62378a0f43d2ad65b5101c5b33ee"}' ]</msg>
<msg timestamp="20170918 12:23:43.287" level="INFO">Received response from asdc {"value":"819d62378a0f43d2ad65b5101c5b33ee"}</msg>
<msg timestamp="20170918 12:23:43.287" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.287" starttime="20170918 12:23:43.287"></status>
</kw>
<msg timestamp="20170918 12:23:43.288" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.288" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.288" starttime="20170918 12:23:43.210"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:43.289" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:43.289" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:43.289" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.289" starttime="20170918 12:23:43.288"></status>
</kw>
<msg timestamp="20170918 12:23:43.289" level="TRACE">Return: '819d62378a0f43d2ad65b5101c5b33ee'</msg>
<msg timestamp="20170918 12:23:43.289" level="INFO">${license_agreement_id} = 819d62378a0f43d2ad65b5101c5b33ee</msg>
<status status="PASS" endtime="20170918 12:23:43.290" starttime="20170918 12:23:43.197"></status>
</kw>
<kw name="Checkin ASDC License Model" library="asdc_interface">
<doc>checksin an asdc license model by its id</doc>
<arguments>
<arg>${license_model_id}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.290" level="TRACE">Arguments: [ ${id}='3c40753304454266a51ba7647f9983ae' | ${version_id}='0.1' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>action=Checkin</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:43.291" level="TRACE">Arguments: [ 'action=Checkin' ]</msg>
<msg timestamp="20170918 12:23:43.291" level="TRACE">Return: {'action': 'Checkin'}</msg>
<msg timestamp="20170918 12:23:43.291" level="INFO">${map} = {u'action': u'Checkin'}</msg>
<status status="PASS" endtime="20170918 12:23:43.292" starttime="20170918 12:23:43.291"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_ACTION_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:43.292" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/action.template' | ${arguments}={'action': 'Checkin'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:43.293" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/action.template' ]</msg>
<msg timestamp="20170918 12:23:43.293" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/action.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/action.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:43.294" level="TRACE">Return: '{\n  "action": "${action}"\n}'</msg>
<msg timestamp="20170918 12:23:43.294" level="INFO">${json} = {
  "action": "${action}"
}</msg>
<status status="PASS" endtime="20170918 12:23:43.294" starttime="20170918 12:23:43.293"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.294" level="TRACE">Arguments: [ ${json}='{\n  "action": "${action}"\n}' | ${arguments}={'action': 'Checkin'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:43.295" level="TRACE">Arguments: [ '{\n  "action": "${action}"\n}' | {'action': 'Checkin'} ]</msg>
<msg timestamp="20170918 12:23:43.296" level="TRACE">Return: '{\n  "action": "Checkin"\n}'</msg>
<msg timestamp="20170918 12:23:43.296" level="INFO">${returned_string} = {
  "action": "Checkin"
}</msg>
<status status="PASS" endtime="20170918 12:23:43.296" starttime="20170918 12:23:43.295"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.296" level="TRACE">Arguments: [ '{\n  "action": "Checkin"\n}' ]</msg>
<msg timestamp="20170918 12:23:43.296" level="INFO">To JSON using : content={
  "action": "Checkin"
} </msg>
<msg timestamp="20170918 12:23:43.297" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:43.297" level="TRACE">Return: {'action': 'Checkin'}</msg>
<msg timestamp="20170918 12:23:43.297" level="INFO">${returned_json} = {u'action': u'Checkin'}</msg>
<status status="PASS" endtime="20170918 12:23:43.297" starttime="20170918 12:23:43.296"></status>
</kw>
<msg timestamp="20170918 12:23:43.297" level="TRACE">Return: {'action': 'Checkin'}</msg>
<msg timestamp="20170918 12:23:43.297" level="INFO">${returned_json} = {u'action': u'Checkin'}</msg>
<status status="PASS" endtime="20170918 12:23:43.297" starttime="20170918 12:23:43.294"></status>
</kw>
<msg timestamp="20170918 12:23:43.297" level="TRACE">Return: {'action': 'Checkin'}</msg>
<msg timestamp="20170918 12:23:43.298" level="INFO">${data} = {u'action': u'Checkin'}</msg>
<status status="PASS" endtime="20170918 12:23:43.298" starttime="20170918 12:23:43.292"></status>
</kw>
<kw name="Run ASDC Put Request" library="asdc_interface">
<doc>Runs an ASDC put request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${id}/versions/${version_id}${ASDC_VENDOR_ACTIONS_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.300" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/actions' | ${data}={'action': 'Checkin'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:43.302" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:43.302" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:43.302" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:43.302" starttime="20170918 12:23:43.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.303" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:43.303" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:43.303" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.303" starttime="20170918 12:23:43.303"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:43.304" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:43.305" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707b86090&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:43.305" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:43.305" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:43.305" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707b40810&gt;</msg>
<msg timestamp="20170918 12:23:43.305" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707b40810&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.306" starttime="20170918 12:23:43.304"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.306" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:43.306" level="TRACE">Return: UUID('42727f99-2618-48f2-96fe-92da070cacec')</msg>
<msg timestamp="20170918 12:23:43.306" level="INFO">${uuid} = 42727f99-2618-48f2-96fe-92da070cacec</msg>
<status status="PASS" endtime="20170918 12:23:43.306" starttime="20170918 12:23:43.306"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:43.307" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:43.308" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-42727f99-2618-48f2-96fe-92da070cacec'}</msg>
<msg timestamp="20170918 12:23:43.308" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-42727f99-2618-48f2-96fe-92da070cacec', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:43.308" starttime="20170918 12:23:43.307"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.309" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/actions' | data={'action': 'Checkin'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-42727f99-2618-48f2-96fe-92da070cacec'} ]</msg>
<msg timestamp="20170918 12:23:43.311" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:43.362" level="DEBUG">http://192.168.20.35:8080 "PUT /onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/actions HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:43.363" level="DEBUG">put response: {}</msg>
<msg timestamp="20170918 12:23:43.363" level="INFO">Put Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/actions, data={"action": "Checkin"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-42727f99-2618-48f2-96fe-92da070cacec', u'X-FromAppId': u'robot-ete'}, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:43.363" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.363" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.363" starttime="20170918 12:23:43.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.364" level="TRACE">Arguments: [ 'Received response from asdc {}' ]</msg>
<msg timestamp="20170918 12:23:43.364" level="INFO">Received response from asdc {}</msg>
<msg timestamp="20170918 12:23:43.364" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.365" starttime="20170918 12:23:43.364"></status>
</kw>
<msg timestamp="20170918 12:23:43.365" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.365" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.365" starttime="20170918 12:23:43.298"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:43.366" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:43.366" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:43.366" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.366" starttime="20170918 12:23:43.365"></status>
</kw>
<msg timestamp="20170918 12:23:43.366" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20170918 12:23:43.367" starttime="20170918 12:23:43.290"></status>
</kw>
<kw name="Submit ASDC License Model" library="asdc_interface">
<doc>submits an asdc license model by its id</doc>
<arguments>
<arg>${license_model_id}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.367" level="TRACE">Arguments: [ ${id}='3c40753304454266a51ba7647f9983ae' | ${version_id}='0.1' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>action=Submit</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:43.368" level="TRACE">Arguments: [ 'action=Submit' ]</msg>
<msg timestamp="20170918 12:23:43.368" level="TRACE">Return: {'action': 'Submit'}</msg>
<msg timestamp="20170918 12:23:43.369" level="INFO">${map} = {u'action': u'Submit'}</msg>
<status status="PASS" endtime="20170918 12:23:43.369" starttime="20170918 12:23:43.368"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_ACTION_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:43.370" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/action.template' | ${arguments}={'action': 'Submit'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:43.371" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/action.template' ]</msg>
<msg timestamp="20170918 12:23:43.371" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/action.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/action.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:43.371" level="TRACE">Return: '{\n  "action": "${action}"\n}'</msg>
<msg timestamp="20170918 12:23:43.371" level="INFO">${json} = {
  "action": "${action}"
}</msg>
<status status="PASS" endtime="20170918 12:23:43.372" starttime="20170918 12:23:43.371"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.372" level="TRACE">Arguments: [ ${json}='{\n  "action": "${action}"\n}' | ${arguments}={'action': 'Submit'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:43.373" level="TRACE">Arguments: [ '{\n  "action": "${action}"\n}' | {'action': 'Submit'} ]</msg>
<msg timestamp="20170918 12:23:43.374" level="TRACE">Return: '{\n  "action": "Submit"\n}'</msg>
<msg timestamp="20170918 12:23:43.374" level="INFO">${returned_string} = {
  "action": "Submit"
}</msg>
<status status="PASS" endtime="20170918 12:23:43.374" starttime="20170918 12:23:43.373"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.374" level="TRACE">Arguments: [ '{\n  "action": "Submit"\n}' ]</msg>
<msg timestamp="20170918 12:23:43.375" level="INFO">To JSON using : content={
  "action": "Submit"
} </msg>
<msg timestamp="20170918 12:23:43.375" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:43.375" level="TRACE">Return: {'action': 'Submit'}</msg>
<msg timestamp="20170918 12:23:43.375" level="INFO">${returned_json} = {u'action': u'Submit'}</msg>
<status status="PASS" endtime="20170918 12:23:43.375" starttime="20170918 12:23:43.374"></status>
</kw>
<msg timestamp="20170918 12:23:43.375" level="TRACE">Return: {'action': 'Submit'}</msg>
<msg timestamp="20170918 12:23:43.375" level="INFO">${returned_json} = {u'action': u'Submit'}</msg>
<status status="PASS" endtime="20170918 12:23:43.375" starttime="20170918 12:23:43.372"></status>
</kw>
<msg timestamp="20170918 12:23:43.376" level="TRACE">Return: {'action': 'Submit'}</msg>
<msg timestamp="20170918 12:23:43.376" level="INFO">${data} = {u'action': u'Submit'}</msg>
<status status="PASS" endtime="20170918 12:23:43.376" starttime="20170918 12:23:43.369"></status>
</kw>
<kw name="Run ASDC Put Request" library="asdc_interface">
<doc>Runs an ASDC put request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${id}/versions/${version_id}${ASDC_VENDOR_ACTIONS_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.377" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/actions' | ${data}={'action': 'Submit'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:43.378" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:43.378" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:43.378" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:43.378" starttime="20170918 12:23:43.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.379" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:43.379" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:43.379" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.379" starttime="20170918 12:23:43.379"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:43.380" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:43.380" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707a81990&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:43.380" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:43.381" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:43.381" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707a810d0&gt;</msg>
<msg timestamp="20170918 12:23:43.381" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707a810d0&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.381" starttime="20170918 12:23:43.380"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.382" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:43.382" level="TRACE">Return: UUID('d160e03a-3e9e-4293-b9e7-251bfbdc3fc1')</msg>
<msg timestamp="20170918 12:23:43.382" level="INFO">${uuid} = d160e03a-3e9e-4293-b9e7-251bfbdc3fc1</msg>
<status status="PASS" endtime="20170918 12:23:43.382" starttime="20170918 12:23:43.382"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:43.383" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:43.384" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-d160e03a-3e9e-4293-b9e7-251bfbdc3fc1'}</msg>
<msg timestamp="20170918 12:23:43.384" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-d160e03a-3e9e-4293-b9e7-251bfbdc3fc1', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:43.384" starttime="20170918 12:23:43.383"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.385" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/actions' | data={'action': 'Submit'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-d160e03a-3e9e-4293-b9e7-251bfbdc3fc1'} ]</msg>
<msg timestamp="20170918 12:23:43.386" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:43.485" level="DEBUG">http://192.168.20.35:8080 "PUT /onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/actions HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:43.486" level="DEBUG">put response: {}</msg>
<msg timestamp="20170918 12:23:43.486" level="INFO">Put Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/0.1/actions, data={"action": "Submit"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-d160e03a-3e9e-4293-b9e7-251bfbdc3fc1', u'X-FromAppId': u'robot-ete'}, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:43.486" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.487" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.487" starttime="20170918 12:23:43.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.488" level="TRACE">Arguments: [ 'Received response from asdc {}' ]</msg>
<msg timestamp="20170918 12:23:43.488" level="INFO">Received response from asdc {}</msg>
<msg timestamp="20170918 12:23:43.488" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.488" starttime="20170918 12:23:43.487"></status>
</kw>
<msg timestamp="20170918 12:23:43.488" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.488" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.488" starttime="20170918 12:23:43.376"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:43.489" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20170918 12:23:43.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:43.489" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.489" starttime="20170918 12:23:43.489"></status>
</kw>
<msg timestamp="20170918 12:23:43.490" level="TRACE">Return: {}</msg>
<status status="PASS" endtime="20170918 12:23:43.490" starttime="20170918 12:23:43.367"></status>
</kw>
<kw name="Get ASDC License Model" library="asdc_interface">
<doc>gets an asdc license model by its id</doc>
<arguments>
<arg>${license_model_id}</arg>
<arg>1.0</arg>
</arguments>
<assign>
<var>${license_model_resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.491" level="TRACE">Arguments: [ ${id}='3c40753304454266a51ba7647f9983ae' | ${version_id}='1.0' ]</msg>
<kw name="Run ASDC Get Request" library="asdc_interface">
<doc>Runs an ASDC get request</doc>
<arguments>
<arg>${ASDC_VENDOR_LICENSE_MODEL_PATH}/${id}/versions/${version_id}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.492" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/1.0' | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:43.493" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:43.493" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:43.493" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:43.493" starttime="20170918 12:23:43.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.494" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:43.494" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:43.494" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.494" starttime="20170918 12:23:43.494"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:43.495" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:43.496" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707a6c710&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:43.496" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:43.496" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:43.496" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707a6c790&gt;</msg>
<msg timestamp="20170918 12:23:43.496" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707a6c790&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.496" starttime="20170918 12:23:43.495"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.497" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:43.497" level="TRACE">Return: UUID('4004c4a8-a4a7-4ee4-9f10-14bd1888c34a')</msg>
<msg timestamp="20170918 12:23:43.497" level="INFO">${uuid} = 4004c4a8-a4a7-4ee4-9f10-14bd1888c34a</msg>
<status status="PASS" endtime="20170918 12:23:43.498" starttime="20170918 12:23:43.497"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:43.498" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:43.499" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-4004c4a8-a4a7-4ee4-9f10-14bd1888c34a'}</msg>
<msg timestamp="20170918 12:23:43.500" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-4004c4a8-a4a7-4ee4-9f10-14bd1888c34a', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:43.500" starttime="20170918 12:23:43.498"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.500" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/1.0' | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-4004c4a8-a4a7-4ee4-9f10-14bd1888c34a'} ]</msg>
<msg timestamp="20170918 12:23:43.502" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:43.520" level="DEBUG">http://192.168.20.35:8080 "GET /onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/1.0 HTTP/1.1" 200 None</msg>
<msg timestamp="20170918 12:23:43.521" level="INFO">Get Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-license-models/3c40753304454266a51ba7647f9983ae/versions/1.0, headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-4004c4a8-a4a7-4ee4-9f10-14bd1888c34a', u'X-FromAppId': u'robot-ete'} </msg>
<msg timestamp="20170918 12:23:43.521" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.521" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.521" starttime="20170918 12:23:43.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.522" level="TRACE">Arguments: [ 'Received response from asdc {"vendorName":"aec7f621-7684-4da5-8914","description":"vendor license model","iconRef":"icon","id":"3c40753304454266a51ba7647f9983ae","version":{"id":"1.0","label":"1.0"},"status":"Final","viewableVersions":[{"id":"1.0","label":"1.0"}],"finalVersions":[{"id":"1.0","label":"1.0"}]}' ]</msg>
<msg timestamp="20170918 12:23:43.522" level="INFO">Received response from asdc {"vendorName":"aec7f621-7684-4da5-8914","description":"vendor license model","iconRef":"icon","id":"3c40753304454266a51ba7647f9983ae","version":{"id":"1.0","label":"1.0"},"status":"Final","viewableVersions":[{"id":"1.0","label":"1.0"}],"finalVersions":[{"id":"1.0","label":"1.0"}]}</msg>
<msg timestamp="20170918 12:23:43.522" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.522" starttime="20170918 12:23:43.522"></status>
</kw>
<msg timestamp="20170918 12:23:43.523" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20170918 12:23:43.523" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.523" starttime="20170918 12:23:43.491"></status>
</kw>
<msg timestamp="20170918 12:23:43.523" level="TRACE">Return: {'description': 'vendor license model', 'finalVersions': [{'id': '1.0', 'label': '1.0'}], 'iconRef': 'icon', 'id': '3c40753304454266a51ba7647f9983ae', 'status': 'Final', 'vendorName': 'aec7f621-7684-4da5-8914', 'version': {'id': '1.0', 'label': '1.0'}, 'viewableVersions': [{'id': '1.0', 'label': '1.0'}]}</msg>
<msg timestamp="20170918 12:23:43.524" level="INFO">${license_model_resp} = {u'status': u'Final', u'iconRef': u'icon', u'viewableVersions': [{u'id': u'1.0', u'label': u'1.0'}], u'vendorName': u'aec7f621-7684-4da5-8914', u'version': {u'id': u'1.0', u'label': u'1.0'}, u'finalVe...</msg>
<status status="PASS" endtime="20170918 12:23:43.524" starttime="20170918 12:23:43.490"></status>
</kw>
<kw name="Add ASDC Software Product" library="asdc_interface">
<doc>Creates an asdc Software Product and returns its id</doc>
<arguments>
<arg>${license_agreement_id}</arg>
<arg>${feature_group_id}</arg>
<arg>${license_model_resp['vendorName']}</arg>
<arg>${license_model_id}</arg>
</arguments>
<assign>
<var>${software_product_id}</var>
</assign>
<msg timestamp="20170918 12:23:43.525" level="TRACE">Arguments: [ ${license_agreement_id}='819d62378a0f43d2ad65b5101c5b33ee' | ${feature_group_id}='2f074681b70e4e7e844c917e2e7adab4' | ${license_model_name}='aec7f621-7684-4da5-8914' | ${license_model_id}='3c40753304454266a51ba7647f9983ae' ]</msg>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.526" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:43.526" level="TRACE">Return: UUID('1b6c3a90-f6b2-450c-aa4d-ce5a55c659f6')</msg>
<msg timestamp="20170918 12:23:43.526" level="INFO">${uuid} = 1b6c3a90-f6b2-450c-aa4d-ce5a55c659f6</msg>
<status status="PASS" endtime="20170918 12:23:43.526" starttime="20170918 12:23:43.526"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>str("${uuid}")[:23]</arg>
</arguments>
<assign>
<var>${shortened_uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.527" level="TRACE">Arguments: [ 'str("1b6c3a90-f6b2-450c-aa4d-ce5a55c659f6")[:23]' ]</msg>
<msg timestamp="20170918 12:23:43.527" level="TRACE">Return: b'1b6c3a90-f6b2-450c-aa4d'</msg>
<msg timestamp="20170918 12:23:43.527" level="INFO">${shortened_uuid} = 1b6c3a90-f6b2-450c-aa4d</msg>
<status status="PASS" endtime="20170918 12:23:43.527" starttime="20170918 12:23:43.527"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>software_product_name=${shortened_uuid}</arg>
<arg>feature_group_id=${feature_group_id}</arg>
<arg>license_agreement_id=${license_agreement_id}</arg>
<arg>vendor_name=${license_model_name}</arg>
<arg>vendor_id=${license_model_id}</arg>
</arguments>
<assign>
<var>${map}</var>
</assign>
<msg timestamp="20170918 12:23:43.528" level="TRACE">Arguments: [ 'software_product_name=${shortened_uuid}' | 'feature_group_id=${feature_group_id}' | 'license_agreement_id=${license_agreement_id}' | 'vendor_name=${license_model_name}' | 'vendor_id=${license_model_id}' ]</msg>
<msg timestamp="20170918 12:23:43.529" level="TRACE">Return: {'feature_group_id': '2f074681b70e4e7e844c917e2e7adab4', 'license_agreement_id': '819d62378a0f43d2ad65b5101c5b33ee', 'software_product_name': b'1b6c3a90-f6b2-450c-aa4d', 'vendor_id': '3c40753304454266a51ba7647f9983ae', 'vendor_name': 'aec7f621-7684-4da5-8914'}</msg>
<msg timestamp="20170918 12:23:43.529" level="INFO">${map} = {u'software_product_name': '1b6c3a90-f6b2-450c-aa4d', u'feature_group_id': u'2f074681b70e4e7e844c917e2e7adab4', u'license_agreement_id': u'819d62378a0f43d2ad65b5101c5b33ee', u'vendor_name': u'aec7f621...</msg>
<status status="PASS" endtime="20170918 12:23:43.529" starttime="20170918 12:23:43.528"></status>
</kw>
<kw name="Fill JSON Template File" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${ASDC_SOFTWARE_PRODUCT_TEMPLATE}</arg>
<arg>${map}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170918 12:23:43.530" level="TRACE">Arguments: [ ${json_file}='robot/assets/templates/asdc/software_product.template' | ${arguments}={'feature_group_id': '2f074681b70e4e7e844c917e2e7adab4', 'license_agreement_id': '819d62378a0f43d2ad65b5101c5b33ee', 'software_product_name': b'1b6c3a90-f6b2-450c-aa4d', 'vendor_id': '3c40753304454266a51ba7647f9983ae', 'vendor_name': 'aec7f621-7684-4da5-8914'} ]</msg>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${json_file}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170918 12:23:43.531" level="TRACE">Arguments: [ 'robot/assets/templates/asdc/software_product.template' ]</msg>
<msg timestamp="20170918 12:23:43.531" html="yes" level="INFO">Getting file '&lt;a href="file:///var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/software_product.template"&gt;/var/opt/OpenECOMP_ETE/robot/assets/templates/asdc/software_product.template&lt;/a&gt;'.</msg>
<msg timestamp="20170918 12:23:43.531" level="TRACE">Return: '{\n  "name": "${software_product_name}",\n  "description": "vendor software product",\n  "category": "resourceNewCategory.generic",\n  "subCategory": "resourceNewCategory.generic.abstract",\n  "onboardingMethod" : "HEAT",\n  "licensingVersion":  {\n        "id" : "1.0",\n        "label" : "1.0"\n        },\n  "vendorName": "${vendor_name}",\n  "vendorId": "${vendor_id}",\n  "icon": "icon",\n  "licensingData": {\n    "licenseAgreement": "${license_agreement_id}",\n    "featureGroups": [\n      "${feature_group_id}"\n    ]\n  }\n}'</msg>
<msg timestamp="20170918 12:23:43.531" level="INFO">${json} = {
  "name": "${software_product_name}",
  "description": "vendor software product",
  "category": "resourceNewCategory.generic",
  "subCategory": "resourceNewCategory.generic.abstract",
  "onboardingM...</msg>
<status status="PASS" endtime="20170918 12:23:43.532" starttime="20170918 12:23:43.531"></status>
</kw>
<kw name="Fill JSON Template" library="json_templater">
<doc>Runs substitution on template to return a filled in json</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.532" level="TRACE">Arguments: [ ${json}='{\n  "name": "${software_product_name}",\n  "description": "vendor software product",\n  "category": "resourceNewCategory.generic",\n  "subCategory": "resourceNewCategory.generic.abstract",\n  "onboardingMethod" : "HEAT",\n  "licensingVersion":  {\n        "id" : "1.0",\n        "label" : "1.0"\n        },\n  "vendorName": "${vendor_name}",\n  "vendorId": "${vendor_id}",\n  "icon": "icon",\n  "licensingData": {\n    "licenseAgreement": "${license_agreement_id}",\n    "featureGroups": [\n      "${feature_group_id}"\n    ]\n  }\n}' | ${arguments}={'feature_group_id': '2f074681b70e4e7e844c917e2e7adab4', 'license_agreement_id': '819d62378a0f43d2ad65b5101c5b33ee', 'software_product_name': b'1b6c3a90-f6b2-450c-aa4d', 'vendor_id': '3c40753304454266a51ba7647f9983ae', 'vendor_name': 'aec7f621-7684-4da5-8914'} ]</msg>
<kw name="Template String" library="StringTemplater">
<doc>Template String takes in a string and its values and converts it using the string.Template class</doc>
<arguments>
<arg>${json}</arg>
<arg>${arguments}</arg>
</arguments>
<assign>
<var>${returned_string}</var>
</assign>
<msg timestamp="20170918 12:23:43.533" level="TRACE">Arguments: [ '{\n  "name": "${software_product_name}",\n  "description": "vendor software product",\n  "category": "resourceNewCategory.generic",\n  "subCategory": "resourceNewCategory.generic.abstract",\n  "onboardingMethod" : "HEAT",\n  "licensingVersion":  {\n        "id" : "1.0",\n        "label" : "1.0"\n        },\n  "vendorName": "${vendor_name}",\n  "vendorId": "${vendor_id}",\n  "icon": "icon",\n  "licensingData": {\n    "licenseAgreement": "${license_agreement_id}",\n    "featureGroups": [\n      "${feature_group_id}"\n    ]\n  }\n}' | {'feature_group_id': '2f074681b70e4e7e844c917e2e7adab4', 'license_agreement_id': '819d62378a0f43d2ad65b5101c5b33ee', 'software_product_name': b'1b6c3a90-f6b2-450c-aa4d', 'vendor_id': '3c40753304454266a51ba7647f9983ae', 'vendor_name': 'aec7f621-7684-4da5-8914'} ]</msg>
<msg timestamp="20170918 12:23:43.534" level="TRACE">Return: '{\n  "name": "1b6c3a90-f6b2-450c-aa4d",\n  "description": "vendor software product",\n  "category": "resourceNewCategory.generic",\n  "subCategory": "resourceNewCategory.generic.abstract",\n  "onboardingMethod" : "HEAT",\n  "licensingVersion":  {\n        "id" : "1.0",\n        "label" : "1.0"\n        },\n  "vendorName": "aec7f621-7684-4da5-8914",\n  "vendorId": "3c40753304454266a51ba7647f9983ae",\n  "icon": "icon",\n  "licensingData": {\n    "licenseAgreement": "819d62378a0f43d2ad65b5101c5b33ee",\n    "featureGroups": [\n      "2f074681b70e4e7e844c917e2e7adab4"\n    ]\n  }\n}'</msg>
<msg timestamp="20170918 12:23:43.534" level="INFO">${returned_string} = {
  "name": "1b6c3a90-f6b2-450c-aa4d",
  "description": "vendor software product",
  "category": "resourceNewCategory.generic",
  "subCategory": "resourceNewCategory.generic.abstract",
  "onboardingMe...</msg>
<status status="PASS" endtime="20170918 12:23:43.534" starttime="20170918 12:23:43.533"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${returned_string}</arg>
</arguments>
<assign>
<var>${returned_json}</var>
</assign>
<msg timestamp="20170918 12:23:43.535" level="TRACE">Arguments: [ '{\n  "name": "1b6c3a90-f6b2-450c-aa4d",\n  "description": "vendor software product",\n  "category": "resourceNewCategory.generic",\n  "subCategory": "resourceNewCategory.generic.abstract",\n  "onboardingMethod" : "HEAT",\n  "licensingVersion":  {\n        "id" : "1.0",\n        "label" : "1.0"\n        },\n  "vendorName": "aec7f621-7684-4da5-8914",\n  "vendorId": "3c40753304454266a51ba7647f9983ae",\n  "icon": "icon",\n  "licensingData": {\n    "licenseAgreement": "819d62378a0f43d2ad65b5101c5b33ee",\n    "featureGroups": [\n      "2f074681b70e4e7e844c917e2e7adab4"\n    ]\n  }\n}' ]</msg>
<msg timestamp="20170918 12:23:43.535" level="INFO">To JSON using : content={
  "name": "1b6c3a90-f6b2-450c-aa4d",
  "description": "vendor software product",
  "category": "resourceNewCategory.generic",
  "subCategory": "resourceNewCategory.generic.abstract",
  "onboardingMethod" : "HEAT",
  "licensingVersion":  {
        "id" : "1.0",
        "label" : "1.0"
        },
  "vendorName": "aec7f621-7684-4da5-8914",
  "vendorId": "3c40753304454266a51ba7647f9983ae",
  "icon": "icon",
  "licensingData": {
    "licenseAgreement": "819d62378a0f43d2ad65b5101c5b33ee",
    "featureGroups": [
      "2f074681b70e4e7e844c917e2e7adab4"
    ]
  }
} </msg>
<msg timestamp="20170918 12:23:43.535" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170918 12:23:43.535" level="TRACE">Return: {'category': 'resourceNewCategory.generic',
 'description': 'vendor software product',
 'icon': 'icon',
 'licensingData': {'featureGroups': ['2f074681b70e4e7e844c917e2e7adab4'], 'licenseAgreement': '819d62378a0f43d2ad65b5101c5b33ee'},
 'licensingVersion': {'id': '1.0', 'label': '1.0'},
 'name': '1b6c3a90-f6b2-450c-aa4d',
 'onboardingMethod': 'HEAT',
 'subCategory': 'resourceNewCategory.generic.abstract',
 'vendorId': '3c40753304454266a51ba7647f9983ae',
 'vendorName': 'aec7f621-7684-4da5-8914'}</msg>
<msg timestamp="20170918 12:23:43.535" level="INFO">${returned_json} = {u'category': u'resourceNewCategory.generic', u'vendorId': u'3c40753304454266a51ba7647f9983ae', u'subCategory': u'resourceNewCategory.generic.abstract', u'description': u'vendor software product', u'l...</msg>
<status status="PASS" endtime="20170918 12:23:43.535" starttime="20170918 12:23:43.534"></status>
</kw>
<msg timestamp="20170918 12:23:43.536" level="TRACE">Return: {'category': 'resourceNewCategory.generic',
 'description': 'vendor software product',
 'icon': 'icon',
 'licensingData': {'featureGroups': ['2f074681b70e4e7e844c917e2e7adab4'], 'licenseAgreement': '819d62378a0f43d2ad65b5101c5b33ee'},
 'licensingVersion': {'id': '1.0', 'label': '1.0'},
 'name': '1b6c3a90-f6b2-450c-aa4d',
 'onboardingMethod': 'HEAT',
 'subCategory': 'resourceNewCategory.generic.abstract',
 'vendorId': '3c40753304454266a51ba7647f9983ae',
 'vendorName': 'aec7f621-7684-4da5-8914'}</msg>
<msg timestamp="20170918 12:23:43.536" level="INFO">${returned_json} = {u'category': u'resourceNewCategory.generic', u'vendorId': u'3c40753304454266a51ba7647f9983ae', u'subCategory': u'resourceNewCategory.generic.abstract', u'description': u'vendor software product', u'l...</msg>
<status status="PASS" endtime="20170918 12:23:43.536" starttime="20170918 12:23:43.532"></status>
</kw>
<msg timestamp="20170918 12:23:43.536" level="TRACE">Return: {'category': 'resourceNewCategory.generic',
 'description': 'vendor software product',
 'icon': 'icon',
 'licensingData': {'featureGroups': ['2f074681b70e4e7e844c917e2e7adab4'], 'licenseAgreement': '819d62378a0f43d2ad65b5101c5b33ee'},
 'licensingVersion': {'id': '1.0', 'label': '1.0'},
 'name': '1b6c3a90-f6b2-450c-aa4d',
 'onboardingMethod': 'HEAT',
 'subCategory': 'resourceNewCategory.generic.abstract',
 'vendorId': '3c40753304454266a51ba7647f9983ae',
 'vendorName': 'aec7f621-7684-4da5-8914'}</msg>
<msg timestamp="20170918 12:23:43.537" level="INFO">${data} = {u'category': u'resourceNewCategory.generic', u'vendorId': u'3c40753304454266a51ba7647f9983ae', u'subCategory': u'resourceNewCategory.generic.abstract', u'description': u'vendor software product', u'l...</msg>
<status status="PASS" endtime="20170918 12:23:43.537" starttime="20170918 12:23:43.529"></status>
</kw>
<kw name="Run ASDC Post Request" library="asdc_interface">
<doc>Runs an ASDC post request</doc>
<arguments>
<arg>${ASDC_VENDOR_SOFTWARE_PRODUCT_PATH}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.538" level="TRACE">Arguments: [ ${data_path}='/onboarding-api/v1.0/vendor-software-products' | ${data}={'category': 'resourceNewCategory.generic',
 'description': 'vendor software product',
 'icon': 'icon',
 'licensingData': {'featureGroups': ['2f074681b70e4e7e844c917e2e7adab4'], 'licenseAgreement': '819d62378a0f43d2ad65b5101c5b33ee'},
 'licensingVersion': {'id': '1.0', 'label': '1.0'},
 'name': '1b6c3a90-f6b2-450c-aa4d',
 'onboardingMethod': 'HEAT',
 'subCategory': 'resourceNewCategory.generic.abstract',
 'vendorId': '3c40753304454266a51ba7647f9983ae',
 'vendorName': 'aec7f621-7684-4da5-8914'} | ${user}='cs0008' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_ASDC_BE_USERNAME}</arg>
<arg>${GLOBAL_ASDC_BE_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20170918 12:23:43.539" level="TRACE">Arguments: [ b'beep' | b'boop' ]</msg>
<msg timestamp="20170918 12:23:43.539" level="TRACE">Return: [b'beep', b'boop']</msg>
<msg timestamp="20170918 12:23:43.539" level="INFO">${auth} = ['beep', 'boop']</msg>
<status status="PASS" endtime="20170918 12:23:43.539" starttime="20170918 12:23:43.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Creating session ${ASDC_BE_ENDPOINT}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.540" level="TRACE">Arguments: [ 'Creating session http://192.168.20.35:8080' ]</msg>
<msg timestamp="20170918 12:23:43.540" level="INFO">Creating session http://192.168.20.35:8080</msg>
<msg timestamp="20170918 12:23:43.540" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.540" starttime="20170918 12:23:43.540"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>asdc</arg>
<arg>${ASDC_BE_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20170918 12:23:43.541" level="TRACE">Arguments: [ 'asdc' | 'http://192.168.20.35:8080' | auth=[b'beep', b'boop'] ]</msg>
<msg timestamp="20170918 12:23:43.541" level="INFO">Creating Session using : alias=asdc, url=http://192.168.20.35:8080, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fa707a05590&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20170918 12:23:43.541" level="DEBUG">Creating session: asdc</msg>
<msg timestamp="20170918 12:23:43.542" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20170918 12:23:43.542" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fa707a05690&gt;</msg>
<msg timestamp="20170918 12:23:43.543" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fa707a05690&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.543" starttime="20170918 12:23:43.541"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20170918 12:23:43.543" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20170918 12:23:43.543" level="TRACE">Return: UUID('384faba0-0d52-47d5-91b3-5a57888f2684')</msg>
<msg timestamp="20170918 12:23:43.543" level="INFO">${uuid} = 384faba0-0d52-47d5-91b3-5a57888f2684</msg>
<status status="PASS" endtime="20170918 12:23:43.543" starttime="20170918 12:23:43.543"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>USER_ID=${user}</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170918 12:23:43.544" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'USER_ID=${user}' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20170918 12:23:43.545" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-384faba0-0d52-47d5-91b3-5a57888f2684'}</msg>
<msg timestamp="20170918 12:23:43.545" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-384faba0-0d52-47d5-91b3-5a57888f2684', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20170918 12:23:43.545" starttime="20170918 12:23:43.544"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>asdc</arg>
<arg>${data_path}</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170918 12:23:43.546" level="TRACE">Arguments: [ 'asdc' | '/onboarding-api/v1.0/vendor-software-products' | data={'category': 'resourceNewCategory.generic',
 'description': 'vendor software product',
 'icon': 'icon',
 'licensingData': {'featureGroups': ['2f074681b70e4e7e844c917e2e7adab4'], 'licenseAgreement': '819d62378a0f43d2ad65b5101c5b33ee'},
 'licensingVersion': {'id': '1.0', 'label': '1.0'},
 'name': '1b6c3a90-f6b2-450c-aa4d',
 'onboardingMethod': 'HEAT',
 'subCategory': 'resourceNewCategory.generic.abstract',
 'vendorId': '3c40753304454266a51ba7647f9983ae',
 'vendorName': 'aec7f621-7684-4da5-8914'} | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'USER_ID': 'cs0008', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-384faba0-0d52-47d5-91b3-5a57888f2684'} ]</msg>
<msg timestamp="20170918 12:23:43.548" level="DEBUG">Starting new HTTP connection (1): 192.168.20.35</msg>
<msg timestamp="20170918 12:23:43.554" level="DEBUG">http://192.168.20.35:8080 "POST /onboarding-api/v1.0/vendor-software-products HTTP/1.1" 500 None</msg>
<msg timestamp="20170918 12:23:43.554" level="DEBUG">post response: {"status":"INTERNAL_SERVER_ERROR","errorCode":"GENERAL_ERROR_REST_ID","message":"An error has occurred: No enum constant org.openecomp.sdcrests.vendorsoftwareproducts.types.OnboardingMethod.HEAT"}</msg>
<msg timestamp="20170918 12:23:43.554" level="INFO">Post Request using : alias=asdc, uri=/onboarding-api/v1.0/vendor-software-products, data={"category": "resourceNewCategory.generic", "vendorId": "3c40753304454266a51ba7647f9983ae", "subCategory": "resourceNewCategory.generic.abstract", "description": "vendor software product", "licensingVersion": {"id": "1.0", "label": "1.0"}, "licensingData": {"featureGroups": ["2f074681b70e4e7e844c917e2e7adab4"], "licenseAgreement": "819d62378a0f43d2ad65b5101c5b33ee"}, "icon": "icon", "onboardingMethod": "HEAT", "vendorName": "aec7f621-7684-4da5-8914", "name": "1b6c3a90-f6b2-450c-aa4d"},                     headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'USER_ID': u'cs0008', u'X-TransactionId': u'robot-ete-384faba0-0d52-47d5-91b3-5a57888f2684', u'X-FromAppId': u'robot-ete'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170918 12:23:43.554" level="TRACE">Return: &lt;Response [500]&gt;</msg>
<msg timestamp="20170918 12:23:43.555" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.555" starttime="20170918 12:23:43.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from asdc ${resp.text}</arg>
</arguments>
<msg timestamp="20170918 12:23:43.555" level="TRACE">Arguments: [ 'Received response from asdc {"status":"INTERNAL_SERVER_ERROR","errorCode":"GENERAL_ERROR_REST_ID","message":"An error has occurred: No enum constant org.openecomp.sdcrests.vendorsoftwareproducts.types.OnboardingMethod.HEAT"}' ]</msg>
<msg timestamp="20170918 12:23:43.556" level="INFO">Received response from asdc {"status":"INTERNAL_SERVER_ERROR","errorCode":"GENERAL_ERROR_REST_ID","message":"An error has occurred: No enum constant org.openecomp.sdcrests.vendorsoftwareproducts.types.OnboardingMethod.HEAT"}</msg>
<msg timestamp="20170918 12:23:43.556" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.556" starttime="20170918 12:23:43.555"></status>
</kw>
<msg timestamp="20170918 12:23:43.556" level="TRACE">Return: &lt;Response [500]&gt;</msg>
<msg timestamp="20170918 12:23:43.556" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170918 12:23:43.556" starttime="20170918 12:23:43.537"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170918 12:23:43.557" level="TRACE">Arguments: [ 500 | '200' ]</msg>
<msg timestamp="20170918 12:23:43.557" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170918 12:23:43.557" level="FAIL">500 != 200</msg>
<msg timestamp="20170918 12:23:43.557" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20170918 12:23:43.557" starttime="20170918 12:23:43.557"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:43.558" starttime="20170918 12:23:43.524"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:43.558" starttime="20170918 12:23:42.928"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:43.558" starttime="20170918 12:23:42.928"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:43.558" starttime="20170918 12:23:42.928"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:43.558" starttime="20170918 12:23:41.766"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:43.559" starttime="20170918 12:23:41.742"></status>
</kw>
<status status="FAIL" endtime="20170918 12:23:43.559" starttime="20170918 12:23:41.741"></status>
</kw>
<msg timestamp="20170918 12:23:43.559" level="TRACE">Return: (b'FAIL', '500 != 200')</msg>
<msg timestamp="20170918 12:23:43.559" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170918 12:23:43.559" level="INFO">${value} = 500 != 200</msg>
<status status="PASS" endtime="20170918 12:23:43.559" starttime="20170918 12:23:41.740"></status>
</kw>
<msg timestamp="20170918 12:23:43.559" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.559" starttime="20170918 12:23:38.580"></status>
</kw>
<msg timestamp="20170918 12:23:43.559" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20170918 12:23:43.560" starttime="20170918 12:23:27.591"></status>
</kw>
<tags>
<tag>InitDemo</tag>
</tags>
<status status="PASS" endtime="20170918 12:23:43.560" critical="yes" starttime="20170918 12:23:27.589"></status>
</test>
<doc>Executes the VNF Orchestration Test cases including setup and teardown
</doc>
<status status="PASS" endtime="20170918 12:23:43.562" starttime="20170918 12:23:25.574"></status>
</suite>
<status status="PASS" endtime="20170918 12:23:43.567" starttime="20170918 12:23:25.571"></status>
</suite>
<status status="PASS" endtime="20170918 12:23:43.569" starttime="20170918 12:23:25.567"></status>
</suite>
<status status="PASS" endtime="20170918 12:23:43.572" starttime="20170918 12:23:25.532"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">InitDemo</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="OpenECOMP ETE" pass="1">OpenECOMP ETE</stat>
<stat fail="0" id="s1-s1" name="Robot" pass="1">OpenECOMP ETE.Robot</stat>
<stat fail="0" id="s1-s1-s1" name="Testsuites" pass="1">OpenECOMP ETE.Robot.Testsuites</stat>
<stat fail="0" id="s1-s1-s1-s1" name="Demo" pass="1">OpenECOMP ETE.Robot.Testsuites.Demo</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
